// Code generated by go-bindata.
// sources:
// static/gitignore/Actionscript
// static/gitignore/Ada
// static/gitignore/Agda
// static/gitignore/Android
// static/gitignore/Anjuta
// static/gitignore/AppEngine
// static/gitignore/AppceleratorTitanium
// static/gitignore/ArchLinuxPackages
// static/gitignore/Archives
// static/gitignore/Autotools
// static/gitignore/BricxCC
// static/gitignore/C
// static/gitignore/C Sharp
// static/gitignore/C++
// static/gitignore/CFWheels
// static/gitignore/CMake
// static/gitignore/CUDA
// static/gitignore/CVS
// static/gitignore/CakePHP
// static/gitignore/ChefCookbook
// static/gitignore/Clojure
// static/gitignore/Cloud9
// static/gitignore/CodeIgniter
// static/gitignore/CodeKit
// static/gitignore/CommonLisp
// static/gitignore/Composer
// static/gitignore/Concrete5
// static/gitignore/Coq
// static/gitignore/CraftCMS
// static/gitignore/DM
// static/gitignore/Dart
// static/gitignore/DartEditor
// static/gitignore/Delphi
// static/gitignore/Dreamweaver
// static/gitignore/Drupal
// static/gitignore/EPiServer
// static/gitignore/Eagle
// static/gitignore/Eclipse
// static/gitignore/EiffelStudio
// static/gitignore/Elisp
// static/gitignore/Elixir
// static/gitignore/Emacs
// static/gitignore/Ensime
// static/gitignore/Erlang
// static/gitignore/Espresso
// static/gitignore/ExpressionEngine
// static/gitignore/ExtJS
// static/gitignore/Fancy
// static/gitignore/Finale
// static/gitignore/FlexBuilder
// static/gitignore/ForceDotCom
// static/gitignore/Fortran
// static/gitignore/FuelPHP
// static/gitignore/GWT
// static/gitignore/Gcov
// static/gitignore/GitBook
// static/gitignore/Go
// static/gitignore/Google Go
// static/gitignore/Gradle
// static/gitignore/Grails
// static/gitignore/Haskell
// static/gitignore/IGORPro
// static/gitignore/IPythonNotebook
// static/gitignore/Idris
// static/gitignore/JDeveloper
// static/gitignore/Java
// static/gitignore/Jboss
// static/gitignore/Jekyll
// static/gitignore/JetBrains
// static/gitignore/Joomla
// static/gitignore/KDevelop4
// static/gitignore/Kate
// static/gitignore/KiCAD
// static/gitignore/Kohana
// static/gitignore/LabVIEW
// static/gitignore/Laravel
// static/gitignore/Lazarus
// static/gitignore/Leiningen
// static/gitignore/LemonStand
// static/gitignore/LibreOffice
// static/gitignore/Lilypond
// static/gitignore/Linux
// static/gitignore/Lithium
// static/gitignore/Lua
// static/gitignore/LyX
// static/gitignore/Magento
// static/gitignore/Matlab
// static/gitignore/Maven
// static/gitignore/Mercurial
// static/gitignore/Mercury
// static/gitignore/MetaProgrammingSystem
// static/gitignore/MicrosoftOffice
// static/gitignore/ModelSim
// static/gitignore/Momentics
// static/gitignore/MonoDevelop
// static/gitignore/Nanoc
// static/gitignore/NetBeans
// static/gitignore/Nim
// static/gitignore/Ninja
// static/gitignore/Node
// static/gitignore/NotepadPP
// static/gitignore/OCaml
// static/gitignore/OSX
// static/gitignore/Objective-C
// static/gitignore/Opa
// static/gitignore/OpenCart
// static/gitignore/OracleForms
// static/gitignore/Packer
// static/gitignore/Perl
// static/gitignore/Phalcon
// static/gitignore/PlayFramework
// static/gitignore/Plone
// static/gitignore/Prestashop
// static/gitignore/Processing
// static/gitignore/Python
// static/gitignore/Qooxdoo
// static/gitignore/Qt
// static/gitignore/R
// static/gitignore/ROS
// static/gitignore/Rails
// static/gitignore/Redcar
// static/gitignore/Redis
// static/gitignore/RhodesRhomobile
// static/gitignore/Ruby
// static/gitignore/Rust
// static/gitignore/SBT
// static/gitignore/SCons
// static/gitignore/SVN
// static/gitignore/Sass
// static/gitignore/Scala
// static/gitignore/Scrivener
// static/gitignore/Sdcc
// static/gitignore/SeamGen
// static/gitignore/SketchUp
// static/gitignore/SlickEdit
// static/gitignore/Stella
// static/gitignore/SublimeText
// static/gitignore/SugarCRM
// static/gitignore/Swift
// static/gitignore/Symfony
// static/gitignore/SymphonyCMS
// static/gitignore/SynopsysVCS
// static/gitignore/Tags
// static/gitignore/TeX
// static/gitignore/TextMate
// static/gitignore/Textpattern
// static/gitignore/TortoiseGit
// static/gitignore/TurboGears2
// static/gitignore/Typo3
// static/gitignore/Umbraco
// static/gitignore/Unity
// static/gitignore/VVVV
// static/gitignore/Vagrant
// static/gitignore/Vim
// static/gitignore/VirtualEnv
// static/gitignore/VisualStudio
// static/gitignore/VisualStudioCode
// static/gitignore/Waf
// static/gitignore/WebMethods
// static/gitignore/Windows
// static/gitignore/WordPress
// static/gitignore/Xcode
// static/gitignore/XilinxISE
// static/gitignore/Xojo
// static/gitignore/Yeoman
// static/gitignore/Yii
// static/gitignore/ZendFramework
// static/gitignore/Zephir
// DO NOT EDIT!

// +build !nobindata

package gitignore

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"strings"
	"os"
	"time"
	"io/ioutil"
	"path/filepath"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name string
	size int64
	mode os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _gitignoreActionscript = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x4c\x90\x41\x4e\x03\x31\x0c\x45\xf7\x73\x0a\x4b\xdd\x96\xcc\x1d\x90\xe8\x92\x22\xe0\x00\x93\x49\x3c\x1d\xa3\x4c\x12\xd9\x8e\x54\x6e\x8f\x9b\x80\xc4\x26\xb1\xac\xef\xef\xe7\x7f\x82\xe7\x46\x29\x82\xcf\x11\xde\x31\xa1\x17\x84\x4b\x49\x11\x59\xa6\x95\xf2\xfc\x78\x9e\x22\xae\xed\x36\x4a\x1e\x9a\x79\x9a\x4e\x70\xd5\x1d\x19\x36\x4a\x28\x7d\x7e\xfb\x9d\x73\x82\xaa\x94\x6f\xd2\x55\x6f\x5c\xbe\x30\xe8\xd0\x9d\x81\x1c\x3a\x58\x5c\x1d\xdd\xe5\x6c\xb5\x0f\x4a\x25\x7f\x04\xa6\xaa\xa6\xae\xc8\x4a\x28\x4b\xf7\x5c\xdc\x96\xf0\xfe\xaf\x6b\x8e\xb2\x97\x66\xc8\xaf\xd7\x4f\x58\x11\xf0\x1e\x52\x8b\x68\x27\x08\x18\xd0\x37\x84\x92\xd5\x53\xb6\xff\xa8\xb6\x93\xe1\x0f\xa7\x1b\x96\x0e\x4d\x47\x2d\xac\x3e\xab\xd9\x51\xde\x0a\x1f\xfe\xc1\x60\x27\x30\xbc\x84\x44\xd5\x62\x98\xe1\x92\xbc\xec\x23\x20\x64\x37\xfd\x04\x00\x00\xff\xff\x01\x21\xc8\x11\x2c\x01\x00\x00")

func gitignoreActionscriptBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreActionscript,
		"gitignore/Actionscript",
	)
}

func gitignoreActionscript() (*asset, error) {
	bytes, err := gitignoreActionscriptBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/Actionscript", size: 300, mode: os.FileMode(420), modTime: time.Unix(1441560244, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _gitignoreAda = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x52\x56\xf0\x4f\xca\x4a\x4d\x2e\x51\x48\xcb\xcc\x49\xe5\xd2\xd2\xcb\xe7\xe2\x52\x56\x70\x4c\x49\x54\xf0\xc9\x4c\x2a\x4a\x2c\xaa\x54\xf0\xcc\x4b\xcb\x2f\xca\x4d\x2c\xc9\xcc\xcf\x03\x4a\x27\xe6\x64\x72\x01\x02\x00\x00\xff\xff\x56\x40\x49\xd4\x33\x00\x00\x00")

func gitignoreAdaBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreAda,
		"gitignore/Ada",
	)
}

func gitignoreAda() (*asset, error) {
	bytes, err := gitignoreAdaBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/Ada", size: 51, mode: os.FileMode(420), modTime: time.Unix(1441560244, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _gitignoreAgda = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xd2\xd2\x4b\x4c\x4f\x49\xcc\xe4\x02\x04\x00\x00\xff\xff\x27\x6c\x17\xd3\x08\x00\x00\x00")

func gitignoreAgdaBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreAgda,
		"gitignore/Agda",
	)
}

func gitignoreAgda() (*asset, error) {
	bytes, err := gitignoreAgdaBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/Agda", size: 8, mode: os.FileMode(420), modTime: time.Unix(1441560244, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _gitignoreAndroid = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x44\x8f\xcd\x4a\x05\x31\x0c\x85\xf7\x7d\x8a\xc0\xdd\xa8\xc8\xdc\x77\x10\x7f\x40\x14\x5c\xb9\x95\x4c\x9b\xe9\x0d\x13\xa6\x21\xed\x5c\xf4\xed\x6d\x6b\x19\x37\x81\xf4\xfb\xe8\x39\x39\xc1\xc3\xce\x52\x00\x55\x85\x3d\x16\x4e\x1b\x2c\x2c\x94\xdd\xdd\x84\xba\xf6\xf9\xe5\xdc\x09\x9e\xdb\x23\x2c\xc9\xa0\x5c\x08\x1e\x51\xae\xbc\xc2\xe7\x7b\x15\x02\x7d\x37\xe1\x15\xaf\x08\x5e\x30\xe7\xe3\x83\xbe\x35\xf6\x42\x1b\x19\x16\x0a\x03\xcd\xbc\x9d\x5d\xa4\x3a\x1a\x34\x0c\x42\x83\x4c\xb1\x6f\x67\x37\xd7\x5a\xa1\xf3\xb7\xe4\x51\xc0\xa7\x6d\xe1\xb8\xdb\x7f\x45\xb8\xc9\x61\x05\xc5\x72\xb9\x07\x2a\xfe\xd6\x49\x13\x27\xb5\xa4\x64\x85\xa9\x27\x7f\x58\x8a\x3b\x5a\x0d\x4e\x12\xc8\x20\x1e\x4d\xe6\x1f\x78\xf2\xc2\x9a\xc9\xe9\x90\x46\x5c\xfc\x3b\xb6\x1e\x20\x29\xba\xdf\x00\x00\x00\xff\xff\x81\xfe\x70\x5f\x22\x01\x00\x00")

func gitignoreAndroidBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreAndroid,
		"gitignore/Android",
	)
}

func gitignoreAndroid() (*asset, error) {
	bytes, err := gitignoreAndroidBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/Android", size: 290, mode: os.FileMode(420), modTime: time.Unix(1441560244, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _gitignoreAnjuta = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x52\x56\xf0\xc9\x4f\x4e\xcc\x51\x48\xce\xcf\x4b\xcb\x4c\x2f\x2d\x4a\x2c\xc9\xcc\xcf\x53\x48\xcb\xcf\x49\x49\x2d\x52\x48\xcc\x4b\x51\x28\xae\xcc\x4d\xca\xcf\x51\x48\x49\x2c\x49\x4c\x4a\x2c\x4e\xe5\xd2\xd7\x4b\xcc\xcb\x2a\x2d\x49\xd4\x87\xb3\xe2\x81\x4a\xe2\x53\x92\xf4\x52\x92\xb8\x00\x01\x00\x00\xff\xff\xa9\xec\x11\xd0\x4e\x00\x00\x00")

func gitignoreAnjutaBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreAnjuta,
		"gitignore/Anjuta",
	)
}

func gitignoreAnjuta() (*asset, error) {
	bytes, err := gitignoreAnjutaBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/Anjuta", size: 78, mode: os.FileMode(420), modTime: time.Unix(1441560244, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _gitignoreAppengine = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x52\x56\x70\xcf\xcf\x4f\xcf\x49\x55\x70\x2c\x28\x50\x70\xcd\x4b\xcf\xcc\x4b\x55\x48\x4f\xcd\x4b\x2d\x4a\x2c\x49\x4d\x51\x48\xcb\xcf\x49\x49\x2d\xe2\x4a\x2c\x28\x48\x05\x4b\xe9\xc2\xa5\xf4\xb9\x00\x01\x00\x00\xff\xff\x16\xc1\xe5\x46\x3a\x00\x00\x00")

func gitignoreAppengineBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreAppengine,
		"gitignore/AppEngine",
	)
}

func gitignoreAppengine() (*asset, error) {
	bytes, err := gitignoreAppengineBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/AppEngine", size: 58, mode: os.FileMode(420), modTime: time.Unix(1441560244, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _gitignoreAppceleratortitanium = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x52\x56\x70\x2a\xcd\xcc\x49\x51\x48\xcb\xcf\x49\x49\x2d\x52\x48\xcc\x4b\x51\xc8\xc9\x4f\x57\x48\xcb\xcc\x49\xe5\x4a\x02\xc9\xe8\x43\x28\x3d\xa0\x28\x17\x20\x00\x00\xff\xff\x9f\xf6\xb1\xea\x2d\x00\x00\x00")

func gitignoreAppceleratortitaniumBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreAppceleratortitanium,
		"gitignore/AppceleratorTitanium",
	)
}

func gitignoreAppceleratortitanium() (*asset, error) {
	bytes, err := gitignoreAppceleratortitaniumBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/AppceleratorTitanium", size: 45, mode: os.FileMode(420), modTime: time.Unix(1441560244, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _gitignoreArchlinuxpackages = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xd2\xd2\x2b\x49\x2c\xe2\x02\x93\x7a\x5a\x40\xba\x2a\xb3\x00\xc4\x4b\xaf\x02\x92\x39\xf9\xe9\x10\x12\x2c\x53\x9c\x99\xce\xc5\xa5\xac\xe0\x18\x1a\xa4\x90\x9b\x5a\x92\x98\x92\x58\x92\xc8\xa5\x07\xe4\x79\xfa\xb9\xf9\x73\xe9\x05\x07\x39\x83\x19\x5c\x05\xd9\xe9\xfa\x5c\xc5\x45\xc9\xfa\x5c\x80\x00\x00\x00\xff\xff\xa8\xa6\xaa\xe7\x5b\x00\x00\x00")

func gitignoreArchlinuxpackagesBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreArchlinuxpackages,
		"gitignore/ArchLinuxPackages",
	)
}

func gitignoreArchlinuxpackages() (*asset, error) {
	bytes, err := gitignoreArchlinuxpackagesBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/ArchLinuxPackages", size: 91, mode: os.FileMode(420), modTime: time.Unix(1441560244, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _gitignoreArchives = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x4c\x8e\x4b\x4e\xc4\x30\x0c\x40\xf7\x39\x85\xa5\x2e\x90\x90\x98\x05\x1b\xce\xc0\x31\x9c\xd4\x93\x1a\xea\x24\x8a\x5d\x0d\xf4\xf4\xd8\xd3\x0d\x9b\x67\xeb\xf9\xbb\xc0\xa7\xbd\x28\x64\x32\xa3\x09\xd6\xe1\x68\x03\xcb\x37\xd8\x46\x4a\x70\xe7\x9d\x14\xb0\xad\x50\xba\x08\x5b\x68\x98\xf8\x00\xed\xc7\x2c\xe4\x63\x05\x0f\xa5\xb4\x40\xf5\xe2\x86\x0a\x6c\x0a\xfd\xd1\x20\x1f\xbc\x1b\x70\x8b\xc1\x31\x49\x95\x7b\x03\x21\xdb\xfa\xaa\xb7\xf4\x7a\xfb\x38\x1d\x5f\x38\x9d\xf3\xc9\x93\x87\xb3\x86\xce\x57\x9e\xcf\x77\xe7\x4f\x98\xfd\x14\xf4\x50\x30\xa7\xb4\xc4\x7f\xdc\xea\x5b\x6f\xfb\x2f\xdc\xfb\x14\x34\xf5\x22\x6b\x77\x9a\x2f\xbb\x5a\xb0\x12\x08\x36\x0f\x42\xcd\xfe\x35\xae\x52\x63\xef\xe0\xb8\x47\xe2\xa4\x1a\x66\xa5\x1c\xdf\x8c\x30\xa2\xfc\xe4\x95\x8f\xf4\x17\x00\x00\xff\xff\x99\x2b\xe0\x1a\x27\x01\x00\x00")

func gitignoreArchivesBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreArchives,
		"gitignore/Archives",
	)
}

func gitignoreArchives() (*asset, error) {
	bytes, err := gitignoreArchivesBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/Archives", size: 295, mode: os.FileMode(420), modTime: time.Unix(1441560244, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _gitignoreAutotools = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x84\x8c\x41\x0a\x03\x21\x0c\x45\xf7\x39\x45\xa1\xeb\x31\x14\x66\xd5\x3b\xf4\x10\x92\x46\x0d\xd5\x44\xc6\x0c\x5e\xbf\x0e\x3d\x40\x37\xe1\xe5\xc1\xfb\xf7\x5b\x71\xef\x4f\xc4\x39\x67\xc8\x7a\x06\x3b\x32\x0e\x4b\x3e\xe3\xc1\x18\x4f\xb7\x16\x3f\x0c\xf0\x5a\x37\x49\xe5\x20\x0a\xf0\x3f\x22\xd3\x04\xf0\xeb\x77\xe7\x40\x91\x0a\xaf\x9f\xaa\x51\xac\xa1\xed\x80\x64\xad\xaf\xc1\x0b\x34\x49\x3e\x8f\x85\x6f\xee\x97\x06\x14\x1d\x1e\x6b\xdd\x46\x01\x6c\x32\x86\x68\x06\x5c\xaa\xf5\xad\x3c\xe0\x1b\x00\x00\xff\xff\xbe\x48\x7d\x82\xb5\x00\x00\x00")

func gitignoreAutotoolsBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreAutotools,
		"gitignore/Autotools",
	)
}

func gitignoreAutotools() (*asset, error) {
	bytes, err := gitignoreAutotoolsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/Autotools", size: 181, mode: os.FileMode(420), modTime: time.Unix(1441560244, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _gitignoreBricxcc = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x52\x56\x70\x2a\xca\x4c\xae\x50\x70\xce\xcf\xcd\x4d\xcc\x4b\x51\x70\x4e\xcd\x2b\x49\x2d\x52\xf0\x74\x71\xe5\x52\x56\xc8\x28\x29\x29\xb0\xd2\xd7\x4f\x02\xa9\x48\x4e\xd6\x2b\xce\x2f\x2d\x4a\x4e\x4d\xcb\x2f\x4a\x4f\xd5\xcb\x4b\x2d\xe1\xd2\xd2\x4b\x4a\xcc\x06\x92\xc5\x95\xb9\x5c\x80\x00\x00\x00\xff\xff\x62\x51\x65\x31\x48\x00\x00\x00")

func gitignoreBricxccBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreBricxcc,
		"gitignore/BricxCC",
	)
}

func gitignoreBricxcc() (*asset, error) {
	bytes, err := gitignoreBricxccBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/BricxCC", size: 72, mode: os.FileMode(420), modTime: time.Unix(1441560244, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _gitignoreC = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x3c\x8f\xcd\xaa\xc2\x30\x10\x46\xf7\x79\x8a\x40\x37\xf7\x76\x51\x37\x52\xfa\x00\x15\x5c\x54\x14\xba\x10\x57\x92\x9f\x69\x9b\x1a\x9b\x90\xb4\x18\xdf\xde\x99\x08\x2e\x72\x32\x84\xf3\xcd\x4c\x0a\x7e\x96\x33\xa8\x95\x0f\xc6\x42\x64\x65\xe5\xf0\x3c\x08\x4e\xce\x48\xb0\x03\x63\x05\xbf\x04\x50\xee\xe9\xd1\xd1\xfc\x08\x42\x43\x20\x77\x54\x13\xd2\x23\x51\xe9\x8c\x0c\x22\x98\xdc\xc4\x1a\x89\x14\x54\x65\x38\x12\xfa\x49\x04\x8c\xbb\x3c\x2f\xf2\x3f\xb3\xa8\x8a\x5f\xcd\xa2\xdd\x2b\xf2\xb6\xeb\xe2\x3f\xaa\xda\x5a\x64\x74\x19\x55\x49\x2f\x6f\xea\x86\xf9\x43\x02\xb5\xad\x42\x7e\xf7\x84\x04\xb4\xe4\xb6\xd2\x20\xef\x91\xa6\x6c\x6a\xbc\x52\x53\xdf\xeb\x3d\x16\x13\x24\x8a\xb5\x20\xb7\xf1\xf7\x3d\xdd\xdf\x4e\x3b\xf6\x09\x00\x00\xff\xff\xf1\xbf\x6c\xb8\xf6\x00\x00\x00")

func gitignoreCBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreC,
		"gitignore/C",
	)
}

func gitignoreC() (*asset, error) {
	bytes, err := gitignoreCBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/C", size: 246, mode: os.FileMode(420), modTime: time.Unix(1441560244, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _gitignoreCSharp = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x6c\x54\x4d\x6f\xe3\x36\x10\xbd\xf3\x57\x0c\xe0\xa2\xed\x6a\x13\x09\x28\x8a\x5e\x7a\x4a\x9c\xdd\x24\xc0\x36\x09\x6c\x6f\xb7\x80\x61\x18\x14\x39\x96\x18\x53\x24\xcb\x8f\xc4\xee\xa1\xbf\xbd\x43\x4a\x6e\xb2\xbb\xb9\x3c\x51\xc3\x99\xe1\xf0\xcd\xf0\xcd\xe0\x32\x29\x2d\xe1\xa3\xd5\x12\x7d\x80\x9f\x8f\x36\x81\xe0\x06\xf6\x88\x0e\x5a\x65\x40\xed\x80\x6c\x3f\x49\xd0\x6a\x8f\x67\x10\x2d\x84\x68\x3d\x82\xd4\x3a\x00\x37\x12\x9c\x6c\xc3\x3b\xb6\xbe\x6c\x37\xca\x34\x6c\x7d\x6f\x37\xed\x63\xc3\xd8\x0c\x86\x10\x31\x44\x28\xe0\x31\x24\x1d\x03\x5b\xd1\xcf\x62\x5a\xb3\xd9\x0c\x6e\x3b\x93\x93\xfd\xa9\x42\xe2\x1a\x96\x31\x49\x65\x29\x62\x70\xd6\x73\x7f\x84\x9d\xd2\x18\xce\xa0\x2d\x35\x4e\x39\xce\xf2\xa9\x39\xb6\x6c\x42\x87\x06\x3d\x8f\x28\xa1\x3d\x82\xb3\x2e\x69\xee\xbf\xc9\xc7\xa5\x3c\xb7\x26\xd4\xb9\xa8\xcf\x01\xfd\x79\x70\x28\xd4\x4e\x89\x31\x05\xab\xea\x90\x2c\x61\xa2\xbd\xfc\xa3\x4d\x2d\xad\x08\x91\xb2\xe6\x2a\x27\x8a\x4e\x57\x58\x5f\xc9\x0d\xb6\xa9\xa3\xbb\x2e\xfc\x06\x35\xf2\x80\x0d\x3b\xfc\xf6\x6b\xc3\xaa\xad\xaa\x05\xa1\xcb\x58\x2b\xbd\x27\x1c\x30\x72\xfa\xd8\xf6\x91\xd0\x89\x3e\xa3\x6c\x33\x76\xa2\xa0\x24\xf4\xc1\xe5\x83\xdb\x7c\x7c\xd4\x6d\x41\x55\x30\xfb\xc7\x21\xef\x6a\xdb\x11\x3e\x05\x17\x84\x28\x8b\x90\x17\x75\xe1\xa6\x94\x39\x5d\x7a\xfe\xfe\x3d\x75\x50\xf4\x38\xdd\x4e\xd1\xa1\x54\x5a\xcd\x5d\xbe\xa9\x11\x39\xbb\x75\x68\x82\xdc\xe5\x33\x09\x5f\x62\x27\xc2\x9c\xb7\x39\x36\x57\xe3\x02\x86\x30\x9e\x3b\xe2\x21\xbb\x5f\x27\x25\xb9\x11\x08\x17\x29\xda\x81\x47\x65\x0d\xac\xac\xd5\x7b\x15\xc9\xab\x73\xcb\xcc\x5d\x76\x5c\xe0\xb2\xe7\xde\xa1\x07\x45\xd3\x02\xf5\xdd\x87\x15\x08\x2b\x95\xe9\x4a\x57\x94\x61\xdb\xff\x5d\xaa\x1c\x70\x37\xf7\xc9\x14\x96\x8c\x28\xab\x8a\xd5\xd5\xb4\x22\x0a\x04\xd7\xf5\x61\xd0\xd9\xf3\xd6\x50\x87\x68\x08\x7b\x85\xd4\x1d\x9b\xa2\x4b\x11\x76\x65\x8e\xd9\xfa\x03\x6e\x0e\xce\xe7\xd2\xc9\xf3\xca\x8a\x07\x6f\x1f\x51\xc4\xb1\x0a\x6a\x6e\x1a\xd0\xc4\xb1\xee\x69\x80\xac\x3f\x55\xf4\xe2\xde\x14\x72\x7b\xd4\xae\x79\x6d\xbd\xc9\x86\xaa\xbe\x39\xac\xde\xb4\xce\xdf\xb0\xf6\xbd\x78\xd3\xba\x7f\xd3\xea\xbe\xb3\xde\xc4\x41\xff\xf2\x9d\xb5\x8f\x23\x15\x73\xad\xc4\xfe\xfc\x3e\x37\x44\x2a\x4f\xdb\xd6\x1f\x99\x4b\xad\x56\xa1\xcf\xfb\x0f\xe3\x12\xbe\x60\x0b\xf7\x85\x28\xe2\x77\x32\x9e\xe8\xbc\x4b\xd7\x18\xe1\x81\x8b\x3d\xef\xe8\x59\x5d\xbd\xe4\x99\x4c\xd9\xe9\x8b\x32\xd2\x3e\x07\xb8\xf8\x27\xd1\xab\x1d\xdf\xc5\x94\x50\x84\x03\x25\x2d\x84\xd5\x22\x48\xdc\xbd\xf6\x5f\x16\xc9\xe0\xce\xc1\x94\xed\x55\x9d\x17\xce\x9d\x4e\x2d\xb2\x71\x1f\x7b\x52\xa2\x49\x50\x26\x3d\x61\xe1\x6f\xfd\x95\x76\xac\x57\x71\x43\xbf\xe5\x05\x66\x4b\x45\x67\xcf\xf3\xd0\x33\xe2\x82\x5a\x7b\x99\x43\x97\x61\x13\x8f\x1a\xd7\x73\xb1\xb1\xae\xae\xd8\xbf\x3f\x64\x37\xd9\x0e\x52\xb3\xeb\x93\x6c\x6c\xe7\x56\x22\xcc\xa8\xf7\x24\x21\x3b\x9a\x82\xc5\xed\x45\xb3\x54\xfa\x09\xbd\x56\x5d\x1f\xf3\x63\xc8\x8c\x8f\x4a\x40\x85\x26\x07\x3f\x92\x18\x90\x42\xc5\x49\x82\x76\xde\x0e\x34\xd5\x86\x42\x62\x99\x6c\x03\x34\x86\xa7\xc0\xe2\x94\x75\x93\x83\xc1\x67\x1a\xce\x6f\x5f\x1b\x85\x05\x1a\xc4\xfa\x94\x7d\x4c\xca\x89\x30\x63\x23\xc5\x20\x55\x46\x1a\x88\x82\x93\x40\xc1\x33\x42\xcf\x9f\x10\x3a\x15\xe1\xf7\xf3\x77\x6c\xfb\xd9\x75\x9e\x4b\x5c\x94\x8a\xb6\x1f\x73\x70\xc3\xc6\x54\x55\xc3\xa6\xdd\x4f\xb6\xab\xea\xbf\xfe\xf8\xf4\x5f\x00\x00\x00\xff\xff\x11\x06\x4b\x7d\xf0\x05\x00\x00")

func gitignoreCSharpBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreCSharp,
		"gitignore/C Sharp",
	)
}

func gitignoreCSharp() (*asset, error) {
	bytes, err := gitignoreCSharpBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/C Sharp", size: 1520, mode: os.FileMode(420), modTime: time.Unix(1441560244, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _gitignoreC2 = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x5c\x8e\x4b\xae\xc2\x30\x0c\x45\xe7\x59\x45\xa4\xce\xde\xe0\x6d\x82\x8f\x98\x81\xc4\x0a\x9c\xc4\x40\x2a\xb7\x89\x5c\x57\x6a\x77\x8f\x9d\x0a\x04\x0c\x7c\x22\x47\xbe\x47\xb7\xf3\xbb\x32\xd4\x4c\x98\xfc\x39\xf4\x18\xc5\xdf\x74\x99\xdc\xdf\xff\x44\x45\xd9\xd0\x26\xf4\xce\x75\xfe\xc2\x18\x5f\x81\x13\x42\x42\xb6\xdb\x7b\x7c\x28\xab\xd2\x7d\x08\xf7\xeb\x08\x43\x8e\x9e\x72\x60\xe0\xbc\x59\xcd\x95\x56\xfd\xb2\x97\xc8\x02\xc7\xc2\xc2\x30\xfa\xa1\xa4\x99\xf0\x5d\x40\xd7\x2f\xdd\x55\x40\x7e\x6c\x04\xb9\x51\x61\x63\x56\x4d\x1c\x16\x8c\xb3\x40\xd8\x34\xb8\xa0\xd5\x9f\xc5\x8e\x6a\x75\xcf\x00\x00\x00\xff\xff\xf8\xe6\x6b\x63\xf2\x00\x00\x00")

func gitignoreC2Bytes() ([]byte, error) {
	return bindataRead(
		_gitignoreC2,
		"gitignore/C++",
	)
}

func gitignoreC2() (*asset, error) {
	bytes, err := gitignoreC2Bytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/C++", size: 242, mode: os.FileMode(420), modTime: time.Unix(1441560244, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _gitignoreCfwheels = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x6c\xcc\xb1\x8e\xc2\x30\x0c\xc6\xf1\x3d\x4f\x61\xa9\x5b\x97\xec\xb7\x5d\x75\xe3\xdd\x70\xe2\x09\xd2\xfa\x6b\x1a\x88\x92\x60\x27\xa0\xbe\x3d\xb4\x80\xc4\xc0\x64\xf9\xef\x9f\xdc\x51\x4b\xc5\x4d\x27\x30\x95\xd8\x7c\x48\x34\xe7\xc8\x10\x35\x8f\x55\x6d\xdf\xdb\xde\x98\x8e\xe6\x10\xa1\xc4\x41\x30\xd5\x2c\x2b\x5d\x17\x08\xa8\x95\x98\x1d\x2b\xf9\x6c\x76\xb0\xc9\x9f\xe1\x2f\x78\x71\x15\xcf\x97\x5f\xe4\x91\xb0\x05\xa6\xc3\xff\xaf\xe1\xd1\xea\x39\x6e\xf2\x5b\x15\x75\x68\x89\x23\xe4\x03\x1e\xf7\x8b\x9a\xa3\xbb\x38\x9d\x24\x94\xaa\xf6\xd5\xb4\xae\xf7\xb1\x00\x6f\xed\x16\x00\x00\xff\xff\x20\xb2\xd5\x74\xcd\x00\x00\x00")

func gitignoreCfwheelsBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreCfwheels,
		"gitignore/CFWheels",
	)
}

func gitignoreCfwheels() (*asset, error) {
	bytes, err := gitignoreCfwheelsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/CFWheels", size: 205, mode: os.FileMode(420), modTime: time.Unix(1441560244, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _gitignoreCmake = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x72\xf6\x4d\xcc\x4e\x75\x4e\x4c\xce\x48\xd5\x2b\xa9\x28\xe1\x02\x73\xdd\x32\x73\x52\x8b\xb9\x40\xac\x34\x20\x8b\x2b\x39\x17\xc8\x8a\xcf\xcc\x2b\x2e\x49\xcc\xc9\xd1\x03\xf3\xb8\xa0\xbc\xf8\xdc\xc4\xbc\xcc\xb4\xd4\xe2\x12\xb0\x66\x40\x00\x00\x00\xff\xff\x09\x08\xa8\x9c\x4c\x00\x00\x00")

func gitignoreCmakeBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreCmake,
		"gitignore/CMake",
	)
}

func gitignoreCmake() (*asset, error) {
	bytes, err := gitignoreCmakeBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/CMake", size: 76, mode: os.FileMode(420), modTime: time.Unix(1441560244, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _gitignoreCuda = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xd2\xd2\xcb\xe4\x02\x62\x10\x91\x5e\x50\x0a\x24\x0b\x4a\x2a\x80\x64\x72\x69\x52\x66\x1e\x90\x4e\x4b\x2c\x01\x31\x00\x01\x00\x00\xff\xff\xd8\x38\x0a\x95\x26\x00\x00\x00")

func gitignoreCudaBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreCuda,
		"gitignore/CUDA",
	)
}

func gitignoreCuda() (*asset, error) {
	bytes, err := gitignoreCudaBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/CUDA", size: 38, mode: os.FileMode(420), modTime: time.Unix(1441560244, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _gitignoreCvs = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xd2\x77\x0e\x0b\xd6\xd7\xe2\xd2\x82\xd2\x7a\xc9\x65\xc5\x99\xe9\x79\xf9\x45\xa9\x40\x21\x24\x0e\x20\x00\x00\xff\xff\x5f\xf2\xf4\xa0\x27\x00\x00\x00")

func gitignoreCvsBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreCvs,
		"gitignore/CVS",
	)
}

func gitignoreCvs() (*asset, error) {
	bytes, err := gitignoreCvsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/CVS", size: 39, mode: os.FileMode(420), modTime: time.Unix(1441560244, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _gitignoreCakephp = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x52\x56\x70\x4e\xcc\x4e\x0d\xf0\x08\x50\x30\xe6\xe2\xd2\x2f\x4b\xcd\x4b\xc9\x2f\xd2\xd7\xe2\xd2\x4f\xce\xcf\x4b\xcb\x4c\xd7\x4f\x2c\x28\xd0\x2b\xc8\x28\xe0\xd2\x2f\xc9\x2d\x00\x09\xe7\xe4\xa7\x17\x03\x69\x2e\x84\x36\x23\xa0\x36\xa0\x2a\x98\x02\x10\xd3\x19\xa2\x37\x39\xbf\x28\x15\xa2\x19\x49\x30\x25\xb1\x24\x31\x29\xb1\x18\x2a\x01\xb1\x0f\x64\x22\x20\x00\x00\xff\xff\x12\xb5\x37\x98\x88\x00\x00\x00")

func gitignoreCakephpBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreCakephp,
		"gitignore/CakePHP",
	)
}

func gitignoreCakephp() (*asset, error) {
	bytes, err := gitignoreCakephpBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/CakePHP", size: 136, mode: os.FileMode(420), modTime: time.Unix(1441560244, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _gitignoreChefcookbook = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xd2\x2b\x4b\x4c\x2f\x4a\xcc\x2b\xe1\xd2\x4f\xce\xcf\xcf\x4e\x02\xe2\x62\x2e\x2e\x65\x05\xa7\xd2\xbc\x94\x9c\xd4\x22\xae\xa4\xcc\x3c\x7d\x2d\x2e\xbd\x24\x30\x17\xc8\xe2\xd2\xcb\xce\x2c\x49\xce\x48\xcd\xd3\x87\xb3\xf4\x72\xf2\x93\x13\x73\xf4\x2a\x73\x73\xb8\x00\x01\x00\x00\xff\xff\xa7\x83\x38\x45\x4d\x00\x00\x00")

func gitignoreChefcookbookBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreChefcookbook,
		"gitignore/ChefCookbook",
	)
}

func gitignoreChefcookbook() (*asset, error) {
	bytes, err := gitignoreChefcookbookBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/ChefCookbook", size: 77, mode: os.FileMode(420), modTime: time.Unix(1441560244, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _gitignoreClojure = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x3c\xcb\x41\x0e\x42\x31\x08\x04\xd0\x3d\x47\x31\x69\x7b\x26\xac\xf8\x3f\x4a\x5b\x02\x34\xd1\xdb\x5b\x4d\xe3\x0a\xe6\x65\x46\x47\xcb\xaf\x26\xb0\x6f\x46\xaf\x70\x79\xa0\x41\x11\xbe\x16\x28\x55\xd0\x9d\x7c\x7d\x81\x76\x50\x7c\xe9\xa4\xfa\x1c\x33\x16\x66\x21\xee\xe9\x46\xea\xc9\x67\xdb\xd1\x48\x25\x9d\xec\x31\xec\xbd\x49\x65\x1e\xdc\xff\x83\x3b\xb2\x4c\x23\x87\xdc\x7f\x65\x1d\x16\xf0\x09\x00\x00\xff\xff\xb1\x74\x97\xa1\x8a\x00\x00\x00")

func gitignoreClojureBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreClojure,
		"gitignore/Clojure",
	)
}

func gitignoreClojure() (*asset, error) {
	bytes, err := gitignoreClojureBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/Clojure", size: 138, mode: os.FileMode(420), modTime: time.Unix(1441560244, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _gitignoreCloud9 = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x52\x56\x70\xce\xc9\x2f\x4d\xb1\x54\xf0\x74\x71\x55\xd0\x55\xc8\x28\x29\x29\xb0\xd2\xd7\x4f\xb6\xd4\xcb\xcc\xe7\xd2\x4b\xb6\x2c\x4a\x2d\xcb\x2c\xce\xcc\xcf\x2b\x06\x71\xb8\x00\x01\x00\x00\xff\xff\xd6\x46\x6f\xbd\x2d\x00\x00\x00")

func gitignoreCloud9Bytes() ([]byte, error) {
	return bindataRead(
		_gitignoreCloud9,
		"gitignore/Cloud9",
	)
}

func gitignoreCloud9() (*asset, error) {
	bytes, err := gitignoreCloud9Bytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/Cloud9", size: 45, mode: os.FileMode(420), modTime: time.Unix(1441560244, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _gitignoreCodeigniter = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xd2\xd2\x4f\xce\xcf\x4b\xcb\x4c\xd7\x4f\x49\x2d\x4b\xcd\xc9\x2f\xc8\x4d\xcd\x2b\xe1\xd2\xd2\xcf\xc9\x4f\x2f\x06\x11\xba\x5a\x7a\x05\x19\x05\x5c\x8a\x50\x91\xcc\xbc\x94\xd4\x0a\xbd\x8c\x92\xdc\x1c\xa0\x9a\xe4\xc4\xe4\x8c\x54\x7d\x2d\x90\x24\x84\x89\x24\x0b\x17\x03\x72\x13\x93\x93\x53\x8b\x8b\xb9\x00\x01\x00\x00\xff\xff\xdf\xbd\x69\x67\x6a\x00\x00\x00")

func gitignoreCodeigniterBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreCodeigniter,
		"gitignore/CodeIgniter",
	)
}

func gitignoreCodeigniter() (*asset, error) {
	bytes, err := gitignoreCodeigniterBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/CodeIgniter", size: 106, mode: os.FileMode(420), modTime: time.Unix(1441560244, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _gitignoreCodekit = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x52\x56\x70\x4f\xcd\x4b\x2d\x4a\xcc\x51\x70\xce\x4f\x49\xf5\xce\x2c\x51\x48\xcb\xcc\x49\x2d\x56\x28\xc9\x57\xc8\x4c\xcf\xcb\x2f\x4a\xe5\x4a\xce\xcf\x4b\xcb\x4c\xd7\x4b\x06\x4a\x67\x67\x96\x70\xe9\xe7\x66\xe6\x71\x01\x02\x00\x00\xff\xff\x7f\x93\x65\x79\x36\x00\x00\x00")

func gitignoreCodekitBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreCodekit,
		"gitignore/CodeKit",
	)
}

func gitignoreCodekit() (*asset, error) {
	bytes, err := gitignoreCodekitBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/CodeKit", size: 54, mode: os.FileMode(420), modTime: time.Unix(1441560244, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _gitignoreCommonlisp = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xd2\xd2\x73\x73\x0c\xf6\xe1\xd2\xd2\x4b\x4b\x2c\xce\x01\x52\x39\x99\xc5\x05\xba\x25\xa9\xb9\x05\x5c\x80\x00\x00\x00\xff\xff\x3a\xc8\xab\x61\x1a\x00\x00\x00")

func gitignoreCommonlispBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreCommonlisp,
		"gitignore/CommonLisp",
	)
}

func gitignoreCommonlisp() (*asset, error) {
	bytes, err := gitignoreCommonlispBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/CommonLisp", size: 26, mode: os.FileMode(420), modTime: time.Unix(1441560244, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _gitignoreComposer = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x8c\x8d\xb1\x8e\xc3\x20\x0c\x86\x77\x9e\xc2\x52\x86\x9b\x08\x77\x37\x76\xed\x53\x74\x74\x88\x0b\x56\x21\x46\x86\x54\xca\xdb\x37\x28\x6a\xd4\xb1\x9b\x65\x7d\xff\xf7\x79\xc9\x45\x2a\xe9\x58\x22\xaa\x79\xd2\x32\x8b\x3a\x63\x06\xb8\x4a\xce\xdc\x60\x93\x55\x01\x4b\x49\xec\xb1\xb1\x2c\x3f\x15\x92\xf8\x07\xdc\x39\x11\xc4\xd6\xca\xc5\xb9\x40\xed\xd4\x88\x06\x37\x8b\x77\xbf\x7f\x76\xc2\xca\xde\xae\x15\x03\x8d\x79\x1e\xde\x88\xed\x7b\xdb\x22\x1d\x47\x17\xed\xb9\x9b\xac\x90\x71\x03\x1f\x65\x87\xa0\x09\x70\x58\x44\x09\x10\x12\x4f\x8a\xba\x7d\xd9\xfd\xb7\x07\xcf\x54\x7b\xf5\xb3\x71\xc2\xfd\x69\x5e\x01\x00\x00\xff\xff\xb9\xc9\x91\x8a\xfa\x00\x00\x00")

func gitignoreComposerBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreComposer,
		"gitignore/Composer",
	)
}

func gitignoreComposer() (*asset, error) {
	bytes, err := gitignoreComposerBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/Composer", size: 250, mode: os.FileMode(420), modTime: time.Unix(1441560244, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _gitignoreConcrete5 = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x4a\xce\xcf\x4b\xcb\x4c\xd7\x2f\xce\x2c\x49\xd5\x2b\xc8\x28\xe0\x4a\xcb\xcc\x49\x2d\xd6\x4f\x4e\x4c\xce\x48\xd5\xd7\x82\xf2\x4a\x72\x0b\x80\x6c\x40\x00\x00\x00\xff\xff\xfc\xcd\x2d\x30\x2a\x00\x00\x00")

func gitignoreConcrete5Bytes() ([]byte, error) {
	return bindataRead(
		_gitignoreConcrete5,
		"gitignore/Concrete5",
	)
}

func gitignoreConcrete5() (*asset, error) {
	bytes, err := gitignoreConcrete5Bytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/Concrete5", size: 42, mode: os.FileMode(420), modTime: time.Unix(1441560244, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _gitignoreCoq = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xd2\xd2\x2b\xcb\xe7\xd2\xd2\x4b\xcf\xc9\x4f\x02\x52\x65\x7a\x29\x5c\x80\x00\x00\x00\xff\xff\x29\x6e\x5d\x35\x12\x00\x00\x00")

func gitignoreCoqBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreCoq,
		"gitignore/Coq",
	)
}

func gitignoreCoq() (*asset, error) {
	bytes, err := gitignoreCoqBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/Coq", size: 18, mode: os.FileMode(420), modTime: time.Unix(1441560244, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _gitignoreCraftcms = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x52\x56\x70\x2e\x4a\x4c\x2b\x51\x08\x2e\xc9\x2f\x4a\x4c\x4f\x55\xd0\x48\x4e\x4c\xce\x48\xd5\x54\x88\xce\x28\x29\x29\xb0\xd2\xd7\x4f\x2a\xcd\xcc\x49\x29\xcf\x2c\xc9\x48\x06\x29\xd3\x4b\xce\xcf\xd5\xcf\x48\xcd\x29\xd0\x07\x73\x75\x8b\x21\xba\x74\xd3\x33\x4b\x32\xd3\xf3\xf2\x8b\x52\x63\xb9\x20\x32\xfa\x50\x19\x7d\x2d\x2e\x45\x34\x91\x9c\xfc\xf4\x7c\x7d\x2d\x40\x00\x00\x00\xff\xff\xf4\x22\xb6\xea\x78\x00\x00\x00")

func gitignoreCraftcmsBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreCraftcms,
		"gitignore/CraftCMS",
	)
}

func gitignoreCraftcms() (*asset, error) {
	bytes, err := gitignoreCraftcmsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/CraftCMS", size: 120, mode: os.FileMode(420), modTime: time.Unix(1441560244, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _gitignoreDm = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xd2\xd2\x4b\xc9\x4d\xe2\xd2\xd2\x2b\x2a\x4e\x06\x92\x99\x79\x25\x40\x32\x27\x1b\x48\x54\x65\x16\x70\x01\x02\x00\x00\xff\xff\x1b\x86\x0d\x57\x1d\x00\x00\x00")

func gitignoreDmBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreDm,
		"gitignore/DM",
	)
}

func gitignoreDm() (*asset, error) {
	bytes, err := gitignoreDmBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/DM", size: 29, mode: os.FileMode(420), modTime: time.Unix(1441560244, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _gitignoreDart = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x54\x8e\x3d\x4e\xc4\x40\x0c\x85\x7b\x9f\xc2\xd2\x76\x14\x5e\x89\x33\xd0\x50\x71\x04\x34\xf1\x98\xac\xb3\xce\xd8\x9a\x99\x10\xd1\x71\x0d\xae\xc7\x49\xc8\x8f\x28\xb6\xb1\xde\x57\xf8\xbd\xef\x82\x2f\x5e\x7e\xbf\x7f\x3a\xb2\xcf\xb3\x76\xec\x37\xc1\x0f\x37\xf3\x55\xcb\x88\x59\xab\x70\xf7\xaa\xd2\x90\xab\xa4\x2e\x19\x87\x2f\x8c\x65\x20\xa0\x61\x51\xcb\xe6\x23\xd0\xc6\x57\x38\xf0\x0a\x91\xf8\x9e\x46\x69\x00\x17\x7c\xab\x67\x9f\xda\xe3\x7f\x4e\xb5\x3f\x4f\x8d\xe0\x89\xf6\x48\x53\xdb\xd2\xd4\xde\x8f\x4b\x59\xe2\x64\x9a\x53\xec\x35\xaf\x85\x6d\xc9\x82\xeb\x4d\x0a\x66\xf9\x14\xf3\xd8\xed\x52\x84\x29\xa7\xae\x5e\xf0\x7f\x96\x60\x93\x69\x21\x4c\xe6\x7c\x87\xbf\x00\x00\x00\xff\xff\xfd\xe2\x47\x1e\xe0\x00\x00\x00")

func gitignoreDartBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreDart,
		"gitignore/Dart",
	)
}

func gitignoreDart() (*asset, error) {
	bytes, err := gitignoreDartBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/Dart", size: 224, mode: os.FileMode(420), modTime: time.Unix(1441560244, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _gitignoreDarteditor = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xd2\x2b\x28\xca\xcf\x4a\x4d\x2e\xe1\xd2\x4b\x2a\xcd\xcc\x49\xc9\xc9\x4f\xe7\x02\x04\x00\x00\xff\xff\x75\xc6\x26\xcf\x13\x00\x00\x00")

func gitignoreDarteditorBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreDarteditor,
		"gitignore/DartEditor",
	)
}

func gitignoreDarteditor() (*asset, error) {
	bytes, err := gitignoreDarteditorBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/DartEditor", size: 19, mode: os.FileMode(420), modTime: time.Unix(1441560244, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _gitignoreDelphi = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x94\x94\x4f\x6f\x24\x35\x10\xc5\xef\xf3\x29\x4a\xda\x4b\x76\x44\x9a\xd5\x5e\x10\x47\x76\xc3\x21\x12\x48\x28\x24\x88\x5b\xe4\xb6\xab\x7b\x8a\x71\xdb\x96\xff\xcc\xa4\x2f\x7c\x76\x5e\xb9\x67\xc2\xc0\x09\x2e\x4e\xda\x2e\x3f\xff\xea\x55\xd5\x7c\xa0\x97\x60\xe3\xb2\x70\xa8\x54\x0f\x5c\x98\xea\x9a\xb8\x90\x4c\xb4\xc6\x46\x67\x83\x7d\x3e\x71\xa0\x25\x66\x26\xeb\xd9\x04\xca\x9c\x62\x91\x1a\xf3\x3a\xd0\x97\x56\x69\xc4\x81\xc9\x3c\x35\x3f\xec\x3e\xd0\x63\xc5\x17\xe2\xcd\x91\xe9\x60\xf2\x42\x35\x12\xbe\xf9\x4d\x4a\x95\x30\x53\xca\xf1\x0f\xb6\x95\x4a\x6c\xd9\xf2\x40\x4f\x6c\x1c\x4e\x93\x37\xc1\x54\x89\xa1\x40\xcf\xc7\x33\xa4\x20\xf6\xc4\x5b\x18\x4d\xe2\x41\x85\x57\x68\x94\x60\xb2\xe0\xc3\xc6\x50\x8d\x04\xd5\x5c\x4c\x90\x89\x4b\xfd\xe6\x5d\x5d\x70\x8a\x67\x1d\x9d\x38\x17\xa8\x92\x84\x29\x2a\xde\xf3\x81\xd7\x0e\x18\x62\x27\x3f\x09\x9f\xd9\x91\x29\x54\xf9\xad\x52\xcc\xd0\x5d\x12\x1e\x72\x34\xae\xe4\x64\x9a\xee\x6b\x8c\xbe\x0c\xf4\x15\x6c\xe2\x38\x6b\xfe\xde\x58\x7d\x17\x8e\x2d\x74\x96\x7a\xa0\x21\xdb\x8d\x11\x6f\xec\x87\xcc\xa5\xe3\x3f\xc3\x4b\xf2\x32\x66\x93\xd7\x7e\x4c\x77\x1d\x7f\xfd\x38\xd0\x63\xa0\xe8\x1d\x3d\xb0\x4f\x07\xb9\x62\xc2\x78\x38\x73\x88\x0d\x27\x80\x2b\x30\x99\x9d\x62\xff\x2a\x01\x2e\x5c\x82\x3f\x7f\xfa\xf4\xbd\x06\x4a\xd1\x7c\x5d\xb3\x80\x9d\x72\x5c\x40\x21\xce\x6f\x0f\x69\xee\x9a\x66\x31\x13\xfb\x55\xc5\x64\x0e\x17\xb5\xfd\x50\xfd\xd8\x01\x1f\xc4\xcc\xd9\x2c\xf4\x4b\xcc\x75\x8a\x5e\x62\xbf\x3c\xd0\x4b\xd9\xf2\x47\x82\xf0\x60\x8b\x61\xa7\x35\xa7\x96\xb4\xa2\x17\x92\xef\x94\xed\xb6\x83\xe4\xbd\x75\xb4\x56\xea\x71\x2b\xea\xd4\x45\xa4\xa8\xc1\x0d\x5d\x16\xe0\x7a\xfe\x57\xf2\x9d\xcc\xb9\xd4\xc9\x7e\x93\xd2\x8c\xa7\x9f\xe4\xc4\x5f\x24\x38\x68\x94\x0b\xdb\x0f\xce\x01\x4e\xc2\xf5\xf6\xef\x3f\x7e\xfe\xaf\x14\xff\x50\x7b\xe0\x02\x4b\x38\xf7\x67\x4f\x57\x43\x50\xdb\xb8\x76\x99\x9f\xd1\x90\x33\x6b\x3f\x84\x49\xe6\x96\x7b\x77\x6e\xe6\x4e\xc8\x02\xea\xf9\xda\x6e\xff\x03\x6a\x2b\x9b\x22\x2d\x71\x54\x2d\x87\xf1\xf2\x31\xf5\x20\x2d\x9a\x52\xbb\x78\x81\x66\x34\xdb\x12\xab\x46\x8d\x6d\xa6\x89\x4d\x6d\x99\x37\xa3\x3a\xa9\x02\x00\xbc\x93\xf7\x87\xb5\x7b\x21\x9b\xef\x67\x46\x6e\xa6\x6a\x1d\xaf\x13\x73\xa7\xcd\xa0\xd5\x73\xec\xb9\xf2\xc7\xdd\x7e\xe0\x37\xc6\xea\xbc\xc7\x3a\xa6\x6d\x15\xdd\xb1\x09\x6b\x89\x58\x4c\x3a\xea\x46\xb6\x58\x17\x93\xfa\xff\xe8\x6f\x74\x79\x59\xb0\x56\x57\x7a\x7c\xc3\x8a\x56\xbf\x41\x31\xad\xc6\xbf\x29\xb6\x09\xbe\x73\x2d\x79\xb1\x7d\x47\x47\x52\x19\xec\x34\xef\xf6\xd7\x49\xc7\x20\xdd\x48\xf8\x68\x8d\xbf\x5e\x85\x1d\xf9\xbe\x24\xb6\x32\x89\x7d\xbf\xdd\x43\xf0\x17\xa3\x19\xaa\x35\xf6\xa0\x09\xa9\x2d\xce\x54\xa3\x7c\xa7\xb2\x55\x50\x29\xcb\xf1\x46\x1c\x15\xd1\x1f\xb1\xee\xfa\x68\xec\xb1\xa5\xb2\x7b\x7d\xbd\xec\x7e\x8b\xf0\x3f\xf7\x1a\xfd\xd5\x94\x6a\xbc\x18\x4c\x23\x5a\x00\x3f\x62\x76\xeb\x44\xf5\x07\x3b\xbb\xbf\x02\x00\x00\xff\xff\x24\x3f\x4e\xaa\x43\x05\x00\x00")

func gitignoreDelphiBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreDelphi,
		"gitignore/Delphi",
	)
}

func gitignoreDelphi() (*asset, error) {
	bytes, err := gitignoreDelphiBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/Delphi", size: 1347, mode: os.FileMode(420), modTime: time.Unix(1441560244, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _gitignoreDreamweaver = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x52\x56\x70\x09\x57\x70\x29\x4a\x4d\xcc\x2d\x4f\x4d\x2c\x4b\x2d\x52\x48\x4c\x49\x49\x4d\x51\x48\xcb\xcc\x49\x2d\xe6\x8a\xcf\xcb\x2f\x01\x52\x29\xe5\xc5\x95\x79\xc9\x7a\x15\xb9\x39\x5c\x80\x00\x00\x00\xff\xff\x90\x76\xa1\xa2\x2f\x00\x00\x00")

func gitignoreDreamweaverBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreDreamweaver,
		"gitignore/Dreamweaver",
	)
}

func gitignoreDreamweaver() (*asset, error) {
	bytes, err := gitignoreDreamweaverBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/Dreamweaver", size: 47, mode: os.FileMode(420), modTime: time.Unix(1441560244, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _gitignoreDrupal = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x6c\x51\xc1\x8e\x9b\x30\x14\xbc\xfb\x2b\xac\xed\xa5\xe5\x00\xdf\x80\x76\x11\x8b\x44\x48\x44\xd2\x43\x8f\x8e\x79\x60\x4b\xc6\xb6\xec\x07\x25\xfd\xfa\x3a\x36\x49\xbb\x52\x0e\x48\x33\xef\x99\xb1\x67\xe6\x1b\x6d\x26\x6d\x1c\x50\x6e\xf4\x28\xa7\xc5\x31\x94\x46\xd3\x51\x2a\xf0\x14\x05\x43\x3a\xb3\xdb\x7d\x89\x4c\x6a\xea\x41\x7b\x89\x72\x05\x2a\xf5\x68\xdc\x1c\x0f\xe7\x24\xcc\xc0\x17\x59\x91\x79\x40\x94\x7a\xf2\x59\x6e\x85\x25\xe4\x29\x6e\x19\x8a\x5d\xee\x21\x35\x81\x86\x70\x19\x0c\x71\x02\x1a\x73\x12\x2f\x2d\x9e\x6a\x91\x3e\x99\x75\x72\x0d\xc7\xff\x13\x1d\x60\x64\x8b\x42\x8a\xb0\x61\x7a\x30\x71\xe6\x6a\xd0\xe7\xb8\x21\x29\xde\x3f\xcb\xae\xae\xda\x63\xbd\xd3\xe3\xe9\x57\xdf\xd4\x9f\x97\x44\x9b\xee\x7c\x29\xdb\x36\x4b\xac\x6d\xde\xab\xee\x5c\x25\x72\x28\x9b\xee\x12\xbe\xaa\x3f\xa7\xc1\xcf\x53\xdd\x97\x1f\xfb\xb6\xaf\xca\x8f\x43\xc2\xe9\x69\x4c\xa9\xd7\xc3\xd9\x0c\xcb\xdd\xd0\xcb\x25\x0a\x98\xbf\xee\xfe\x19\x83\x15\xdc\x0d\x45\x08\x92\x5e\x97\xe0\x4f\x00\x7d\x8b\x7f\xbe\xd1\xd1\xa8\x01\x1c\xfd\x1e\x80\xa3\x3a\x14\xc5\x53\x12\x2b\x28\x63\xc3\xe2\x07\xc9\x05\x32\xce\xc1\x7b\xf2\x1b\xae\x79\x6a\x95\xb0\x05\x85\x71\xf2\x0f\xc4\x5e\xb8\x0b\xa5\xdd\x81\xd4\x03\x6c\x3b\xf2\x18\x9e\x15\xf1\x62\x87\x10\x74\x84\xdb\xac\x9c\xe5\x11\x16\x52\x73\xb5\x0c\x21\xe4\x62\x96\x9e\x93\x87\x3d\x12\x9a\x31\x29\xfd\xc2\x73\x27\x2d\x06\x90\xdc\x91\xbf\x01\x00\x00\xff\xff\x88\xfb\x2b\xa4\x5d\x02\x00\x00")

func gitignoreDrupalBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreDrupal,
		"gitignore/Drupal",
	)
}

func gitignoreDrupal() (*asset, error) {
	bytes, err := gitignoreDrupalBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/Drupal", size: 605, mode: os.FileMode(420), modTime: time.Unix(1441560244, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _gitignoreEpiserver = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x52\xc6\x0a\xb8\x94\x95\x15\x5c\x03\x32\x83\x53\x8b\xca\x52\x8b\x14\xdc\x32\x73\x52\x8b\xb9\x70\xa8\xd4\xf2\xc9\x4c\x4e\xcd\x2b\x4e\xd5\x4b\xce\xcf\x4b\xcb\x4c\xe7\x02\x04\x00\x00\xff\xff\x67\x4c\x1e\xeb\x51\x00\x00\x00")

func gitignoreEpiserverBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreEpiserver,
		"gitignore/EPiServer",
	)
}

func gitignoreEpiserver() (*asset, error) {
	bytes, err := gitignoreEpiserverBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/EPiServer", size: 81, mode: os.FileMode(420), modTime: time.Unix(1441560244, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _gitignoreEagle = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x4c\x90\xc1\x4e\xc3\x30\x0c\x86\xef\x7d\x0a\x4b\xdb\x69\x42\x95\x40\xe2\x8c\xd8\xc4\x61\x07\x24\x5e\x21\x4b\xdd\x2e\x90\xda\x91\xe3\x30\xed\xed\xb1\x53\x84\xb8\x7c\x49\xed\xff\x77\xfd\x67\x07\xe7\x85\x58\x10\x72\xaa\x0a\x33\x0b\xbc\x85\x25\xe3\x03\x04\xf8\x38\x1d\x21\x87\x3b\x37\x05\x65\xce\xc3\xb0\x83\x63\x88\x5f\xad\xc0\x9c\x32\xd6\xe1\x30\xd6\xdd\x8b\xf1\xd2\x99\x8d\xa6\xe8\x6e\x28\xc2\x9f\x18\xb5\x0b\xad\x78\x56\x88\x4c\x1a\x12\x55\x9b\x5b\x51\x52\xc8\x40\x6d\xbd\xa0\x40\xa0\x09\x04\x67\x14\xa4\x88\xd5\xfe\x04\x7a\xc5\x6e\x84\xaa\xd2\xa2\x36\xf1\x11\x4c\x60\x9b\x88\xcd\x59\x4b\x53\x94\xd1\x6a\x76\x5f\x91\x74\x33\x70\xce\x7c\x4b\xb4\x58\x10\x42\x48\xb3\xcb\xe1\x16\xbc\xcd\x70\x0d\xdf\xb8\xf9\xff\x6f\x06\x89\x62\x6e\x13\x4e\xe3\x80\xbe\xf6\x88\x65\xf6\x0c\xa7\xd7\xf7\xbf\x88\xfb\xfd\xde\x18\xd7\xe2\x11\xef\x4f\xce\xc7\x67\x8f\x6e\x0f\x72\x18\x4b\x8e\x7e\xd7\x8d\xae\x8f\x12\x3b\xeb\x60\xc7\x24\xa9\xd3\xa5\x4b\x49\xdd\xf0\xdb\x98\x36\x8e\x07\xff\x4c\x34\xb3\x9f\x58\xea\xf0\x13\x00\x00\xff\xff\x70\x3d\x63\xd8\x91\x01\x00\x00")

func gitignoreEagleBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreEagle,
		"gitignore/Eagle",
	)
}

func gitignoreEagle() (*asset, error) {
	bytes, err := gitignoreEagleBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/Eagle", size: 401, mode: os.FileMode(420), modTime: time.Unix(1441560244, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _gitignoreEclipse = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x5c\x4f\xbd\x6e\xe3\x30\x0c\xde\xf9\x14\x42\x6e\xc9\x05\x38\xf9\x19\xae\x49\x97\xa0\x43\x06\x0f\x5d\x69\x99\x71\xd4\x32\x92\x20\xd2\x69\xb2\xf4\xd9\x4b\xbb\x31\x90\x76\xa1\x84\xef\xe3\xf7\xc3\x8d\x2f\xb7\x9e\x2e\xa5\xe6\x37\x0a\x0a\xfe\x4c\x8a\x3d\x2a\x82\x1f\x2a\xf6\x4c\xd0\xc5\xd4\x80\x9e\x4b\x03\x1b\x6f\x8f\xcd\x0e\xdf\x6d\xca\x87\xfd\x3f\x7d\x8a\x1d\x70\x0e\xc8\xde\x2c\x0a\x55\x8d\x24\xe0\x85\x54\x63\x1a\xa4\x01\xcf\x19\xfb\x82\x7a\x02\xf8\xe3\x9e\x03\xc7\x22\xe4\xb6\xb9\x12\xf8\x25\x73\x22\xae\x4a\x35\x21\x3b\xcd\x99\x5d\x37\x46\xee\xa9\x9a\x0f\xdd\xf1\xd6\xe0\xa7\x3b\xda\x4c\x82\x97\x29\x92\x6f\x4e\xd4\xac\x7a\xb7\x5a\x9c\x19\xc7\x14\x4e\x2e\xe4\x74\x8c\xc3\x58\x51\x63\x4e\xb2\xb2\xba\xdf\xc4\x24\xdd\xee\xda\x7f\x52\x28\xc4\x63\x0c\xe0\xc3\x43\x8b\xfd\x03\xe3\xd6\x8b\xe5\x1e\x2f\xe8\x76\x74\x21\xce\xe5\x4c\x49\xdd\x54\x46\xfe\x9a\x94\x51\x64\x39\x6d\xde\xc2\x94\xb2\xce\x99\xce\x6c\x03\x89\xe4\xea\xd6\xff\x0f\xad\x6d\x1f\x31\x58\xd7\xdb\xb2\x7f\xf8\xd1\x62\xbe\x78\xa1\xa4\x53\xba\x67\x17\x1e\x87\x98\xc0\x2b\xd6\x81\xe6\x8e\x2d\xbd\xfe\xa2\xe8\x3a\x03\xf0\x15\x00\x00\xff\xff\xa5\x1d\x59\xa8\xca\x01\x00\x00")

func gitignoreEclipseBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreEclipse,
		"gitignore/Eclipse",
	)
}

func gitignoreEclipse() (*asset, error) {
	bytes, err := gitignoreEclipseBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/Eclipse", size: 458, mode: os.FileMode(420), modTime: time.Unix(1441560244, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _gitignoreEiffelstudio = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x52\x56\x08\xc9\x48\x55\x48\xce\xcf\x2d\xc8\xcc\x49\x2c\xc9\xcc\xcf\x53\x48\xc9\x2c\x4a\x4d\x2e\xc9\xaf\xe4\x72\xf5\x74\x73\x77\xf5\x2b\xe6\x02\x04\x00\x00\xff\xff\x6b\x6c\xf5\x49\x23\x00\x00\x00")

func gitignoreEiffelstudioBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreEiffelstudio,
		"gitignore/EiffelStudio",
	)
}

func gitignoreEiffelstudio() (*asset, error) {
	bytes, err := gitignoreEiffelstudioBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/EiffelStudio", size: 35, mode: os.FileMode(420), modTime: time.Unix(1441560244, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _gitignoreElisp = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x52\x56\x70\xce\xcf\x2d\xc8\xcc\x49\x4d\xe1\xd2\xd2\x4b\xcd\x49\xe6\xe2\x52\x56\x08\x48\x4c\xce\x4e\x4c\xcf\xcc\x4b\xe7\xd2\x4b\x4e\x2c\xce\xe6\x02\x04\x00\x00\xff\xff\x9c\x93\x49\x5c\x24\x00\x00\x00")

func gitignoreElispBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreElisp,
		"gitignore/Elisp",
	)
}

func gitignoreElisp() (*asset, error) {
	bytes, err := gitignoreElispBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/Elisp", size: 36, mode: os.FileMode(420), modTime: time.Unix(1441560244, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _gitignoreElixir = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xd2\x8f\x4f\x2a\xcd\xcc\x49\xe1\xd2\x4f\x49\x2d\x28\xe6\x4a\x2d\xca\x89\x4f\x2e\x4a\x2c\xce\xd0\x4b\x29\xcd\x2d\xe0\xd2\xd2\x4b\xad\xe2\x02\x04\x00\x00\xff\xff\x32\x40\x48\x82\x22\x00\x00\x00")

func gitignoreElixirBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreElixir,
		"gitignore/Elixir",
	)
}

func gitignoreElixir() (*asset, error) {
	bytes, err := gitignoreElixirBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/Elixir", size: 34, mode: os.FileMode(420), modTime: time.Unix(1441560244, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _gitignoreEmacs = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x5c\x8f\xc1\x6a\x2c\x21\x10\x45\xf7\xf5\x15\x42\xef\x04\x75\xff\xde\x2a\xe4\x03\xb2\x49\x20\x8b\x81\xa1\xd0\xea\x6e\xb1\x7a\x6c\xaa\xcc\x90\xd9\xe4\xdb\xa3\x3d\x43\x02\xd9\x79\x2e\xf7\x9e\xc2\xc9\x38\xeb\xcc\x56\x13\xfd\x33\x4b\x6e\x79\xb9\x54\xa1\xff\x23\x04\xfb\x05\xa7\xc9\x9e\x26\x08\x9e\x36\x8c\xea\x13\x69\x69\x75\xff\xcb\x9e\x6b\x2c\x60\x3d\x71\x04\xfc\x68\xd5\x29\x5e\xc9\x71\xd6\x06\x4d\x70\xdb\xc1\x77\x0d\xc0\x64\x5e\x64\x71\xe3\x12\xf8\xda\x5f\x39\xb9\x3e\xc4\x96\xeb\x45\xc1\x9e\x51\xe2\x9a\xaf\x34\x7a\x33\xdf\x36\x2c\x74\xef\xda\xf3\x03\xfd\xe1\x20\x5d\x89\xd9\xcc\x99\x49\x21\xdc\x29\xac\xfd\x56\x95\xdb\x0f\x33\x6a\x4b\x59\x8e\x3e\xef\x68\x76\x8c\x05\x97\x63\xd0\x31\x8c\x5c\x68\x6e\xf4\xf9\xf0\x58\x2f\xc4\x23\x7d\x7a\x7b\x7e\xa5\x77\x33\x7e\x61\xe6\xca\x89\x04\xc2\x80\x63\x12\x51\xcb\xaf\xca\x0f\x0c\xf0\x1d\x00\x00\xff\xff\xf8\xd6\x58\x0c\x40\x01\x00\x00")

func gitignoreEmacsBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreEmacs,
		"gitignore/Emacs",
	)
}

func gitignoreEmacs() (*asset, error) {
	bytes, err := gitignoreEmacsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/Emacs", size: 320, mode: os.FileMode(420), modTime: time.Unix(1441560244, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _gitignoreEnsime = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x52\x56\x70\xcd\x2b\xce\xcc\x4d\x55\x28\x2e\x48\x4d\xce\x4c\xcb\x4c\xe6\xd2\x4b\x05\x0b\xc0\xe8\xf8\xe4\xc4\xe4\x8c\x54\x7d\x38\x37\xa7\x34\x39\x35\x0f\xc8\x07\x04\x00\x00\xff\xff\x9d\x93\x9f\xe6\x39\x00\x00\x00")

func gitignoreEnsimeBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreEnsime,
		"gitignore/Ensime",
	)
}

func gitignoreEnsime() (*asset, error) {
	bytes, err := gitignoreEnsimeBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/Ensime", size: 57, mode: os.FileMode(420), modTime: time.Unix(1441560244, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _gitignoreErlang = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x0c\xc5\x31\x0a\xc3\x30\x0c\x05\xd0\xfd\x1f\xa5\x83\x72\x89\x64\x2c\xdd\xba\x1a\x5b\xf9\xd0\x14\xd9\x16\x8a\x02\x3d\x7e\x33\x3c\x9e\xf0\x1a\x47\x62\xa7\x9f\x78\xc8\xbc\x35\xd6\x7e\xe7\x96\x60\x58\xd1\xa8\xe7\x47\xf6\xab\x3b\xd8\x8e\x81\xa0\x2d\xfc\xd5\xee\xc6\xe2\x31\xbf\xd4\x84\xe8\x1c\x1a\x4c\x2e\xeb\xf6\x2e\xcf\xd7\xba\x41\x82\xad\x06\xfe\x01\x00\x00\xff\xff\x22\xc0\x70\x7f\x5f\x00\x00\x00")

func gitignoreErlangBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreErlang,
		"gitignore/Erlang",
	)
}

func gitignoreErlang() (*asset, error) {
	bytes, err := gitignoreErlangBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/Erlang", size: 95, mode: os.FileMode(420), modTime: time.Unix(1441560244, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _gitignoreEspresso = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xd2\xd2\x4b\x2d\x2e\x28\xca\xcf\xe2\x02\x04\x00\x00\xff\xff\x2c\x1e\xba\x4d\x09\x00\x00\x00")

func gitignoreEspressoBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreEspresso,
		"gitignore/Espresso",
	)
}

func gitignoreEspresso() (*asset, error) {
	bytes, err := gitignoreEspressoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/Espresso", size: 9, mode: os.FileMode(420), modTime: time.Unix(1441560244, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _gitignoreExpressionengine = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x84\x8f\x41\x6e\x03\x21\x0c\x45\xf7\x9c\x02\xa9\xbb\x2c\xc2\x21\x5a\x55\xea\x3a\x07\x18\x79\x18\x0f\x58\x1a\x6c\x84\x4d\xdb\xe9\xe9\x4b\x52\x45\xd3\x4a\x95\xb2\x32\xff\xf3\xf9\x3c\x9f\x5f\x2e\xd3\xc5\xa4\xa1\x73\x4f\xfe\xad\x40\x42\x75\x74\x1b\x01\xde\xc1\xa0\x69\xb8\xeb\x08\xd5\x62\x86\xc3\xd0\x42\x1b\xee\x87\x2e\x58\x66\x6c\x53\xcd\x62\xf2\x2b\x45\x89\xc1\x7a\xc3\x09\xcc\x20\xe6\x82\x6c\xc7\x6d\x2d\x7f\xed\x41\xf1\x2a\xcd\x2b\xc6\xde\xc8\x76\xbf\x88\x67\x31\x5f\xfb\xbc\x91\x66\x6f\x19\xfd\x2a\xdb\x26\x1f\xc4\xc9\xaf\xe3\x7f\x75\xba\xab\x61\x09\xf8\x59\x1b\xaa\x92\x30\x72\x22\xc6\x10\x85\x57\x4a\x61\x19\x5b\xcc\xa0\x78\xae\xb9\x3e\xca\xfe\x8c\x5b\x72\x80\x3c\x0f\xac\x6b\x3f\x7d\xe1\x12\x9c\xe5\x5e\xe6\x41\x38\xdd\x0f\xa7\x7f\x6a\xae\x2f\xc2\xc9\x7d\x07\x00\x00\xff\xff\xc2\xf2\xa3\x41\x56\x01\x00\x00")

func gitignoreExpressionengineBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreExpressionengine,
		"gitignore/ExpressionEngine",
	)
}

func gitignoreExpressionengine() (*asset, error) {
	bytes, err := gitignoreExpressionengineBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/ExpressionEngine", size: 342, mode: os.FileMode(420), modTime: time.Unix(1441560244, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _gitignoreExtjs = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x01\x00\x00\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00")

func gitignoreExtjsBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreExtjs,
		"gitignore/ExtJS",
	)
}

func gitignoreExtjs() (*asset, error) {
	bytes, err := gitignoreExtjsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/ExtJS", size: 0, mode: os.FileMode(420), modTime: time.Unix(1441560244, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _gitignoreFancy = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xd2\xd2\x2b\x4a\x4a\xe6\xd2\xd2\x4b\xab\x4c\xe6\x02\x04\x00\x00\xff\xff\xf9\xc8\xaa\x14\x0c\x00\x00\x00")

func gitignoreFancyBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreFancy,
		"gitignore/Fancy",
	)
}

func gitignoreFancy() (*asset, error) {
	bytes, err := gitignoreFancyBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/Fancy", size: 12, mode: os.FileMode(420), modTime: time.Unix(1441560244, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _gitignoreFinale = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x34\xcc\x31\x8e\x83\x30\x10\x05\xd0\xde\xa7\xf8\x62\x3b\x0a\x9a\x6d\x57\x5b\x72\x81\x9c\x60\xc0\x43\x18\x05\xdb\xc8\x03\x4e\xb8\x7d\x66\x14\xa5\x79\xb2\xbe\xff\x9f\x7e\x98\xe8\x11\xfa\x21\x4e\x06\x35\x31\xf7\xb8\xb8\x6a\x24\x89\x1f\x3d\x4f\xfb\xaf\x77\xc4\x7f\x9f\xd4\xc2\x0f\x6e\x25\x31\x1a\x57\x95\x92\x15\x65\xc1\x28\x99\x36\xc6\x4a\x8d\x41\x98\xce\x3b\x28\x47\x54\xa3\xa4\xed\x82\x7a\xce\xaf\xa3\x12\xe6\xb2\x0b\xfb\xc6\xce\x1c\x2b\x23\x9d\x2a\x33\xb4\x9c\x75\xb6\xa9\xa2\xfb\x1b\x65\xe3\x4c\x89\xff\xbd\x7b\x0d\x56\xe8\x42\xff\x7d\x86\x77\x00\x00\x00\xff\xff\x62\x6c\xcb\x45\xb8\x00\x00\x00")

func gitignoreFinaleBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreFinale,
		"gitignore/Finale",
	)
}

func gitignoreFinale() (*asset, error) {
	bytes, err := gitignoreFinaleBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/Finale", size: 184, mode: os.FileMode(420), modTime: time.Unix(1441560244, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _gitignoreFlexbuilder = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x4a\xca\xcc\xd3\xe7\x02\x12\xba\x29\xa9\x49\xa5\xe9\x10\x66\x51\x6a\x4e\x6a\x62\x71\xaa\x3e\x17\x20\x00\x00\xff\xff\xd4\x34\xbc\x13\x1d\x00\x00\x00")

func gitignoreFlexbuilderBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreFlexbuilder,
		"gitignore/FlexBuilder",
	)
}

func gitignoreFlexbuilder() (*asset, error) {
	bytes, err := gitignoreFlexbuilderBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/FlexBuilder", size: 29, mode: os.FileMode(420), modTime: time.Unix(1441560244, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _gitignoreForcedotcom = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x04\xc0\xcb\x0d\x80\x30\x0c\x03\xd0\x7b\xa6\x60\x82\xcc\x82\xd8\x20\x32\x6e\xf9\xb6\x28\xce\xfe\xe2\xf9\x97\xf3\x22\xca\x5c\xac\x3a\x47\x97\x29\x1e\xaa\xcd\x04\x5d\x38\xf8\x86\x6d\x6c\x4c\x0e\x70\x5f\xd6\xc0\x1d\x9d\xb2\x3f\x00\x00\xff\xff\x29\x8d\xb7\x96\x39\x00\x00\x00")

func gitignoreForcedotcomBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreForcedotcom,
		"gitignore/ForceDotCom",
	)
}

func gitignoreForcedotcom() (*asset, error) {
	bytes, err := gitignoreForcedotcomBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/ForceDotCom", size: 57, mode: os.FileMode(420), modTime: time.Unix(1441560244, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _gitignoreFortran = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x5c\x8e\x4b\xae\xc2\x30\x0c\x45\xe7\x59\x45\xa4\xce\xde\xe0\x6d\x82\x8f\x98\x81\xc4\x0a\x9c\xc4\x40\x2a\xb7\x89\x5c\x57\x6a\x77\x8f\x9d\x0a\x04\x0c\x7c\x22\x47\xbe\x47\xb7\xf3\xbb\x32\xd4\x4c\x98\xfc\x39\xf4\x18\xc5\xdf\x74\x99\xdc\xdf\xff\x44\x45\xd9\xd0\x26\xf4\xce\x75\xfe\xc2\x18\x5f\x81\x13\x42\x42\xb6\xdb\x7b\x7c\x28\xab\xd2\x7d\x08\xf7\xeb\x08\x43\x8e\x9e\x72\x60\xe0\xbc\x59\xcd\x95\x56\xfd\xb2\x97\xc8\x02\xc7\xc2\xc2\x30\xfa\xa1\xa4\x99\xf0\x5d\x40\xd7\x2f\xdd\x55\x40\x7e\x6c\x04\xb9\x51\x61\x63\x56\x4d\x1c\x16\x8c\xb3\x40\xd8\x34\xb8\xa0\xd5\x9f\xc5\x8e\x6a\x75\xcf\x00\x00\x00\xff\xff\xf8\xe6\x6b\x63\xf2\x00\x00\x00")

func gitignoreFortranBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreFortran,
		"gitignore/Fortran",
	)
}

func gitignoreFortran() (*asset, error) {
	bytes, err := gitignoreFortranBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/Fortran", size: 242, mode: os.FileMode(420), modTime: time.Unix(1441560244, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _gitignoreFuelphp = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x4a\x2b\x4d\xcd\xd1\x4f\x2c\x28\xd0\xcf\xc9\x4f\x2f\xd6\xd7\x02\x41\x2e\xb8\x58\x72\x62\x72\x46\x2a\x58\x08\x10\x00\x00\xff\xff\x0f\xec\xf0\x51\x27\x00\x00\x00")

func gitignoreFuelphpBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreFuelphp,
		"gitignore/FuelPHP",
	)
}

func gitignoreFuelphp() (*asset, error) {
	bytes, err := gitignoreFuelphpBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/FuelPHP", size: 39, mode: os.FileMode(420), modTime: time.Unix(1441560244, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _gitignoreGwt = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x64\x50\xc1\x6a\x2b\x31\x0c\xbc\xfb\x2b\x04\xb9\xbc\x17\xd8\x35\x3d\xf4\x07\x5a\x9a\xd2\x4b\xe9\xa1\x90\x63\x50\x6c\xed\xc6\xa9\xd7\x36\xb6\x8b\xc9\xdf\x57\xf2\x86\x36\xa5\x17\x21\x34\xa3\x19\x8d\xb6\xa3\xf1\x58\x8a\x52\x1b\x78\x43\xf3\x81\x33\xc1\xce\x79\x2a\xb0\x51\xdb\xf1\x8c\x99\x6b\xe3\xca\xf0\xdc\x2a\x18\x34\x27\xc6\x30\x58\x30\x71\x49\x4c\xb4\xf0\x19\x5c\x15\x3a\xd3\x34\x73\x0e\xc7\x4c\xa4\x15\x77\x83\x20\x8f\xb2\xa1\x65\xff\x18\x99\x9e\x93\xc7\x4a\x30\x53\xa0\xcc\x0d\xcb\x88\x7b\xb7\x1b\x31\xd5\xc3\x37\xd0\x57\x96\x98\xe9\xd6\xb3\x9e\x5c\x98\x0b\x4c\x39\x2e\x60\x29\xf9\x78\xb9\xfa\xee\x9f\x1e\x86\x97\xd7\x9d\x5e\x87\xfa\xd7\xec\xea\x20\x82\xeb\xcd\x58\x5d\x0c\xe0\xe3\x5c\xd4\xc8\x67\x76\x80\x3d\x58\x1a\xa6\x98\x01\x7d\x26\xb4\x97\x9f\x80\x93\xfc\xe3\x6f\x20\xf9\xc7\x59\x26\x70\x2b\xbb\x92\x5b\x6b\x43\xa5\xd2\xb5\xa3\xb7\xf0\xbc\x7f\x87\x7f\x77\xe3\xfd\x7f\x30\x2c\x2e\xb9\x39\x4a\x01\xeb\x72\x3f\x61\xa8\x4b\xd2\xea\x2b\x00\x00\xff\xff\x85\xfb\x09\x41\x8b\x01\x00\x00")

func gitignoreGwtBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreGwt,
		"gitignore/GWT",
	)
}

func gitignoreGwt() (*asset, error) {
	bytes, err := gitignoreGwtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/GWT", size: 395, mode: os.FileMode(420), modTime: time.Unix(1441560244, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _gitignoreGcov = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x52\x56\x48\x4f\x4e\x56\x48\xce\x2f\x4b\x2d\x4a\x4c\x4f\x55\x28\x49\x2d\x2e\xc9\xcc\x4b\x57\x28\xc9\xcf\xcf\x51\x48\xcb\xcc\x49\x2d\xe6\xe2\xd2\xd2\x4b\x4f\xce\xcb\x07\x53\x29\x89\x60\x2a\xbf\x8c\x0b\x10\x00\x00\xff\xff\x14\xe1\xe7\x19\x38\x00\x00\x00")

func gitignoreGcovBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreGcov,
		"gitignore/Gcov",
	)
}

func gitignoreGcov() (*asset, error) {
	bytes, err := gitignoreGcovBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/Gcov", size: 56, mode: os.FileMode(420), modTime: time.Unix(1441560244, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _gitignoreGitbook = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x64\x8f\xb1\x4e\xc6\x30\x0c\x84\xf7\x3e\x85\xa5\x2e\x80\x48\xbb\xff\x23\x20\xb1\xf1\x0a\xbf\xda\xe4\xda\x9a\x26\x71\x88\x93\xa1\x6f\x4f\x82\x18\x90\x98\x2c\xfb\xce\xa7\xef\x46\xfa\x10\x07\xca\xd5\x43\x6f\xc3\x38\xd2\x7b\xae\xb1\x10\xc7\x82\x1c\xe0\x78\x29\x20\x2d\x92\x97\x1d\xf4\x70\x94\x92\x6e\xf3\xbc\x77\xcb\xa7\x4e\x56\xc2\x6c\x33\x96\xc2\x71\x37\xc9\xd7\x9d\xa3\x8e\xdd\xdc\xf7\xb2\xe8\x69\x36\x6e\xb1\x8f\xc3\xf4\xf3\x31\xf4\xf8\x37\x24\x44\x87\x68\x2f\x72\x9c\x61\x9b\xfb\xea\xf7\x57\x09\x01\xb1\x27\x51\x39\x58\x49\x6a\x83\x50\x4a\x19\x1b\x72\x86\xa3\xf5\x22\x95\x00\x4a\x90\xe4\xf1\x4c\x0a\xf4\xbf\x8e\xa4\x8d\xc9\x89\xd5\x29\xa6\xf0\x8b\x15\x58\xed\xbc\x2d\x5f\xa3\x1e\x52\xbd\x33\x6c\xec\x01\x7b\x9a\x70\x99\xd8\xfa\xde\x83\xb8\xde\xd8\x6c\xe2\x1d\xb2\x69\x75\xc5\xec\x5c\x86\xbf\x62\xe3\xa5\x17\x91\x93\xd6\xca\xde\x75\xa2\x54\xcb\x70\x5f\xdb\xa9\x4b\xf8\xaf\x3d\x4d\x48\x75\x6d\x23\xc8\xca\x6d\x24\xb7\x0d\xdf\x01\x00\x00\xff\xff\x6a\x7a\x89\x28\x61\x01\x00\x00")

func gitignoreGitbookBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreGitbook,
		"gitignore/GitBook",
	)
}

func gitignoreGitbook() (*asset, error) {
	bytes, err := gitignoreGitbookBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/GitBook", size: 353, mode: os.FileMode(420), modTime: time.Unix(1441560244, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _gitignoreGo = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x3c\x8e\x41\x4b\xc4\x30\x10\x85\xef\xf3\x2b\x06\xf6\xa2\x45\x22\x0a\x8a\x57\x51\xbc\x7a\xd8\xa3\x48\x49\xd3\x49\x37\x4b\x9b\x89\x99\xa9\x64\xff\xbd\xd3\x5d\xf5\x30\x99\xf7\x92\x97\x8f\xb7\xc3\x17\x5e\x4a\x9a\x69\xc4\xf7\xe1\x48\x41\x31\x9a\x91\x1b\xdc\xab\xd7\x14\xd0\xe7\x11\x5f\x4f\xd9\x2f\xa6\xe7\x34\x08\x5e\xed\x0f\xbe\xfe\xa7\xe5\x1a\x3a\xc7\x36\xde\x46\x18\x60\x87\x6f\x3c\x8f\x54\x05\x7a\x1e\x8e\xd0\x2b\x89\x6e\xb7\xcf\x35\x1c\x92\xda\x8f\xb5\x12\x4a\xa1\x90\xa2\x11\xa9\x29\x65\x49\x9c\xe5\xb6\x54\x8a\xa9\x91\x18\xe7\xe3\xe1\xf1\xe9\xfb\xeb\x13\x7e\xb7\xe3\xd5\x10\x9d\x0b\x13\xdf\xb9\x89\x2f\xea\xde\x05\xe8\x6d\xf7\x23\xc5\x35\xff\x99\x89\xf5\x54\x48\xb6\xd4\xd9\x53\x2b\x5c\xd5\x75\x70\x29\xb2\xf8\x94\xb7\x37\x43\x50\x23\x3b\xcf\xed\x3a\x57\x2a\x47\xf8\x09\x00\x00\xff\xff\xe0\xe2\xfb\x63\x0a\x01\x00\x00")

func gitignoreGoBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreGo,
		"gitignore/Go",
	)
}

func gitignoreGo() (*asset, error) {
	bytes, err := gitignoreGoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/Go", size: 266, mode: os.FileMode(420), modTime: time.Unix(1441560244, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _gitignoreGoogleGo = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x3c\x8e\x41\x4b\xc4\x30\x10\x85\xef\xf3\x2b\x06\xf6\xa2\x45\x22\x0a\x8a\x57\x51\xbc\x7a\xd8\xa3\x48\x49\xd3\x69\x77\x96\x36\x13\x33\x53\xe9\xfe\x7b\xa7\xae\xee\xe1\xf1\xde\x4b\x5e\x3e\xb2\xc3\x17\x99\x0b\x4f\xd4\xe3\x7b\x77\xa4\x64\x38\x78\xd1\x1b\xdc\x5b\x34\x4e\x18\x73\x8f\xaf\xa7\x1c\x67\xcf\x13\x77\x8a\x57\xfb\x43\xac\x97\xb5\x5e\x43\x13\xc4\x15\x5d\x2a\x00\x3b\x7c\x93\xa9\xa7\xaa\xd0\x4a\x77\x84\xd6\x48\x6d\x3b\x7d\xae\xe9\xc0\xe6\x2f\x96\x4a\xa8\x85\x12\x0f\x4e\xa4\xd5\x28\x2b\x4b\xd6\xdb\x52\x69\xe0\x95\xd4\x39\x1f\x0f\x8f\x4f\xdf\x5f\x9f\xf0\xe7\x41\x16\x47\x34\x21\x8d\x72\x17\x46\x39\xa7\xfb\x90\xa0\x75\x6f\x7b\x1a\x96\xfc\x5f\x46\xb1\x53\x21\xdd\x56\xbf\x9d\xd6\x22\xd5\x42\x03\xe7\x8f\xcc\x91\xf3\x76\xe7\x08\x5a\xe9\x27\x00\x00\xff\xff\x3c\xab\x59\x6f\xfb\x00\x00\x00")

func gitignoreGoogleGoBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreGoogleGo,
		"gitignore/Google Go",
	)
}

func gitignoreGoogleGo() (*asset, error) {
	bytes, err := gitignoreGoogleGoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/Google Go", size: 251, mode: os.FileMode(420), modTime: time.Unix(1441560244, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _gitignoreGradle = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x34\x8c\xc1\x0d\xc2\x30\x10\x04\xff\x57\xc5\x22\x3e\xf0\xc0\xd4\xc0\x2b\x4a\x01\x14\x70\xe0\x8b\x75\xc8\xb2\xa3\x73\x0c\xa2\x7b\x6c\x92\xfc\x56\xa3\x99\x75\xc1\xd8\x47\xa1\x47\xd5\xe8\xaf\x44\x47\x8c\x21\x65\x13\x0c\x7f\x8e\xe1\x3e\xe2\x99\xd3\xa4\x81\x56\xf3\xc2\xf3\xec\x8a\x2c\x8b\xa6\xd0\xf5\xdb\x3b\xab\x87\xf6\xa8\x91\x3d\xfb\x58\xd3\xc4\xf0\x62\xc3\xa4\x0d\x9c\xdc\x3e\x0b\xb8\xdd\xd7\x52\x39\xc6\xef\x1a\x8a\x3f\xd3\x61\xbb\xdf\xca\xae\xd3\x2f\x00\x00\xff\xff\x4a\x7e\xce\x92\x9d\x00\x00\x00")

func gitignoreGradleBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreGradle,
		"gitignore/Gradle",
	)
}

func gitignoreGradle() (*asset, error) {
	bytes, err := gitignoreGradleBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/Gradle", size: 157, mode: os.FileMode(420), modTime: time.Unix(1441560244, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _gitignoreGrails = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x6c\x91\xcd\xae\xd4\x30\x0c\x85\xf7\x79\x0a\x6b\xee\x6e\x44\x5b\x01\x4f\x00\xe2\x57\x42\x48\x88\x05\xeb\x34\xf1\xa4\xe6\xa6\x4d\x65\x3b\x94\xcb\xd3\xe3\xa6\xb7\x12\x23\xb1\x9a\xc4\xe7\x7c\x27\x67\xdc\x07\xe8\x13\x29\xa5\xa5\x30\xc2\xad\x30\x7c\x64\x4f\x59\xe0\x65\xff\x0a\xfc\x12\xed\xf7\xb5\x7b\x80\x37\x59\xa7\x52\xd3\x04\x3a\x91\x80\xd8\x39\x47\xd8\x0a\x3f\x36\x64\x2e\xa2\xf0\x0b\x59\xa8\x2c\x02\xe5\x06\xa9\x65\xbc\x00\x52\x20\x31\x5c\x6a\x4a\x28\x8a\xd1\x78\xaf\xf0\x54\x2a\x54\x41\xbb\x20\x5c\x0e\x2f\xd0\xa2\x68\x47\xc5\x6e\x23\x9d\xa0\xeb\xac\xd5\x05\x42\x99\x67\x6b\x61\x11\x5a\x20\xe1\x82\xbb\x63\xe7\xf9\xae\x36\x65\xec\x9d\x99\x36\x1c\xc1\xaf\x6b\xa6\xe0\xd5\xba\x34\x41\xdc\x60\xe3\xce\xc6\xc3\x8f\xf7\x6f\xbb\xcf\x5f\x3f\x0c\x21\x7b\x11\x13\x8c\x88\x78\xf3\x35\x2b\x7c\xfa\xfe\xed\x0b\x44\xaf\x7e\xf4\x72\x04\x4a\xfb\x6b\x2b\x97\x58\x43\x0b\x9b\x4b\x44\x37\xec\x83\x77\x63\x7f\xdd\xe1\xa3\x50\xfe\x1f\xec\xae\x66\x32\xef\x8a\xac\xf4\x7c\x95\xc0\xb4\xea\x0e\xe6\x92\xac\x96\xa8\x0f\x8f\xca\x3e\x60\x6f\x03\x37\xa8\xad\x68\x60\x5c\x0b\xab\xa9\xcd\x63\x5e\x0b\xf9\x89\x41\x81\x31\xe3\x19\xef\x86\x6b\xbf\x79\x6e\x72\xae\x89\x96\x3b\x55\x76\xf9\x0f\xad\x56\xb6\x89\xfd\xef\x39\xef\xd6\x92\x23\xf2\x09\xd0\x62\xcf\xe7\x6c\x55\x8e\x5d\xc9\xe9\xfe\x67\x5f\xe7\xc0\xd8\x8b\xe2\x6c\xc5\x3c\x3f\x5d\x60\xac\x64\x5f\xff\xf9\x25\xf5\x9c\x50\xdd\xdf\x00\x00\x00\xff\xff\xfc\x27\x5b\x79\x47\x02\x00\x00")

func gitignoreGrailsBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreGrails,
		"gitignore/Grails",
	)
}

func gitignoreGrails() (*asset, error) {
	bytes, err := gitignoreGrailsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/Grails", size: 583, mode: os.FileMode(420), modTime: time.Unix(1441560244, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _gitignoreHaskell = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x2c\x8d\x41\x0a\x03\x31\x08\x45\xf7\x1e\xa5\x50\x7b\xa4\x62\x34\x69\x02\x45\x43\xed\x84\xcc\xed\xc7\x21\x59\xf8\x1e\x22\xdf\x2f\xcd\xff\xc0\x94\xe8\xfb\x94\x3c\xe0\x81\x16\x53\x5b\x80\x37\x1d\x6b\x58\x4e\x7d\xdb\x76\x1c\xb0\x76\x0e\x78\xd6\x01\xb8\xe2\x4e\x2a\xc9\xe6\x6b\x7d\xc3\xbd\x22\x9b\x96\xf6\x89\x64\xff\x59\x09\xd1\x31\xef\x86\x0e\x57\x00\x00\x00\xff\xff\x38\x08\xc4\xca\x7a\x00\x00\x00")

func gitignoreHaskellBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreHaskell,
		"gitignore/Haskell",
	)
}

func gitignoreHaskell() (*asset, error) {
	bytes, err := gitignoreHaskellBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/Haskell", size: 122, mode: os.FileMode(420), modTime: time.Unix(1441560244, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _gitignoreIgorpro = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x24\xcb\x31\x0e\xc2\x40\x0c\x44\xd1\x9e\x53\x8c\x44\x47\xc1\x01\xe8\x28\x38\xc8\xb2\x9e\x80\x25\xe3\xb5\x12\x2f\x4a\x6e\x4f\xb2\x34\x5f\xaf\x98\x39\xe3\xfe\x6d\x2a\x50\xaf\xd6\x45\xfd\x85\xc7\x1a\x9c\xf5\x43\x4f\x4c\x6a\x5c\x6e\xc8\x37\x37\xd4\xe2\x78\x12\x75\x66\x49\x0a\x8a\x0b\x28\x7a\xd0\x5a\x2d\x66\x1b\xb2\x21\xb9\xe4\x31\x87\xc6\xf4\x7f\x9f\x2e\xd7\x58\x63\x34\xf7\xf6\xe1\xbe\xfb\x17\x00\x00\xff\xff\x31\x87\x73\x89\x79\x00\x00\x00")

func gitignoreIgorproBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreIgorpro,
		"gitignore/IGORPro",
	)
}

func gitignoreIgorpro() (*asset, error) {
	bytes, err := gitignoreIgorproBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/IGORPro", size: 121, mode: os.FileMode(420), modTime: time.Unix(1441560244, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _gitignoreIpythonnotebook = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x52\x56\x08\x49\xcd\x2d\xc8\x2f\x4a\x2c\xaa\x54\x48\x49\x2c\x49\xe4\xd2\xcb\x2c\xa8\xcc\x4b\x8a\x4f\xce\x48\x4d\xce\x2e\xc8\xcf\xcc\x2b\x29\xd6\xe7\x02\x04\x00\x00\xff\xff\x05\xae\x85\xc7\x25\x00\x00\x00")

func gitignoreIpythonnotebookBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreIpythonnotebook,
		"gitignore/IPythonNotebook",
	)
}

func gitignoreIpythonnotebook() (*asset, error) {
	bytes, err := gitignoreIpythonnotebookBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/IPythonNotebook", size: 37, mode: os.FileMode(420), modTime: time.Unix(1441560244, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _gitignoreIdris = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xd2\xd2\xcb\x4c\x4a\xe6\xd2\xd2\xcb\xe7\x02\x04\x00\x00\xff\xff\x91\x9b\x77\x19\x0a\x00\x00\x00")

func gitignoreIdrisBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreIdris,
		"gitignore/Idris",
	)
}

func gitignoreIdris() (*asset, error) {
	bytes, err := gitignoreIdrisBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/Idris", size: 10, mode: os.FileMode(420), modTime: time.Unix(1441560244, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _gitignoreJdeveloper = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x3c\x8e\x41\x4a\x04\x41\x0c\x45\xf7\x75\x8a\xc0\x6c\xa5\xfb\x0c\xe2\x38\xe0\x4a\xc1\x13\xc4\xd4\xef\xb1\xec\x74\x57\x91\xa4\x1c\xfa\xf6\x16\x23\xba\x0b\xe1\xfd\xf7\xff\x89\x32\x16\xee\x1a\xc4\xad\x69\x11\x8e\x52\x77\xf2\xa8\xc6\x57\x50\x2e\x06\x19\xf7\x41\xdd\x91\xe9\xe3\xa0\xf8\x04\xbd\x9c\x9f\xe9\x0d\xb6\x54\xdb\x78\x17\xd0\x13\xcb\xf8\x2e\xe0\xe8\x86\x34\x65\x0e\x9e\x53\x3a\xfd\x66\x06\x45\x8f\xe7\xcb\x50\x1e\x0a\x27\x19\x6c\xd9\xaf\x29\xb0\xb5\x3b\xf4\x57\x5f\x7b\xb4\x1e\xff\x8d\x05\x9e\x44\xd9\x1d\x3e\xa7\x8c\xa6\xf5\x98\xd3\x17\x7f\x73\xae\x72\xcf\x69\x95\x95\x96\xa2\x78\x20\xa6\xc6\x36\x0c\x0b\xbd\x1a\x8b\x8e\x41\x86\x8c\x3d\x0a\x2b\xbd\x0f\x17\xe8\x62\xbc\xe1\x56\x6d\x4d\x72\x63\x55\xc4\xe4\x5e\x27\x95\xf5\x27\x00\x00\xff\xff\xa4\x69\x70\x04\xff\x00\x00\x00")

func gitignoreJdeveloperBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreJdeveloper,
		"gitignore/JDeveloper",
	)
}

func gitignoreJdeveloper() (*asset, error) {
	bytes, err := gitignoreJdeveloperBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/JDeveloper", size: 255, mode: os.FileMode(420), modTime: time.Unix(1441560244, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _gitignoreJava = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x1c\xcb\xb1\x6a\xc3\x30\x10\xc6\xf1\x5d\x4f\x71\xe0\xa5\x35\x45\x82\x8e\xdd\xdb\xc1\x60\xe8\xd0\xdd\x5c\xe5\x8b\x25\xe7\xe4\x13\x3a\xc5\xca\xe3\x47\xc9\xf2\x1f\x3e\x7e\xdf\x68\x3d\xa3\xaa\x31\x03\xcc\xf2\x1f\x99\xe0\x4f\x84\x15\x2e\x52\x60\xc2\x13\xe1\x6d\xfa\x9c\xbf\xdf\x8d\x4d\x75\xb7\x35\x65\xf7\x94\xbf\xe8\xaf\xb8\x11\xfc\x74\xaf\x30\x98\xd1\xee\x58\x7a\xdb\xab\xd4\xdb\xd1\x19\x4b\xbd\x21\x43\x42\x1f\xe2\x41\xe0\x0b\x6a\x00\x96\x4d\x3f\x40\x89\x20\xd4\x9a\xbf\x9c\x6b\xad\xf5\xf7\x89\xd6\x4b\x72\x74\xb8\x55\xda\xc1\x82\xab\x0b\xc4\xd9\x51\x29\x52\x96\x20\x55\xb3\x54\x7b\x4f\x6c\x82\x2e\x7d\x5c\x72\x5c\x47\xf3\x08\x00\x00\xff\xff\x9e\x86\x1d\x0c\xbd\x00\x00\x00")

func gitignoreJavaBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreJava,
		"gitignore/Java",
	)
}

func gitignoreJava() (*asset, error) {
	bytes, err := gitignoreJavaBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/Java", size: 189, mode: os.FileMode(420), modTime: time.Unix(1441560244, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _gitignoreJboss = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x84\xd0\x3d\xae\xc3\x20\x0c\xc0\xf1\x9d\x53\x20\x65\x63\x88\x2f\x91\x6c\x4f\x7a\x5d\x3b\xba\xc1\x89\x92\x38\x05\x01\xfd\xba\x7d\x5b\x55\x4e\x55\x05\x94\x85\xe5\x6f\xf1\x03\x4f\x27\x17\x23\x44\x0a\x57\x0a\x80\xcc\x60\xc9\xb3\x7b\x80\x0f\x6e\xa2\x2e\xd5\x74\x4f\xea\x67\xc6\x52\x8f\x17\x4e\xbb\x73\xcb\x78\x1e\x17\xdc\xbf\xef\x6d\xb2\x1b\xc0\xd4\xaf\x73\x9b\xd2\xe2\xc1\x18\x30\xdb\x62\x31\x61\x21\xdd\x5c\x98\x33\x49\x9e\x5e\xe0\x24\xe7\xc9\xf5\xdf\x79\x56\x72\x81\x96\x6d\x14\x68\xc9\x79\x7a\x5d\x65\x9e\x96\xfc\xa5\x55\xa5\x3f\x6b\x27\xab\x3d\x76\x33\x0e\xa4\xfb\x91\x29\xea\x4a\x29\x53\x37\xed\xe1\xef\xff\xd8\x36\xea\x19\x00\x00\xff\xff\xdd\x36\x93\x3f\xfd\x01\x00\x00")

func gitignoreJbossBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreJboss,
		"gitignore/Jboss",
	)
}

func gitignoreJboss() (*asset, error) {
	bytes, err := gitignoreJbossBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/Jboss", size: 509, mode: os.FileMode(420), modTime: time.Unix(1441560244, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _gitignoreJekyll = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x8a\x2f\xce\x2c\x49\xd5\xe7\xd2\x2b\x4e\x2c\x2e\xd6\x4d\x4e\x4c\xce\x00\x71\xb2\x52\xb3\x2b\x73\x72\x74\x73\x53\x4b\x12\x53\x12\x4b\x12\xb9\x00\x01\x00\x00\xff\xff\xa0\x2d\x85\xce\x25\x00\x00\x00")

func gitignoreJekyllBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreJekyll,
		"gitignore/Jekyll",
	)
}

func gitignoreJekyll() (*asset, error) {
	bytes, err := gitignoreJekyllBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/Jekyll", size: 37, mode: os.FileMode(420), modTime: time.Unix(1441560244, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _gitignoreJetbrains = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x74\x92\x4d\x8f\xda\x3c\x10\xc7\xef\xf9\x14\x23\x71\x79\x9e\x8a\xc0\x9d\x1b\x85\x6d\x05\xea\x4a\xab\x45\x3d\x23\x27\x9e\x24\xd3\x75\x6c\x77\x66\x5c\xc8\xb7\xaf\xc3\x3b\x52\xf7\x82\xc8\x6f\xde\xfe\xf3\x1f\x4f\x60\x15\xfe\x20\x0b\x6c\x51\xbf\xb2\x21\x2f\xb0\x59\xbf\xc8\x02\x36\x5e\xd1\x39\xda\x4e\xe1\x3d\x55\xc3\x2b\x79\x9c\xc2\x5b\x17\x77\x1a\xb8\x9f\xc2\x32\xc6\x55\xb0\x23\x1a\x56\x9d\x19\xc9\xea\x07\x05\x5f\x14\x5f\x66\xd4\xbb\xa2\x98\x4c\x60\x4d\x8c\x75\xce\x1e\xca\xca\x08\x5a\x88\x1c\x7e\x65\x00\x4d\x6e\x60\x74\x51\xcc\xc8\xa2\x99\x17\x13\xa0\x06\x86\x90\x80\xb1\xcf\x4a\x40\x3b\x04\x53\x8d\xff\x38\xb9\x3c\xc0\x28\x38\x34\xa2\x40\xad\x0f\x7c\x8e\x37\xc1\xb9\x70\x20\xdf\x2e\xf2\x24\xf8\x29\xc8\xa5\x44\xac\xa9\xa1\x1a\x44\x53\xd3\x2c\x32\x3e\xf7\x3f\x04\xfe\x90\x68\x6a\x9c\x1d\xb3\xae\x2b\x55\x23\x1f\xf2\x44\x2c\xd5\x9a\x17\x30\x4c\x28\x63\xd3\x1d\x7a\x21\xa5\x2c\x23\x30\x74\xd4\x76\x65\xdd\x25\xf6\xd0\x90\x43\xb9\xb7\xb7\x46\xcd\x2e\x24\xae\x51\x32\x90\x7f\xf2\xc7\x31\xf2\xdb\xad\x3f\x09\xd9\xc1\x9b\x9e\xea\x27\x96\x68\x8d\x92\x17\x47\x3e\xe1\xcc\xbf\xb3\xb1\x0e\xef\x02\xda\xd3\xf7\x53\x91\xa3\x8a\x6f\x7b\xbc\x06\xdf\x06\x78\x39\x46\x97\xcd\x63\x88\x2e\xb5\xe4\xef\xe5\xfd\x18\xde\xa1\x6a\x36\x53\x2e\x33\x26\xf0\x2d\x2f\xf9\xc9\xd5\xf2\x7d\x23\x8f\xbf\x07\x39\xa5\xbe\x9d\x1a\xde\xed\xbf\xf8\x93\x07\x5c\x1f\x50\x31\x0f\x49\xe7\x23\xe9\x23\x3a\x0d\x1e\xfd\x5c\x2a\x2d\xc7\xf9\x17\x3d\xe7\xb7\xb0\xef\x83\xcd\x27\x97\x53\xee\x76\xf3\xbe\xbc\x46\x8d\x3a\x23\x42\xc6\x8f\x35\xe5\x19\x5e\xfd\x58\xb1\x91\xce\x0d\x4a\xb5\x5c\xd2\xe1\xbf\xac\x15\x96\xde\x72\x20\x0b\x3b\x4d\x96\x02\x18\x6f\x6f\x82\xfe\x2f\xea\xd0\xef\xeb\x7b\xe1\x1e\x8f\x31\xb0\xee\x45\xf9\x66\xc3\x43\x78\x96\x3d\x88\xc8\x3a\x3a\xfa\x80\xcb\x2a\x91\xb3\x8f\xc1\xbf\x01\x00\x00\xff\xff\x66\xb8\xa1\xcd\x4c\x03\x00\x00")

func gitignoreJetbrainsBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreJetbrains,
		"gitignore/JetBrains",
	)
}

func gitignoreJetbrains() (*asset, error) {
	bytes, err := gitignoreJetbrainsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/JetBrains", size: 844, mode: os.FileMode(420), modTime: time.Unix(1441560244, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _gitignoreJoomla = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xac\x5c\xdd\xb2\xe3\x28\x0e\xbe\xef\x47\x99\xaa\x39\xd9\xda\xae\xa9\xda\xeb\xbd\xd9\xc7\x48\x11\x87\x24\xf4\xb1\x8d\xd7\xc6\xa7\x4f\xf6\xe9\x17\x0c\x98\x1f\xf3\x27\x79\x2e\x66\xfa\x04\x7d\x9f\x84\x09\x06\x21\x89\x5c\x3e\x9e\x4c\xb0\xe7\xc8\x67\xfa\xe3\xf2\xf1\x12\xa4\xeb\xe8\xb2\xfc\xb8\x90\xfb\xc0\x46\xb6\x88\x99\x08\x3e\x5f\x3a\xd2\xbd\xe8\xe5\x8f\x43\x33\x1f\x26\x3e\xd2\x51\x2c\xea\xcf\xeb\x26\xac\xa3\x7e\x91\xef\x2a\x48\x90\xe7\x52\x05\xdd\xc8\x38\xd2\xb9\x8e\x6b\xeb\xfd\xc4\x17\xc1\xc6\x45\x90\xbe\xaf\x62\x7f\x71\x3e\xf4\x64\x9d\xee\x44\xd4\x15\x77\x7c\x14\xf2\xc3\x4b\xca\xf9\xfc\x6e\xe8\xad\xa0\x4f\x3e\x33\xda\xf0\x60\x2f\xda\x7d\x36\x0c\xb9\xec\xc1\x83\x3d\x9b\x3a\x4a\x3a\xd1\xfa\x40\x75\xdc\x44\x46\x5a\x1f\xcc\x07\x1b\xef\x74\xae\xc2\xcc\x77\xd3\x80\xec\xc9\xf8\x5c\xc9\xb3\x61\x00\x7b\xfe\x6c\x18\xbe\x81\xde\x19\x69\x40\x8d\x6b\xdd\xe2\x20\xdf\xae\xa6\xae\x0d\xfc\xbe\xf6\x0d\xb8\x91\xfe\x5e\x1e\x94\xde\xeb\xc8\xa9\x5f\xe5\xd3\xd6\x71\xb3\x7c\xdc\x99\x36\xcc\x83\x85\x92\xb9\x7b\xd5\xdf\x65\x3a\x4c\xbd\x9c\xd4\x75\xcb\xeb\xd2\xf2\x3a\xff\xa6\xb7\x9e\x8d\x9f\x65\xa0\x9a\x53\xdf\x72\x3d\x1b\xfa\x18\xf4\xa2\xfd\x74\xa4\xb2\xb1\xeb\xd7\x7b\xaa\x8f\x76\x36\x5d\xe8\xf8\xe7\x7f\xfe\xad\xff\xff\x61\x17\xb2\x0f\x09\x84\x11\x96\xf7\x02\x22\x85\xab\xc7\x19\x2a\xd4\xb2\xbf\xc8\xe1\x89\x50\xab\xde\x32\x8c\xe6\x41\x6d\x2e\x4c\xce\x51\x32\xfd\xa2\x23\x98\xaa\x36\x2a\x38\x01\x62\x45\x2e\x04\x57\xf9\x58\x62\xd1\xfb\x2b\x9a\x07\xb1\x39\xf5\xcf\x2b\x59\xc5\x4b\xce\x1e\x26\xf7\x23\xc6\x47\x39\x99\xf8\x27\x6b\x9f\x07\x79\x0d\xd0\x7e\x98\x59\x6c\x77\xa7\x53\x5c\xac\x6d\xbd\x45\x9d\xa1\x42\x2d\x6b\x9a\xe7\x0c\x9c\x64\x63\xed\xeb\x81\x3b\xc7\x3d\x61\x5b\x8e\xe0\x19\x2a\xd2\xf2\xbe\xa7\x9e\x57\x80\x20\x83\x96\x94\x98\x87\xec\xb0\xdd\x53\x4f\x71\xa1\xb6\x77\x8f\x4e\xa9\xd8\x3f\xfc\x1d\x2a\xa0\x3d\xf9\xef\xca\xa4\x23\x2d\x67\x0d\x6e\xd3\x2b\xa8\x80\xf6\x44\xfb\x54\xf0\x39\xe0\xf3\xc0\x36\xdf\x8b\xdc\xff\x76\xb7\xb9\xe3\x77\xd8\xa3\xa7\xf8\xd0\x3e\x88\xdf\xfc\x21\x17\x0b\x3e\xab\x4d\xe3\x2a\xb8\x98\xce\xd2\xcf\xf5\xe0\xbd\xde\xd8\x27\x6d\xf7\xb7\xf2\x1a\x20\xfd\x10\x53\x7f\x65\x0b\x43\x10\xda\xac\x58\x07\xe9\xfb\xe8\x16\xe7\xbd\x56\x90\xd7\xe1\x18\x50\x4f\xca\x9c\xe6\x51\x1c\xb0\x53\xad\x22\x02\x08\x06\xdc\x0e\x78\xfb\x8e\x68\x60\x8b\x3a\x24\x80\xe2\x20\x8e\x26\x0f\xf6\xc4\x50\x30\x87\x20\x88\xef\xe7\x73\x90\x07\x2e\x14\x07\x6c\x6b\x8b\x90\x60\x28\x50\x4b\x40\x0f\xd6\xa3\x40\x2d\xc1\x37\xf2\x90\x05\xb5\xb7\x47\x7b\x90\x2c\xb0\x3d\x15\x33\x42\x30\xa0\x76\x06\xc2\x7a\xc1\xe1\x34\x15\xac\x42\x30\xe0\x76\xc6\x15\xc3\x80\xdb\xd1\x01\x33\x1c\x09\x6c\x4d\x47\xdd\x50\x1c\xa8\x2d\xf8\x21\x21\x64\x81\x23\x2b\x3a\xfe\x87\xe2\x40\x6d\xd9\x18\x22\x8e\x04\x8e\xdf\x6c\xce\x2f\x86\x02\x0e\xf7\xd8\x58\x26\x92\x05\xb5\xb7\x45\x44\x11\x0c\xa8\x1d\xf0\xf9\x2f\x20\x81\xad\xcd\x64\x9a\x80\x1b\x84\xe5\x40\x6c\xb5\xe2\x7a\x76\x33\xa7\xb6\x76\x0a\xef\x48\xcf\x16\xfa\x31\xbd\xa6\xe6\x70\x5c\xb7\x2e\x82\x0f\xa0\x08\x9e\xa1\x40\x03\x86\x6a\x85\x80\x13\xa0\x56\xb6\x39\xdd\xfe\x8e\x7b\x14\xb0\x25\xfe\x7c\x02\x9f\xc8\x50\x10\x96\x80\x41\x56\xf8\xf6\xae\x58\x6a\x37\x84\x13\xc0\x56\xd6\x5e\x30\x25\x55\x91\x60\xc0\x7e\x9d\xe2\x42\x6d\xf3\x51\xae\x0e\xed\xa7\x2c\x8f\x02\xb5\x34\xf1\x69\xed\x49\xfb\x7a\xe2\x73\xa0\xb6\xf6\x38\x0f\x92\x85\x09\xfd\x03\xbf\x38\xe4\xf7\xb5\xac\x37\xf0\xa4\xb4\x1c\xa8\x2d\xc1\x44\x0f\x9b\x1a\x9a\x01\xb6\xc3\x79\x7f\x03\xce\x0c\xcb\x81\xda\x5a\xc7\x99\x12\xd8\x1a\x65\x28\x50\x4b\x5f\x72\x8b\x67\xc0\x19\x68\x39\x27\xd3\x40\xf4\x9b\x48\x5f\xe6\x54\x1e\xc8\xaa\x38\xd9\x93\xa7\x3a\x20\x9d\x57\x70\xb2\x17\x40\xb7\x21\xaf\xe1\x64\x3f\xfa\x3b\x81\x45\x4c\x53\x7c\x70\x7a\x8c\x4c\xa2\x7b\x11\xe9\xb8\x9b\xbf\x4e\xb2\xb1\xe9\x39\xaa\xbe\xc9\xae\xe7\xe4\xf3\x2c\x1d\xdb\x03\x79\xd6\x7c\xb1\x13\x4c\xac\x5d\xc4\xf4\x8b\xa8\x58\xcb\x72\xb8\xee\xfa\xe4\x7b\x96\x8e\xed\xc1\x24\x85\x37\xb9\x7e\xe2\xbe\x74\xc7\x3e\x63\x7f\x24\x5f\xec\xb9\xbd\x41\x7f\x87\x0a\x6c\x4f\xbe\x38\x30\x59\x15\x10\xa1\x56\xe5\x29\x5d\xca\x97\xab\xca\xf3\x0c\x6c\x9e\x39\x2c\x65\x97\xa0\x63\x7b\x30\x72\x80\x7f\x79\x20\x62\xad\x0a\x36\xbe\x87\x0e\x67\xd8\x72\x91\xb6\xff\xfc\x16\xf7\x2b\x99\xe5\xaa\x0d\x7c\xed\x52\xfc\x33\x7d\x60\x83\x44\x9c\x64\x9f\xb1\x8f\x7b\xf7\xd3\x1a\xce\xf4\x43\xb9\x6f\x03\x9f\xf1\x43\xb1\x2b\x00\xf7\xe2\x5b\xbe\xc1\x0b\xd2\x05\x39\x90\xf1\x09\xf3\x5d\xd5\xa9\x9c\x79\xac\x05\x99\x36\x47\x96\xcb\x1c\xd9\x58\xfb\x98\x72\x99\x98\x7b\xc2\x36\xb4\x5c\x26\xa2\x22\x2d\xe3\xaa\x5d\x0e\x64\xa4\x75\x54\xe9\x4a\xcc\x45\x96\x4c\xc0\xf2\xc8\x07\x22\xd2\xea\x9d\xde\xd6\xf6\xb4\xeb\x81\x88\xb4\xfa\x62\xcf\x57\x2f\xff\x03\xce\xb0\x98\x7c\xb2\x38\xe5\xc1\x7a\x01\xac\x11\x4a\x6b\xc0\xf6\x83\xa3\x46\x5e\xd2\xf8\x8a\x1a\x39\xc3\x3c\xd1\x5d\x24\x75\xfa\x09\x3b\x50\x7a\x34\xa4\x45\x70\xd2\x28\xc5\x45\xdb\x1e\xe8\x70\xc3\xcd\xac\x9d\x8b\xb4\xbd\xd0\x07\x96\x06\xb5\xa8\xb2\x43\x76\xa7\xe9\xa4\xef\x21\x80\xce\x7b\x8a\x8f\xea\x03\xc2\x69\xf1\x79\x28\x9b\xd3\xcc\xe5\xcb\x0f\x5b\xaf\x03\x22\xb4\x94\xeb\xd6\xaf\x54\xd5\xde\xb7\x7b\xa9\x21\x0b\x6a\xef\x45\xc4\x0b\xf0\x85\x7a\x14\x88\xa5\x7a\xf1\x58\xfe\xf2\xc5\x0e\xe4\x5f\x74\x9e\x59\xf9\xc2\x45\x5e\xcd\x40\x46\xf6\x90\x83\x94\x60\xdb\x7b\x33\x2e\x79\x56\xc6\x28\xdf\xa3\x8c\xd0\x29\xab\x0a\x66\x4b\x36\x55\x31\xa9\xcb\x46\x3e\x44\xc5\xd2\x2b\x88\x30\x29\x53\x06\xeb\x74\x4a\x19\x63\xf2\x20\x65\xd0\xee\xa8\x97\x61\x2d\x7d\x32\x19\x83\x32\x68\x0b\xf6\x57\x20\x3a\x4a\x5f\x06\xe9\xf8\x7a\x19\x63\x02\xe3\xf5\x27\x5b\x72\x17\x1c\x2d\x30\x3f\x5f\xdd\x15\xa8\xfd\xe5\x3e\xaa\x71\x20\x55\xd1\x59\x92\xeb\x97\xb6\x84\xd0\x5b\x44\xd1\x46\xb6\xb3\x5a\xb2\xe5\xb5\xf7\x9b\x93\x37\xfd\xdc\x5d\xcf\xb6\x7f\xb2\xf7\x30\x33\x77\x3d\xb3\xf7\x11\xab\x57\x25\x33\xf7\x42\xf3\x37\x17\xf3\x77\x15\xb3\xd7\x0e\xe3\x9b\x77\x5b\xe1\x55\x4a\x60\xef\x01\x96\xae\xe0\x65\xef\xc8\xe5\xee\xba\x15\x6e\xb7\xc5\x22\x5d\x02\x11\x49\xfc\x2f\x72\x0b\xac\xc8\x49\xe6\xbe\x10\xd3\xb2\x6c\x29\x17\x79\xb4\x26\x5e\xa3\xde\x4b\xdd\xe7\x84\xa6\x89\xff\xa6\xd2\xb5\xba\xde\xde\x1f\xd3\xf8\xfc\x11\x5c\x93\x33\x25\x7b\x5b\xe8\x52\x7d\xce\x96\x6e\xb8\x8b\x72\x59\x88\x5f\x4a\x5a\x02\xb9\x2a\xd0\x2c\xca\xaf\x74\xcc\x82\x5c\x7d\x7d\x12\x62\xaf\x91\xf4\xac\x00\x52\x55\x23\x0f\xee\xf9\x60\xc5\x8e\xef\x47\xf3\xac\x2e\x76\x1f\x89\x82\xca\x05\x49\x34\x28\x35\xf5\x81\x65\x9d\xb1\xbb\x94\x05\xca\xd7\x9d\x2c\x4b\x1b\x50\x59\xf6\xbd\xdd\x12\x76\x15\x8f\x7f\x35\x20\x17\xa6\xe6\xe7\xe4\x5f\x0f\xcb\x3f\xb8\xab\x70\xcc\x66\x3b\x9b\x26\x41\x58\x5a\x98\xcf\x07\xcb\xb9\x12\x96\x18\xb4\x41\xcb\x4f\xb2\xc3\xe5\xa3\xb3\x46\xcd\x16\x5a\xd7\x1c\xd7\xee\xe6\x9d\x4d\x4a\xff\xf7\xb3\x09\x53\xff\x62\xa2\x38\x50\x56\x9f\x74\xa7\x05\x97\x6b\x47\xe9\x99\x43\x5c\xdd\xb6\x5f\x02\x98\x05\x79\xd5\x74\x59\x4c\x18\x4e\xca\xc3\xfc\x12\xb6\xcc\x1a\x22\x7d\x82\xb6\x17\xb0\xe9\x1d\x2e\x80\x82\x5a\xb4\xec\x9c\x30\x71\x7f\xe9\xc6\xc8\x91\x62\x5f\xb4\x32\x85\x0e\xf0\xfa\xac\xdb\x29\x71\x1c\x16\xc4\x80\xdb\x79\x83\xf1\x00\x1b\x7e\x91\x5b\x33\x1a\xa0\x5f\xbd\x35\x20\x2c\x40\x77\xdb\xaa\x75\x80\xd7\x2d\x04\x97\x75\xaa\xa8\x06\x7d\xca\x4f\xef\xe6\x75\xb8\x41\x90\x75\xbd\x7e\xc5\x65\x0d\xd4\xb0\xaa\xee\x55\x95\x65\x48\x83\x26\xce\x45\x71\xf5\xf0\x40\x75\x6d\x56\xd0\x8e\x6b\xd0\xe9\xea\x20\x2b\x98\xba\x2e\x57\x56\x56\x86\xd4\x35\xcd\x64\xbc\xab\xdb\x22\x2e\xfd\xd8\x06\x6d\xd0\x4c\xd5\xab\x7b\xbf\xaa\x9f\x02\x80\x61\xeb\xba\xab\x9b\x93\x07\x6a\xd0\xa6\xce\xa2\x4d\x98\x06\x5d\xef\xf1\xae\x4a\x80\x6a\x83\xe9\x70\x75\x9d\xdb\x2e\xdb\xb6\x6c\x06\xd0\xba\xe6\x86\xbd\x39\x80\x35\x68\x7c\xf1\xc5\xaf\x53\x6d\x01\x36\x68\xad\x3a\x07\x3e\xaa\xee\xa4\xc9\x63\xf9\xc0\xba\x36\x50\x9b\xcb\x77\xfd\xe7\x3f\x1a\x51\x6d\xfa\xfe\x6a\xc2\x94\x75\x6d\x71\xc5\x42\x24\xf1\x20\xf2\xee\xb2\xa6\xe3\x8a\xc9\x48\xa2\x74\xa9\x66\xb2\xfd\xbc\x52\x27\x5f\x5e\xed\x32\xf9\x4d\x1b\x71\x6f\xd0\xce\x57\xd8\xb6\x1f\x81\x0e\xcd\xea\xb4\x13\x36\xee\x07\x9b\xb0\x39\xdd\x21\x89\xe5\xf2\xec\x17\xf5\x49\x95\x4a\xc9\x69\x12\xb5\xaa\x30\xce\x83\xcf\x83\x69\xe7\x3a\x2e\xa2\x43\x14\xe6\x29\xcc\x87\x20\xd6\x61\xdb\x74\xae\xd9\xb5\x98\x9a\x04\xd7\xe0\xa2\x20\xe6\xb3\x0d\x7e\x98\x8f\xfe\x76\xe2\x9a\xed\xf0\x7b\xb6\x8a\x89\xfe\x1c\x2c\xfe\x81\x2d\x87\x89\x13\x8a\x4e\xea\x62\x5e\xfa\xb3\x3f\xc6\x7e\x2c\x2f\x76\x6c\x37\x46\x4a\x1e\xfe\x12\x57\x09\xf2\xce\x02\x5c\xf0\x38\x29\x56\x0e\x5d\x56\xe8\x85\x66\x7d\xb9\x17\xdd\x09\x9a\x9d\x63\x14\x8b\x5c\x1c\x3c\x15\xf9\x0e\xda\xdc\x44\xf1\x5b\x37\x47\x24\x6e\x0d\xbf\xfe\x54\xa0\x3b\x15\xda\xf6\xdb\xfc\x2d\xfa\x20\xf3\xf7\xd8\x58\xe8\xa2\x6a\x87\x20\xed\xa1\xd1\xee\x5c\xb1\xc0\xdf\x7b\x62\x99\x1f\x84\x0b\xda\xf7\x5d\xe0\x20\x71\xb1\xb9\x54\x38\xd8\xfe\xf6\x56\x58\x75\x7b\x31\xa5\xd0\x8a\x95\x41\x6c\x45\xca\x05\xb9\x5b\x9f\x32\x00\x55\xd8\x5b\x10\xa7\x3a\x69\xca\x71\x2f\x7b\x61\xae\xcf\xb7\x4d\x49\xa2\x09\xb6\xba\x82\xda\x80\x69\xa5\xc7\x87\xb6\x22\x37\xfd\x62\xc9\x56\x26\x9b\x12\x1c\x07\xc0\x4a\x5c\x89\x69\x4a\xba\xd7\x7f\xe5\x84\xae\x2e\x33\x85\x50\x95\x93\xa9\x76\x2f\x12\x1d\x8b\x52\x23\x66\x97\x5d\x57\x0c\xe9\x33\xad\x54\x95\x2b\xa6\xda\x4d\x35\x61\x4a\x54\x30\xa6\xea\xce\x2e\x66\x91\x49\x50\x37\xf1\xfe\x4a\xa6\x84\xc9\xa1\xf3\x01\xb6\xa8\x2d\xab\x3d\xd5\x39\xbb\x31\xa4\xe6\x87\x13\x1e\xbf\x6e\x27\x4b\xa9\x35\x33\xaa\x20\x0a\x57\xf9\x58\xe8\x6d\x94\x09\x91\xc9\x2c\x44\x92\x20\x1f\x10\xc9\x6c\x02\x23\x6a\xf6\x17\x1c\x2b\x0a\x7e\xf0\xd0\x36\xba\x4c\x5c\x62\x27\x3d\x82\xe2\x7d\xf4\x88\x48\x8d\x8c\x59\x5e\xd3\x23\x63\x85\x89\x91\xf1\x44\xd1\xc8\x18\x49\x72\x64\x8c\x2c\x35\x04\x46\x14\x0f\x9a\x69\x4e\x76\x5d\x3b\x01\x7b\xe2\x2a\x6a\xdf\x2a\xa0\x12\xed\x81\x3b\x11\xc9\xec\x3e\xa7\xde\xd1\x82\x58\xd7\x15\xa5\x00\x3c\x65\x51\xd7\xf5\x24\x04\xd3\xcf\x29\xd1\xea\xff\x28\xe3\x41\xa4\xcb\x4f\x12\xa2\x85\x3e\x12\xad\xa9\x71\x0b\x7e\xbb\xc6\xe7\xa8\x6d\xf2\x12\x56\x7c\x1c\xc4\x89\x37\x76\x6b\x3f\xbe\xac\x5b\xb3\x29\xa7\x38\xb4\xa7\xfa\xe5\xb7\xb9\xe4\xa5\x3e\xeb\x28\x05\x5e\x66\x55\x45\xa9\x8f\x4d\xf2\x0c\x73\x6c\xfc\x2b\x6c\xda\x03\xcd\x61\xb3\x73\x28\xd3\x69\x53\x31\x4c\x3a\x17\xa7\x72\x57\xeb\xac\x6b\xf8\x37\x77\xdc\x4b\xa1\x9a\xe8\xed\x76\x4a\xf9\xe3\x43\x7c\x8b\x1f\xff\x0f\x00\x00\xff\xff\x55\xf9\xae\x71\x73\x57\x00\x00")

func gitignoreJoomlaBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreJoomla,
		"gitignore/Joomla",
	)
}

func gitignoreJoomla() (*asset, error) {
	bytes, err := gitignoreJoomlaBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/Joomla", size: 22387, mode: os.FileMode(420), modTime: time.Unix(1441560244, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _gitignoreKdevelop4 = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xd2\xd2\xcb\x4e\x49\x2d\x33\xe1\x82\x50\xfa\x5c\x80\x00\x00\x00\xff\xff\xe2\x3d\x7b\x0d\x10\x00\x00\x00")

func gitignoreKdevelop4Bytes() ([]byte, error) {
	return bindataRead(
		_gitignoreKdevelop4,
		"gitignore/KDevelop4",
	)
}

func gitignoreKdevelop4() (*asset, error) {
	bytes, err := gitignoreKdevelop4Bytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/KDevelop4", size: 16, mode: os.FileMode(420), modTime: time.Unix(1441560244, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _gitignoreKate = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x52\x56\x08\x2e\x4f\x2c\x50\x70\xcb\xcc\x49\x2d\x56\x50\xe6\xd2\xd3\xd2\xcb\x4e\x2c\x49\xd5\x2d\x2e\x2f\xe0\xd2\x03\x12\x7a\x5a\x5c\x80\x00\x00\x00\xff\xff\xe9\xbe\x25\x0c\x22\x00\x00\x00")

func gitignoreKateBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreKate,
		"gitignore/Kate",
	)
}

func gitignoreKate() (*asset, error) {
	bytes, err := gitignoreKateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/Kate", size: 34, mode: os.FileMode(420), modTime: time.Unix(1441560244, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _gitignoreKicad = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x6c\xcd\xb1\x8e\x83\x30\x0c\xc6\xf1\x3d\x4f\x61\x89\xe5\x38\xe9\x02\x33\x1b\xc7\x5d\x97\x4a\x15\x43\x5f\x20\x24\x06\x22\x20\x41\xb6\x51\xda\xb7\x6f\x50\xd7\x2e\x5e\xfe\x3f\xeb\x2b\xe0\x12\x09\xfa\xee\x97\xc1\x21\xfb\x29\xa0\x83\x83\x7d\x98\xe0\xea\xbb\xf6\xaf\x81\x59\x64\x6f\xaa\x2a\xa5\xa4\x17\x6f\x8d\xfb\xd9\xed\xa0\x23\x4d\x95\x52\x05\xdc\x71\xdb\x23\x19\x7a\xc2\xe8\x57\x64\xf5\xad\xeb\xba\xce\x77\x30\xcb\x99\x6f\x28\xab\x67\x79\x47\xf8\xc2\x47\xc6\x92\x07\x46\x8a\x1b\xfc\x23\xdb\x19\x37\x53\x66\x1f\x50\x4e\xdf\x1e\x12\x29\x1e\x82\xf4\xf9\xa5\xb7\x43\xc0\x54\x2a\xed\x38\xa8\x57\x00\x00\x00\xff\xff\x83\x5a\x79\xae\xba\x00\x00\x00")

func gitignoreKicadBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreKicad,
		"gitignore/KiCAD",
	)
}

func gitignoreKicad() (*asset, error) {
	bytes, err := gitignoreKicadBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/KiCAD", size: 186, mode: os.FileMode(420), modTime: time.Unix(1441560244, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _gitignoreKohana = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x4a\x2c\x28\xc8\xc9\x4c\x4e\x2c\xc9\xcc\xcf\xd3\x4f\x4e\x4c\xce\x48\xd5\xd7\xe2\x42\x16\xcb\xc9\x4f\x2f\x06\x0a\x01\x02\x00\x00\xff\xff\x96\xfe\x7e\x2e\x27\x00\x00\x00")

func gitignoreKohanaBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreKohana,
		"gitignore/Kohana",
	)
}

func gitignoreKohana() (*asset, error) {
	bytes, err := gitignoreKohanaBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/Kohana", size: 39, mode: os.FileMode(420), modTime: time.Unix(1441560244, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _gitignoreLabview = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x34\x8d\x31\x0e\xc2\x30\x0c\x00\xf7\xbc\xc2\x52\x17\xe8\x90\x57\xc0\x16\x26\x06\x66\x3b\xb1\x84\x91\xd5\x54\x71\x80\xf2\x7b\xe2\x4a\x5d\x4e\xd6\xc9\x3e\x4f\x90\x84\x1a\x36\x61\x0b\x73\xd4\x8f\x0a\xad\x3e\x28\x85\x30\xc1\xfd\x89\x8d\x0b\x54\x7a\x71\xee\x06\x27\x59\x72\x84\x87\x2c\xa5\x7e\x0d\x2e\x29\xd9\x79\xec\x16\xd5\x41\xab\x3b\xe2\xec\xe6\x37\x32\x7e\x7f\xdd\x38\xbf\x3b\x92\xee\x75\xde\xd8\xe5\x8d\x3b\x16\xec\x38\x0c\xaa\xa0\x1d\x9f\x57\x0b\xff\x00\x00\x00\xff\xff\x58\x5e\x95\x08\x8e\x00\x00\x00")

func gitignoreLabviewBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreLabview,
		"gitignore/LabVIEW",
	)
}

func gitignoreLabview() (*asset, error) {
	bytes, err := gitignoreLabviewBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/LabVIEW", size: 142, mode: os.FileMode(420), modTime: time.Unix(1441560244, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _gitignoreLaravel = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xd2\x4f\xca\xcf\x2f\x29\x2e\x29\x4a\x2c\xd0\x4f\xce\xcf\x2d\xc8\xcc\x49\x4d\xd1\x2b\xc8\x28\xe0\xd2\x4b\xcd\x2b\xd3\xd3\x42\x30\x61\x0c\x2e\x40\x00\x00\x00\xff\xff\xab\x96\x52\xb8\x31\x00\x00\x00")

func gitignoreLaravelBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreLaravel,
		"gitignore/Laravel",
	)
}

func gitignoreLaravel() (*asset, error) {
	bytes, err := gitignoreLaravelBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/Laravel", size: 49, mode: os.FileMode(420), modTime: time.Unix(1441560244, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _gitignoreLazarus = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x4c\x90\x4d\x4e\xc4\x30\x0c\x85\xf7\x3d\x85\x25\x36\x80\xc4\xf4\x0c\xec\x41\x2c\xe0\x02\x4e\xe2\x76\x32\x63\x12\xcb\x4e\x24\x86\xd3\xe3\x74\x98\x9f\xcd\x97\xaa\xf5\x7b\x5f\xe3\x07\x78\xc3\x5f\xd4\x6e\x10\xeb\xb7\x64\x26\x7d\x59\xa9\x90\x62\xa3\x04\x21\x17\xd4\x4c\x06\x8f\x86\x0b\x41\xab\x90\x88\xa9\xd1\xd3\xf4\xbc\xa3\x1f\x72\x26\x66\xa7\xd5\xf1\x78\xe2\x1c\xfc\x64\x35\xa7\xd2\xe0\x7f\x67\x1a\x9f\xc3\xea\x14\xe9\xce\x31\x5e\xd5\x81\xd3\x74\xfb\x01\xec\xad\xde\xdc\x8b\xe7\x5c\x9c\xba\x70\x8e\xdb\x9b\x5c\x96\x3a\xcc\x6a\x6d\xe3\x61\x93\xb5\xfb\x0a\xae\x11\xf9\x12\xed\xe6\x97\x31\xa1\x98\x97\x1c\xaf\x69\x16\xbb\x4f\x04\x8c\xc7\x2e\x2e\x2f\x09\x7a\xc9\x0d\x6a\x6f\xd2\x1b\x2c\x95\x13\xa9\xed\x7c\xf4\x6b\x4f\x46\x10\xb1\x40\xf0\x63\x8f\x65\x1d\xab\x39\xc1\xe8\xf7\xda\x4b\xd5\x2c\x5a\x0f\x14\xbd\x41\x5a\xae\xc5\xa3\xe7\xee\xd9\xa5\x01\x8f\x93\x6f\x67\x1e\xe6\x57\x39\xdf\xc8\x67\x20\xf4\x92\x98\x5c\xa6\xf0\x8e\x11\x3e\x3e\xc7\x4e\xc4\x23\x7f\x01\x00\x00\xff\xff\x63\xeb\xe3\x17\x97\x01\x00\x00")

func gitignoreLazarusBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreLazarus,
		"gitignore/Lazarus",
	)
}

func gitignoreLazarus() (*asset, error) {
	bytes, err := gitignoreLazarusBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/Lazarus", size: 407, mode: os.FileMode(420), modTime: time.Unix(1441560244, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _gitignoreLeiningen = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x3c\xcb\x41\x0e\x42\x31\x08\x04\xd0\x3d\x47\x31\x69\x7b\x26\xac\xf8\x3f\x4a\x5b\x02\x34\xd1\xdb\x5b\x4d\xe3\x0a\xe6\x65\x46\x47\xcb\xaf\x26\xb0\x6f\x46\xaf\x70\x79\xa0\x41\x11\xbe\x16\x28\x55\xd0\x9d\x7c\x7d\x81\x76\x50\x7c\xe9\xa4\xfa\x1c\x33\x16\x66\x21\xee\xe9\x46\xea\xc9\x67\xdb\xd1\x48\x25\x9d\xec\x31\xec\xbd\x49\x65\x1e\xdc\xff\x83\x3b\xb2\x4c\x23\x87\xdc\x7f\x65\x1d\x16\xf0\x09\x00\x00\xff\xff\xb1\x74\x97\xa1\x8a\x00\x00\x00")

func gitignoreLeiningenBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreLeiningen,
		"gitignore/Leiningen",
	)
}

func gitignoreLeiningen() (*asset, error) {
	bytes, err := gitignoreLeiningenBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/Leiningen", size: 138, mode: os.FileMode(420), modTime: time.Unix(1441560244, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _gitignoreLemonstand = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x54\x4f\xcb\x6e\x84\x30\x0c\xbc\xf3\x15\xae\x7a\xa8\xb4\x87\xf2\x49\xab\x6c\x6c\xc0\xaa\xb1\xa3\xd8\xa8\xdd\xbf\x6f\x02\xdd\x0a\x4e\xf3\xc8\x4c\x92\x79\x98\xc5\x67\x59\xca\xc0\x8a\xf4\xf3\xc7\x3c\x92\xc8\xce\xc7\x6c\x3a\xf1\x3c\xde\x86\xb7\x17\x3d\xe0\xff\x34\xaa\x89\x50\xf5\x16\x19\x59\x39\x3a\x8a\xcd\xbb\x6e\x99\x6a\x09\x3b\x0d\x5a\x4b\xc7\xad\x48\x73\x08\x8f\xf8\xfe\x10\xd5\xfb\xc4\x42\x7b\x63\x35\xdc\x3a\x7d\xa4\xfc\x45\x8a\x17\xab\xdd\x7a\xd6\x79\xbd\x34\xb2\x55\x3a\x6b\x27\x77\x36\xbd\x58\x8b\x95\x8b\x7e\x7a\xfb\xd6\xd9\xd9\xfc\x58\xf2\x0e\x09\x11\xfa\x3a\xd2\xb8\xdf\xfa\x58\xe0\x09\x9e\xb6\x01\x9a\x7e\x04\x7c\x27\x0d\xa0\x9a\x9c\x20\x0b\xb7\x10\xe4\x25\xe9\x4c\x0e\x61\xaf\xde\xf0\x1b\x00\x00\xff\xff\x01\x92\x39\x8f\x5c\x01\x00\x00")

func gitignoreLemonstandBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreLemonstand,
		"gitignore/LemonStand",
	)
}

func gitignoreLemonstand() (*asset, error) {
	bytes, err := gitignoreLemonstandBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/LemonStand", size: 348, mode: os.FileMode(420), modTime: time.Unix(1441560244, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _gitignoreLibreoffice = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x52\x56\xf0\xc9\x4c\x2a\x4a\xf5\x4f\x4b\xcb\x4c\x4e\x55\xc8\xc9\x4f\xce\x2e\xe6\xd2\xab\x03\xd1\x7a\x5a\xca\x5c\x80\x00\x00\x00\xff\xff\x7a\x7d\x60\x16\x1e\x00\x00\x00")

func gitignoreLibreofficeBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreLibreoffice,
		"gitignore/LibreOffice",
	)
}

func gitignoreLibreoffice() (*asset, error) {
	bytes, err := gitignoreLibreofficeBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/LibreOffice", size: 30, mode: os.FileMode(420), modTime: time.Unix(1441560244, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _gitignoreLilypond = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xd2\xd2\x2b\x48\x49\xe3\x02\x92\xc5\x40\x22\x37\x33\x25\x13\x42\x01\xc9\x9c\xfc\x74\x2e\xad\x3a\x2e\x40\x00\x00\x00\xff\xff\x80\x9a\xc4\xa4\x21\x00\x00\x00")

func gitignoreLilypondBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreLilypond,
		"gitignore/Lilypond",
	)
}

func gitignoreLilypond() (*asset, error) {
	bytes, err := gitignoreLilypondBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/Lilypond", size: 33, mode: os.FileMode(420), modTime: time.Unix(1441560244, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _gitignoreLinux = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x3c\xcc\xb1\x0e\xc2\x30\x10\x03\xd0\xfd\xbe\xc2\x12\x5b\x25\xfa\x15\x30\xc1\xc8\x0f\x9c\xd2\x2b\x39\x01\x49\xe4\x1c\x02\x16\xbe\x9d\x74\x61\xb4\x65\xbf\xe9\x2b\xb2\xc3\xe9\x70\xc4\xe2\xb4\x14\x95\x1f\x34\xda\x6a\xb4\x92\xac\xcb\xfc\xaf\xb7\xdd\xd9\xcb\xf3\x8d\xa0\xf6\x8c\xb5\xde\x17\x23\x5e\xd9\x53\xc6\xc3\xaf\x39\xa0\xad\x99\x12\xb5\x40\xcb\x60\x94\xe1\xe1\x23\x55\x0e\xbd\xdf\x64\xbe\x6c\xcf\xfd\x24\xbf\x00\x00\x00\xff\xff\xa3\x64\x8a\xcf\x76\x00\x00\x00")

func gitignoreLinuxBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreLinux,
		"gitignore/Linux",
	)
}

func gitignoreLinux() (*asset, error) {
	bytes, err := gitignoreLinuxBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/Linux", size: 118, mode: os.FileMode(420), modTime: time.Unix(1441560244, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _gitignoreLithium = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xca\xc9\x4c\x2a\x4a\x2c\xca\x4c\x2d\xd6\xd7\xe2\x2a\x4a\x2d\xce\x2f\x2d\x4a\x06\xb2\x4b\x72\x0b\x80\x7c\x40\x00\x00\x00\xff\xff\x1a\xab\xaa\xaa\x1c\x00\x00\x00")

func gitignoreLithiumBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreLithium,
		"gitignore/Lithium",
	)
}

func gitignoreLithium() (*asset, error) {
	bytes, err := gitignoreLithiumBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/Lithium", size: 28, mode: os.FileMode(420), modTime: time.Unix(1441560244, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _gitignoreLua = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x3c\x90\x31\x4f\xfc\x30\x0c\xc5\xf7\x7c\x8a\x48\xb7\xfc\xff\x1d\x32\xa1\xea\x76\x40\x62\xa8\x04\x12\x03\x23\x4a\x1c\xf7\xea\xbb\x70\x89\x9c\x46\x84\xfb\xf4\xd8\x41\x30\xf4\xd7\x27\xeb\xf9\xf9\xb5\x07\x7b\x9f\x3f\x0a\x25\x8c\x76\x69\xde\xd6\xdc\x18\xb0\x9a\xd4\x3c\xb8\xdc\x76\x63\x0e\x56\x34\x67\xb8\x54\x1b\x1a\xa5\x68\x57\x31\x57\x33\xb9\xca\xe0\x74\x2e\xf2\x46\x45\xb8\x7b\x76\xa7\x9b\x6e\x3c\x87\x33\xc2\xfe\xe7\xcc\xfa\xa8\xb8\x0c\x15\xce\x42\x4c\xab\x3a\x5f\x18\xe1\xf7\xfe\x13\xfa\x88\xac\xbe\x13\x6c\xc2\x22\x14\xcb\x42\x81\x3d\xd3\x48\x4a\x14\x84\x5e\xd5\x80\xe6\x45\x5c\x35\xaf\x17\x35\xbf\x6e\x9e\x25\x2a\x8f\x02\xd5\xfe\xa3\x2b\x38\xfb\x46\xd7\x98\x3f\xab\x7d\x58\x96\xfa\x5f\x37\x52\xd2\xfe\x79\xc0\x4d\x3a\xf9\xd2\x64\xd9\x7f\xec\x08\x6d\xf7\xe1\xa7\x38\x76\xd4\xc2\xf2\x1b\xe4\x68\xd1\x6f\xa4\xe9\x38\xcb\xab\x1f\xe7\xf7\xf9\x4e\xc4\x86\xdd\x98\xef\x00\x00\x00\xff\xff\x02\x2b\x5e\x62\x44\x01\x00\x00")

func gitignoreLuaBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreLua,
		"gitignore/Lua",
	)
}

func gitignoreLua() (*asset, error) {
	bytes, err := gitignoreLuaBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/Lua", size: 324, mode: os.FileMode(420), modTime: time.Unix(1441560244, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _gitignoreLyx = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x52\x56\xf0\x4c\xcf\xcb\x2f\x4a\x55\xf0\xa9\x8c\x50\x48\x4a\x4c\xce\x2e\x2d\x50\x48\xcc\x4b\x51\x48\x2c\x2d\xc9\x2f\x4e\x2c\x4b\x55\x48\xcb\xcc\x49\x2d\xe6\x52\x56\xc8\x28\x29\x29\xb0\xd2\xd7\x2f\x2f\x2f\xd7\xcb\xa9\xac\xd0\xcb\x2f\x4a\xd7\xe7\xd2\x02\x31\xeb\x20\x94\x32\x17\x20\x00\x00\xff\xff\x47\x56\xf9\xb0\x4b\x00\x00\x00")

func gitignoreLyxBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreLyx,
		"gitignore/LyX",
	)
}

func gitignoreLyx() (*asset, error) {
	bytes, err := gitignoreLyxBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/LyX", size: 75, mode: os.FileMode(420), modTime: time.Unix(1441560244, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _gitignoreMagento = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x7c\x56\xcd\x8e\xe4\x28\x0c\xbe\xe7\x51\xe6\x90\x48\xbb\x4f\x50\x5b\x93\x91\x46\xaa\x9e\x69\x75\x8d\x76\x56\x7b\x29\x11\x70\x12\x77\xf1\x27\x20\xdd\x55\xfb\xf4\x6b\xa0\x52\x3f\xdd\x09\x17\x62\xfb\xfb\x62\xb0\x31\x86\x7a\x0c\x8c\x73\xf0\xbe\xf6\x4c\x59\x09\x55\xad\x8c\x18\x30\x34\x49\x50\x4c\x37\x15\xb3\xb6\xe1\x46\x00\x0d\x4a\x4d\x1a\xc3\xb9\x79\x1e\x0d\x68\x3c\x2d\x62\x5b\xf5\x60\x76\x90\x55\x01\x1e\x07\xdd\x30\xa1\x50\x8f\x41\x49\x32\xf4\x6c\x92\xe1\xfa\xbd\x67\xf5\xce\xe8\x00\x5a\x34\x1d\xf3\xb0\x8c\xb8\x77\xb1\x0c\xcc\xfe\x3a\xc9\xf4\xb1\x4c\x29\x4e\x3d\x83\x68\x47\xa3\x57\x16\x31\x73\x28\x55\xe0\xf4\x32\x07\xe8\xe3\xac\x43\x0a\xe4\x42\xbf\xa7\xa1\xf6\x81\x49\x99\x7f\x85\xc0\xa3\xab\x49\x82\x6f\xda\xeb\x6f\x87\x2f\x9f\xc0\x27\x36\xc0\x61\x23\x65\x7d\x52\x72\x05\xb4\x58\x04\xff\x28\xa0\x53\x18\x8d\xc3\xff\x40\x43\x58\x67\xfd\x35\x69\x21\x61\x1d\xdf\x32\x1b\xf8\xc8\x0a\x04\x4a\x0c\x6a\x28\xc4\xb0\x35\xca\xa2\x04\x57\x62\xe8\x1e\x87\xc9\xb1\x4e\xc2\xfe\x9d\xd1\x84\xe0\x8b\x6c\x0d\xbc\x10\xd3\x76\x72\x0e\x34\x3f\xef\xcf\xaa\x33\x85\x85\x7d\x35\xef\x5a\x1a\x26\xe2\xb4\xeb\xac\xef\xca\x1a\x17\xda\x53\x1c\xd7\x59\x3b\xf2\xf3\x0b\x7c\x81\xf1\x93\xd1\x86\xac\xc3\xcf\x34\x6c\x19\x45\x5e\xa0\x80\xf3\xe8\xa9\x1a\x0b\xb3\xfc\x06\x28\x78\xf8\x8d\x62\x28\x55\xc3\x3f\x4a\x96\xb2\x7b\xe9\x17\x87\x27\x3a\x49\xe7\xce\x98\x23\x2d\x68\x91\xb8\x55\x87\x17\x10\xe8\xf7\xd4\x91\xd0\xe8\x07\x0e\x7d\x25\x82\xa8\xed\x65\x9f\x25\x85\x74\x05\x79\xaa\x84\x07\xfe\xed\xe0\x3d\x98\xa5\xe1\x2c\xed\x6d\xcd\x84\xc0\x40\xb3\xb0\x25\x30\x00\xb5\x43\x16\xe0\x33\x94\x2c\xd7\xbe\x99\xb4\x84\x5d\x7a\x44\xcc\x47\x6d\x47\x5b\x35\x9c\x5a\x40\x92\x92\xe0\xc7\x4a\x5c\xea\x06\x5c\x53\x81\x73\xc6\xf9\xa6\xea\xd9\x1b\xd2\xe2\x6b\x1a\xaa\x26\xe6\x38\xfe\x80\x9a\xcb\x89\x3a\x44\x53\x51\x83\x10\x70\xba\x18\x2f\xd2\xdc\xaa\xe7\xe6\x91\xd0\x57\x9f\x3b\x5e\x1d\x9b\x6b\xd4\xe2\x8a\xb4\x60\x34\x15\x29\x77\x4d\x28\xa9\xa7\x40\x63\x94\x7a\x74\xd0\x4d\x43\x96\x25\xf3\x63\x92\x6e\x93\x92\xf2\xea\xb9\x91\x26\xfb\x91\xd8\xa5\xaf\xa2\x20\x93\x60\x9d\x09\x26\x9c\x6d\xd6\x3c\x77\x68\x29\x31\x93\x34\x53\xf6\xef\x2d\xe3\x74\x82\x07\xec\xa3\x46\x07\xfe\x7c\x50\x3c\x93\xdf\x98\x43\xa0\xa6\x19\x7d\xfe\xf9\xd5\x03\x9f\xe2\x5d\x11\xb5\x8d\x8d\xf5\x9c\xe5\x5e\xc2\x29\x4b\x83\x31\x83\x04\x02\xf8\xd1\x4c\x21\xdb\x6e\xdb\x10\xb5\x1d\xea\x1d\x76\xe0\x62\x5f\xf9\x46\xed\x37\x73\x9e\xd2\x5a\xa3\xf4\xdc\x6e\x5e\x2e\x12\x48\x36\x98\x2c\x53\x98\x34\x79\x8a\x2c\x0e\x7f\xdf\x2d\xeb\xdf\xd8\xc0\x93\x14\x6f\xb5\xf4\x75\xb1\x3c\x6f\x8e\x75\x20\x2f\xbb\xef\xdb\xf6\xc7\xbe\x3d\x6c\xbe\xed\xea\x70\x0a\xb3\x9e\xb7\x62\x56\xee\x80\x43\xdb\x7e\xa9\x52\x0e\x2b\x45\xee\x58\xc3\x27\x1f\x8c\x8a\x65\x91\x75\x31\xca\xab\x78\xd7\x6b\x66\xdb\x2d\xea\xac\x63\xea\x34\x33\x4a\x25\xca\xf3\x59\x9c\x2d\x9c\x51\x99\x98\x21\x6e\x96\x98\xc8\xcc\x73\x7a\x97\x41\xaa\x7a\x0e\xa3\x91\xb1\x4a\xaf\x17\x24\x1d\x3e\x4c\xf5\xa0\x3b\xe2\xbd\x26\xdf\x16\x98\x4b\x03\x89\x54\x94\xa8\x71\x2e\x4c\x7b\x1c\x50\xf7\x94\x98\x97\x76\xd7\x6e\x28\xde\x1f\x3f\x7f\xb5\xfb\x94\x01\x3f\x02\xdd\x76\xac\xf3\xc1\x31\x9e\x8b\x3d\x9b\xf8\xdc\xec\x6f\xa6\x54\x85\x0f\x16\x5a\x67\xd6\x90\x8e\x27\xb3\xe9\x34\xfa\x23\x16\x9f\x15\x2b\xf8\xed\x44\x64\xc6\x87\x27\xc7\xa3\x2d\x3d\x36\x1e\x4d\x1f\x9e\x19\x6b\xe0\xf4\xc9\xd7\xf2\x02\x3f\xc1\x7d\xbc\x89\xc6\x35\x74\x00\x97\xde\x66\xcb\xe8\xfc\x64\x59\x46\xe7\xc7\xca\x23\xfa\x31\x1f\xd7\x87\xc9\x5b\xdc\xe0\xff\x03\x00\x00\xff\xff\xd0\x6b\xd2\x32\x27\x0a\x00\x00")

func gitignoreMagentoBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreMagento,
		"gitignore/Magento",
	)
}

func gitignoreMagento() (*asset, error) {
	bytes, err := gitignoreMagentoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/Magento", size: 2599, mode: os.FileMode(420), modTime: time.Unix(1441560244, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _gitignoreMatlab = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x9c\x90\xbd\x4a\x04\x41\x10\x84\xf3\x79\x8a\x92\x4d\x74\x41\xef\x21\x44\x8c\x0e\xc1\x0b\xbc\xb4\xd7\xe9\xbb\x6b\x77\x7e\x96\xe9\x9e\x75\x4d\x7c\x76\x67\x10\x0c\x05\xed\xf8\xab\xe2\xab\x1e\x86\xdb\xbf\x9f\x1b\x06\x3c\x73\xcc\x2b\x83\xaa\x65\xa5\x95\x15\x67\x4e\x5c\xc8\xd8\x63\xfa\x80\x5d\x18\x7b\xb2\x40\x13\xd8\x8b\xe5\xd2\x23\x2f\x8c\x4b\x43\x71\x16\xc3\x29\x17\x4c\xf4\x3a\xd7\x45\xaf\xdc\xff\x24\x5c\x6b\x94\xe4\xf3\xbb\xc2\xf3\x89\x6a\xb0\x1f\x1b\xf0\x66\x9c\x54\x72\x72\xe3\x1d\xe9\xda\xd9\xa7\xc3\x11\x3b\x8c\x49\xb6\xdf\xf1\xf8\xd9\xe9\xfb\x1c\x17\x09\x6d\xcc\xfe\xe1\x88\x49\x12\x15\x69\x1b\xaf\x29\x04\x2c\x81\xac\xe9\x47\xbd\xe9\x34\x6f\x63\xe7\x0f\x12\x6b\x90\x34\xb7\xa0\x67\x3c\x7e\xff\xa2\x17\x6a\x58\xca\xdb\xce\x7d\x05\x00\x00\xff\xff\x00\x28\x67\xe1\x68\x01\x00\x00")

func gitignoreMatlabBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreMatlab,
		"gitignore/Matlab",
	)
}

func gitignoreMatlab() (*asset, error) {
	bytes, err := gitignoreMatlabBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/Matlab", size: 360, mode: os.FileMode(420), modTime: time.Unix(1441560244, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _gitignoreMaven = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x5c\xcb\x41\x0a\xc3\x20\x10\x46\xe1\xbd\x47\x09\x44\xef\xd0\x03\xf4\x0e\x46\x7f\x44\xea\x8c\xc3\x38\x86\xf4\xf6\xdd\xa4\x21\x64\xf7\x78\xf0\x59\xd4\x02\x0b\x6e\x59\xc2\x3f\xa5\x93\x3f\xa8\x79\x8b\xe5\x6a\x45\x43\x1c\x78\xc5\xf4\x99\x72\xdd\x1d\x3a\x6a\xe7\xf1\xd8\x8c\xc3\xdc\x29\xbc\x68\x17\xa8\x55\x0c\x97\x21\xe0\x0c\x4e\xdf\x55\x91\x67\x42\x5e\x4f\xe2\xb6\x59\x5b\x7e\x4f\xda\xa0\x77\xe1\x69\xe7\x60\x95\x2a\x97\xfb\xfe\x05\x00\x00\xff\xff\x92\xeb\x53\xa0\xb5\x00\x00\x00")

func gitignoreMavenBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreMaven,
		"gitignore/Maven",
	)
}

func gitignoreMaven() (*asset, error) {
	bytes, err := gitignoreMavenBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/Maven", size: 181, mode: os.FileMode(420), modTime: time.Unix(1441560244, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _gitignoreMercurial = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xd2\xd7\xcb\x48\xd7\xd7\xe2\xd2\x82\xd2\x40\x32\x33\x3d\x2f\xbf\x28\x95\x0b\x10\x00\x00\xff\xff\xa1\xe4\x0f\x11\x19\x00\x00\x00")

func gitignoreMercurialBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreMercurial,
		"gitignore/Mercurial",
	)
}

func gitignoreMercurial() (*asset, error) {
	bytes, err := gitignoreMercurialBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/Mercurial", size: 25, mode: os.FileMode(420), modTime: time.Unix(1441560244, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _gitignoreMercury = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xf2\x4d\x2d\x4a\x2e\x2d\xaa\xd4\xe7\x82\x32\xf4\x72\xf3\x53\x4a\x73\x52\x8b\xb9\xb4\xf4\x72\x33\x80\x44\x6a\x51\x11\x90\xcc\xcc\xcb\x2c\x01\x52\x29\x39\x39\x20\xa1\x8a\x54\x20\x99\x08\xc4\xc5\xf9\x20\xc1\xca\x9c\xcc\x24\x20\x9d\x94\x9a\x98\x0b\xd2\x96\x02\xc4\xc9\xf1\x29\x89\x25\xa9\x5c\x80\x00\x00\x00\xff\xff\x41\x17\x46\xe8\x5d\x00\x00\x00")

func gitignoreMercuryBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreMercury,
		"gitignore/Mercury",
	)
}

func gitignoreMercury() (*asset, error) {
	bytes, err := gitignoreMercuryBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/Mercury", size: 93, mode: os.FileMode(420), modTime: time.Unix(1441560244, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _gitignoreMetaprogrammingsystem = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x5c\x90\x4f\x4b\xc3\x40\x10\xc5\xef\xfb\x29\x06\x7a\x10\x1a\x92\x80\xe0\xc5\xb3\xa2\x17\x41\x68\xee\x32\xd9\x9d\x98\x8d\xfb\x27\xec\xcc\x36\xe6\xdb\xbb\xa6\x2d\xd6\xde\x66\x86\xc7\x9b\xdf\x7b\x4b\x4c\x5f\x3c\xa3\xa6\xe6\xdb\x3b\x35\xe5\x60\xe5\xe8\x17\x14\x3d\x52\xda\x37\x73\x8a\x33\x25\xb1\xc4\xaa\xcf\xd6\x99\xeb\x83\xda\xc1\x27\x05\x4a\x28\x64\x60\xc2\x23\x82\x76\xc8\x4c\x0c\x18\xce\x07\x8e\x39\x69\x82\xc1\xba\xa2\xdf\x01\x80\xc7\x90\xd1\xb9\x15\xd0\x98\x22\x5b\x41\x67\x96\xe8\x01\x8b\xe5\x80\x5a\x18\x64\x44\x01\x8d\xe1\x4e\xa0\xa7\xab\x07\x43\x2a\x32\x19\x09\x7c\x34\xe4\x4e\x6e\xa3\xc8\xfc\xd8\xb6\x3a\x86\xc1\x65\x0a\x25\xc3\x44\xd2\x27\xb4\x81\x1b\x1d\x7d\x6b\x2c\xcf\x0e\xd7\xf6\xed\xfd\xf0\x74\xff\xd0\xbe\xc6\xa5\x8b\x55\x5d\x57\x65\xaf\x0a\x63\xf5\x62\x45\x9d\x99\x3f\xca\x27\x75\xc2\xbd\x19\x1b\x8d\xa5\x8b\x9b\xb8\x42\x5c\x28\x0b\xc9\x96\x75\xdb\x12\x71\x76\xc2\xea\x77\xd9\x2c\x2e\xc3\xc5\xa0\x7b\x3e\x74\xf5\xfe\xaf\xe6\x7f\xed\xfe\x04\x00\x00\xff\xff\xb9\x6e\x6a\xb3\x87\x01\x00\x00")

func gitignoreMetaprogrammingsystemBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreMetaprogrammingsystem,
		"gitignore/MetaProgrammingSystem",
	)
}

func gitignoreMetaprogrammingsystem() (*asset, error) {
	bytes, err := gitignoreMetaprogrammingsystemBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/MetaProgrammingSystem", size: 391, mode: os.FileMode(420), modTime: time.Unix(1441560244, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _gitignoreMicrosoftoffice = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xd2\xd2\x2b\xc9\x2d\xe0\xe2\x52\x56\x08\xcf\x2f\x4a\x51\x28\x49\xcd\x2d\xc8\x2f\x4a\x2c\xaa\xe4\xaa\x53\xd1\xd2\x4b\xc9\x4f\xd6\x02\x49\xb9\x56\x24\xa7\xe6\xa0\xc9\x55\xe4\x14\x23\xc9\x39\x25\x26\x67\x97\x16\x28\xb8\x65\xe6\xa4\x72\x81\xe4\xb2\xb9\x00\x01\x00\x00\xff\xff\xdb\x73\x90\x88\x58\x00\x00\x00")

func gitignoreMicrosoftofficeBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreMicrosoftoffice,
		"gitignore/MicrosoftOffice",
	)
}

func gitignoreMicrosoftoffice() (*asset, error) {
	bytes, err := gitignoreMicrosoftofficeBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/MicrosoftOffice", size: 88, mode: os.FileMode(420), modTime: time.Unix(1441560244, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _gitignoreModelsim = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x74\x8e\x31\x4e\xc5\x30\x0c\x86\x77\x9f\xc2\x12\x0b\x64\x78\x5c\x81\x0b\x30\x31\x22\xf4\x94\x26\x6e\x6b\x48\xe2\x28\x76\xcb\xf5\x71\x96\xa7\x2e\x2c\xdf\xaf\xe4\x97\x3f\xfb\x09\x79\x6b\x32\x08\xdf\x25\x53\xf9\xe0\x8a\x1b\x35\x1a\xd1\x28\xe3\xca\x85\x14\x63\xcb\x98\x79\x50\x32\x19\xec\xef\x67\xa3\xda\x2f\x9d\x0a\x4a\x7b\x81\xcf\xfb\xdb\x57\x00\x78\xf8\x92\xd4\xce\x25\x1a\x4b\x43\x39\xac\x1f\x86\xb2\x3e\xb6\x40\xb8\x55\x63\x67\x8e\x36\xb9\xa8\xb3\xeb\xfc\x5f\xe2\x8f\x33\xd5\xee\xfc\xee\x9b\x73\xb7\x5a\x66\xa1\xeb\xc5\xaf\x5c\x8f\xff\xf5\xbf\x65\x0d\x3e\xe2\xe1\x3c\xd5\x66\x1c\x29\x2f\x90\xe4\x0c\xaf\x60\x23\x36\x4d\x83\xbb\x05\xd0\x74\xcf\x9d\x77\x8a\x99\xc6\x6d\x87\xd3\xc5\x7e\xcf\x06\x7f\x01\x00\x00\xff\xff\x42\xd3\x8b\x1f\x1a\x01\x00\x00")

func gitignoreModelsimBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreModelsim,
		"gitignore/ModelSim",
	)
}

func gitignoreModelsim() (*asset, error) {
	bytes, err := gitignoreModelsimBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/ModelSim", size: 282, mode: os.FileMode(420), modTime: time.Unix(1441560244, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _gitignoreMomentics = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x52\x56\x70\x2a\xcd\xcc\x29\x51\x48\xcb\xcc\x49\x2d\xe6\xaa\xb0\x30\xd3\xe7\x4a\x2c\xca\x05\x13\xba\x05\xfa\x5c\x25\x45\x89\x79\xc5\x39\x89\x25\x99\xf9\x79\xc5\xfa\x5a\x7a\x85\xb9\x5c\x5c\xca\x0a\x9e\x2e\xae\x0a\xc5\xa9\x25\x25\x99\x79\xe9\xc5\x5c\x7a\x30\x96\x3e\x17\x20\x00\x00\xff\xff\x0c\x04\x33\xd5\x4c\x00\x00\x00")

func gitignoreMomenticsBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreMomentics,
		"gitignore/Momentics",
	)
}

func gitignoreMomentics() (*asset, error) {
	bytes, err := gitignoreMomenticsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/Momentics", size: 76, mode: os.FileMode(420), modTime: time.Unix(1441560244, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _gitignoreMonodevelop = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x52\x0e\x2d\x4e\x2d\x52\x08\x2e\x48\x4d\xce\x4c\xcb\x4c\xe6\xd2\xd2\x2b\x05\xf2\x0b\x8a\x52\xd3\x8a\xa1\xec\x92\xc4\xe2\xec\x62\x2e\x2e\x65\xdf\xfc\xbc\x7c\x85\x80\xa2\xfc\xac\xd4\xe4\x12\x05\xb7\xcc\x9c\x54\x90\x82\x82\xcc\x94\x24\x20\x55\x94\x5a\x9c\x5f\x5a\x94\x0c\x14\x2a\x49\x2d\x2e\xd1\x05\x72\x4b\x73\x4a\x8a\xf5\xb9\x00\x01\x00\x00\xff\xff\xf3\x3c\xfc\xc2\x5d\x00\x00\x00")

func gitignoreMonodevelopBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreMonodevelop,
		"gitignore/MonoDevelop",
	)
}

func gitignoreMonodevelop() (*asset, error) {
	bytes, err := gitignoreMonodevelopBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/MonoDevelop", size: 93, mode: os.FileMode(420), modTime: time.Unix(1441560244, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _gitignoreNanoc = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x2c\x8e\x31\x6f\xc4\x20\x0c\x46\x77\x7e\xc5\x27\x65\x68\x2b\x55\x61\xef\xda\xaa\x53\xc7\xee\x27\x8b\x40\xc2\x09\x6c\x04\xe6\x4e\xf9\xf7\x47\x72\xb7\x3d\x5b\xef\x59\x9e\xf0\x2b\x15\xa5\xca\xd5\x3b\x6d\xe8\x2d\xf2\x0a\x26\x16\x87\xf7\x4d\xb5\x7c\x59\x7b\x4e\xf3\xbd\xd9\x0f\x63\x26\xfc\xf8\x40\x3d\x29\x92\x38\xd2\x28\x8c\x30\x7a\xe9\x5a\xba\x7e\x82\xbd\x5f\x1a\x54\x90\x49\xdd\xf6\x5a\x5f\x96\x58\xdf\x1a\x6e\x94\xba\x1f\x76\xe7\x05\x91\xe1\x84\x43\x5c\xe7\x9d\x72\x32\x4f\xcf\x1e\xe7\xff\x7d\x2e\x52\xa9\xee\x08\x31\x79\x8c\x74\xfc\x25\x75\x37\x9a\xcb\x29\x7c\x57\x6a\x1b\xfe\x64\x35\xee\xa0\x39\x0d\x7a\x04\x00\x00\xff\xff\x23\xc7\x0b\x69\xc5\x00\x00\x00")

func gitignoreNanocBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreNanoc,
		"gitignore/Nanoc",
	)
}

func gitignoreNanoc() (*asset, error) {
	bytes, err := gitignoreNanocBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/Nanoc", size: 197, mode: os.FileMode(420), modTime: time.Unix(1441560244, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _gitignoreNetbeans = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x34\xcc\x4d\x12\x80\x20\x08\x86\xe1\xbd\x77\x49\xcf\x84\x3f\x39\x34\x06\x0e\x62\xd3\xf1\xc3\xa6\x56\xf0\x3e\x8b\x8f\x62\x17\x3e\x4a\xd2\xd0\x05\x2f\xd0\x12\x5c\x9c\xd8\x72\x70\x14\xbf\x27\xe3\xd0\x95\xff\x85\xa4\xc8\x34\xfc\x7d\x36\xab\x2d\x31\xed\x58\xa7\xc0\xd2\x17\xbd\x69\x15\xc8\xcd\xc6\x9e\x00\x00\x00\xff\xff\xcd\x0e\x0d\x6e\x60\x00\x00\x00")

func gitignoreNetbeansBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreNetbeans,
		"gitignore/NetBeans",
	)
}

func gitignoreNetbeans() (*asset, error) {
	bytes, err := gitignoreNetbeansBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/NetBeans", size: 96, mode: os.FileMode(420), modTime: time.Unix(1441560244, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _gitignoreNim = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xca\xcb\xcc\x4d\x4e\x4c\xce\x48\xd5\xe7\x02\x04\x00\x00\xff\xff\x6e\x5e\xa9\x72\x0a\x00\x00\x00")

func gitignoreNimBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreNim,
		"gitignore/Nim",
	)
}

func gitignoreNim() (*asset, error) {
	bytes, err := gitignoreNimBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/Nim", size: 10, mode: os.FileMode(420), modTime: time.Unix(1441560244, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _gitignoreNinja = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xd2\xcb\xcb\xcc\xcb\x4a\x8c\x4f\x49\x2d\x28\xe6\x82\xb2\x73\xf2\xd3\xb9\x00\x01\x00\x00\xff\xff\xee\x9e\xc8\x72\x17\x00\x00\x00")

func gitignoreNinjaBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreNinja,
		"gitignore/Ninja",
	)
}

func gitignoreNinja() (*asset, error) {
	bytes, err := gitignoreNinjaBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/Ninja", size: 23, mode: os.FileMode(420), modTime: time.Unix(1441560244, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _gitignoreNode = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x44\x90\xc1\x8e\xdc\x20\x0c\x86\xef\x3c\x05\x52\x2e\xdd\x4a\x84\x7b\xaf\xbb\x52\xa5\xaa\xa7\xed\x03\x54\x04\x1c\xe2\x1d\xc0\x14\x43\x47\x79\xfb\x9a\x99\xe9\xec\x25\xc4\xfc\xf6\xc7\xff\x7b\xd1\x3f\x29\xb2\x4a\xf3\xf3\x75\x95\x43\xa9\x45\xbf\x8f\xd2\x31\x83\x0e\xae\x3b\x55\x31\x4c\x49\x0e\xf9\x32\x40\x98\x1d\x6f\xd8\xc0\x77\x6a\xa7\xde\xa9\x69\x2c\xdc\xdb\xc8\x50\x3a\x04\x9d\x70\x63\x1d\xa1\x40\x73\xb3\xdc\x4e\xfd\xc1\x9e\xfe\x4a\x19\xc1\xfe\xf8\xf5\x3a\x7f\x95\x34\x19\xb9\x9c\xa8\xd7\x87\xa6\xc3\x93\x39\xf8\x3e\xd8\x89\x12\x0b\xf0\x02\x1a\xb9\xbb\xb2\x8d\xa4\xfe\xa3\xe6\xe8\xf7\x26\x46\xe5\xf5\x0e\x2d\x43\x40\x79\x4f\xb3\x00\x26\xec\xcb\xd1\x7b\xfd\x66\x6d\x9c\x2d\x1f\xbc\x7a\xca\xd6\x37\x70\x1d\x4b\x34\x35\x8d\x28\x9e\x97\xd9\x3c\xeb\xee\xf8\x62\x76\x4c\xc0\x2f\x6a\xbd\x4d\x4c\x7a\xa1\x00\xe6\xea\x76\xed\xa9\xec\x18\x87\xe4\x41\x2a\x4a\x96\xe4\x2f\xe6\xca\xbe\x61\xed\xf7\x00\xb9\xca\xac\x38\xc6\xe2\xc4\xbd\x0b\x81\x0a\x3f\x1d\x4c\x8c\x18\xa0\x16\xad\xab\x68\xef\xea\x7a\xf4\x9c\x5e\xd4\x36\x30\x05\xfb\x0e\x09\x1c\xdf\x12\xbd\x41\x85\x12\xa0\xf8\xf3\x73\x1d\x72\x3d\x51\x2c\xac\x40\x9e\xd7\x52\xf3\x23\x50\x46\xf6\x76\x77\x7f\x16\x3e\x68\xa4\x60\xd0\xf8\x03\xc4\x5c\x3e\xcd\xcd\x7c\xa6\x30\x24\x94\xd9\x29\x05\x68\x46\x16\x45\x26\x62\x57\x53\xfc\xfd\x10\xd5\xbf\x00\x00\x00\xff\xff\xce\x47\xdf\x8f\x02\x02\x00\x00")

func gitignoreNodeBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreNode,
		"gitignore/Node",
	)
}

func gitignoreNode() (*asset, error) {
	bytes, err := gitignoreNodeBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/Node", size: 514, mode: os.FileMode(420), modTime: time.Unix(1441560244, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _gitignoreNotepadpp = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x52\x56\xf0\xcb\x2f\x49\x2d\x48\x4c\xd1\xd6\x56\x48\x4a\x4c\xce\x2e\x2d\x28\x56\x50\xe6\xe5\xd2\xd2\x4b\x4a\xcc\xe6\xe5\x02\x04\x00\x00\xff\xff\x7b\xcd\x03\x1c\x1e\x00\x00\x00")

func gitignoreNotepadppBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreNotepadpp,
		"gitignore/NotepadPP",
	)
}

func gitignoreNotepadpp() (*asset, error) {
	bytes, err := gitignoreNotepadppBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/NotepadPP", size: 30, mode: os.FileMode(420), modTime: time.Unix(1441560244, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _gitignoreOcaml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x5c\x8c\xb1\x0e\xc2\x30\x0c\x44\x77\x7f\x45\x24\xb6\x0e\xe5\x93\xd0\x35\x31\x91\x45\x1a\xa3\xd8\x05\xfa\xf7\xb4\x09\x13\xcb\xbb\x93\xfd\x74\xd3\x8c\x5a\xd5\x69\x9a\xe3\xaa\x9d\xe8\x94\x83\x67\x1b\xb7\xcf\xa0\x8d\x00\xd1\x25\x68\xc4\x5a\x96\x4d\x4a\x0a\x6f\x6d\x0f\xa9\x39\x24\x69\x1c\x5d\xdb\x4e\xb7\xfe\xb8\xfe\x79\x8e\x96\xd9\xcf\x91\x65\x77\x3e\xa2\xc2\xe5\xc5\xdd\x82\x89\x85\xcc\x95\x1b\x9c\x53\xb8\x4b\x61\x23\x63\xdf\x9e\x73\x82\xe3\x57\x8b\x66\xfa\x06\x00\x00\xff\xff\xec\xe3\xab\x33\xb2\x00\x00\x00")

func gitignoreOcamlBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreOcaml,
		"gitignore/OCaml",
	)
}

func gitignoreOcaml() (*asset, error) {
	bytes, err := gitignoreOcamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/OCaml", size: 178, mode: os.FileMode(420), modTime: time.Unix(1441560244, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _gitignoreOsx = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x44\x90\x41\x6b\xc3\x30\x0c\x85\xef\x86\xfe\x07\xc1\x6e\x83\x85\xee\x27\x74\x84\x42\x61\x6c\x63\x29\x3d\x0d\x8a\x9b\xa8\x8b\x88\x6d\x19\x59\x49\xe9\xbf\x9f\x5c\xba\xed\x64\x59\xcf\xbc\xf7\x3d\x37\x6d\x77\xec\x94\x05\x5d\xb3\xc9\x39\x60\xcb\xf3\x29\xd8\xe5\xb5\x7b\x5f\x50\x84\x06\x74\xee\x01\x76\x3d\x27\x88\x73\x51\xc0\x34\xc0\x85\x74\x04\xbd\x30\x7c\x89\xab\xca\x6a\x55\xdf\xec\xc7\x39\x9e\x92\xa7\x50\x5c\x73\x7c\xac\x9b\x2d\x05\x2c\xa0\xa3\x57\x88\xf4\x3d\x2a\xf8\x9c\xd1\x0b\x50\xb2\x25\x82\x30\x2b\xf0\x19\x3c\x2c\x1c\xe6\x68\xa1\x2d\xf7\x76\x26\xfd\xc4\x85\x0a\x71\x2a\x4f\x87\xe7\xf5\xda\x35\xe7\x82\x8b\xad\xcb\xe0\x9a\x2e\xb3\x86\x6a\x76\x97\xf6\x18\x33\x8b\x97\xeb\x4e\x31\x5a\xf2\x5e\x7c\x19\xd1\x86\xc3\xcd\xb3\xe2\x35\xd4\xa7\x52\x79\x5a\x12\xec\xad\x2b\x19\x95\xd9\x98\x23\xf9\x10\xae\xd0\x0b\x7a\xc5\x01\xac\xa3\x60\x34\x01\x36\xdb\x0f\x28\xa3\xff\xff\x95\x97\xdf\x01\xcb\xa4\x9c\xdd\x1b\x5a\x7f\x99\xe0\x16\x07\x5b\x0e\x03\x8a\xfb\x63\x81\x3b\x8c\xcf\x03\x95\xc9\xfd\x04\x00\x00\xff\xff\x2b\xec\x6b\x35\x64\x01\x00\x00")

func gitignoreOsxBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreOsx,
		"gitignore/OSX",
	)
}

func gitignoreOsx() (*asset, error) {
	bytes, err := gitignoreOsxBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/OSX", size: 356, mode: os.FileMode(420), modTime: time.Unix(1441560244, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _gitignoreObjectiveC = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x5c\x52\x3d\x6f\xdc\x30\x0c\xdd\xfd\x2b\x58\x18\xe8\x10\x44\x36\x9a\x6e\xb7\xb5\x97\xa1\x5b\x0a\x14\x68\xbb\xca\x12\x6d\xf3\x6a\x8b\x86\x44\xdd\x5d\xfe\x7d\x29\xb9\xb9\xa4\x59\xee\x83\xef\x89\xef\xf1\x91\x2d\xfc\x76\xec\xb1\x69\x9b\x16\x26\x12\x9a\x02\x47\x04\xc7\x41\x22\x0d\x59\x38\xa6\x03\x44\x5c\x71\x1d\x30\x82\x30\xe4\xcd\x5b\xc1\xfd\xd1\x3d\x3c\x0d\x27\x74\x42\x67\x34\x47\xf8\x08\x3f\x2e\x34\x4a\xd3\xb4\x2d\x7c\xcd\xb4\x78\x98\x30\x60\x54\xb6\x6f\x86\xf2\xbf\x6f\x1e\x31\x2a\xd7\x3f\x5a\xb1\x95\xf6\xd3\x46\xe2\x9c\x20\xa1\x08\x85\x29\x35\x77\xdd\x36\x5c\x73\xc2\xd8\x7c\xf0\x38\xda\xbc\xc8\xad\x70\xd7\xad\x2a\xf9\xe9\xfc\xf9\x15\x7a\x29\xec\xd0\xc3\x7b\xe8\xa1\x42\x1b\xc6\xb4\xed\x26\xdf\x12\xfe\x2f\x5f\x5d\xd1\xf0\x2f\xbe\x9e\x64\xae\x8a\x57\xe7\x66\x74\x7f\x38\x4b\xd5\x50\xeb\xc6\x26\xd2\xb4\x0a\x54\x5e\x24\xd1\xf1\xf6\x27\xc3\xc9\x1c\xfb\x9a\x00\x94\xc6\x34\x92\x53\xda\xbc\xda\x4d\xbf\x68\x2b\x8d\xe1\xc8\x8e\xed\x77\xf6\xa9\xc6\xfd\x0b\x35\x59\xc7\xeb\x8a\xc1\x83\x9d\x2c\x85\x24\x60\xbd\xd7\x24\x40\x0d\x40\x21\x82\x27\xe5\xe8\x1a\x9e\x4b\xf8\xcf\x9c\x23\x74\xb7\x35\x75\xf0\x8d\x2f\x78\x56\xab\x6d\x81\x20\xcd\x9c\x35\xf6\x53\xf6\x13\xc2\xc8\xb1\xf2\x13\x2e\xe3\x7d\xed\xb7\x45\x4e\x60\x55\x4b\xb7\xab\x3f\x74\xcd\xaa\x2c\xc4\x01\x55\x5e\x0e\xda\x64\x16\xd9\x0e\x7d\x3f\x65\x9d\x31\x75\xae\xb8\xdd\xd4\x44\xc7\x71\xea\x73\x52\x5f\xfb\xa7\x79\x45\x66\x59\x97\x76\xd7\x35\x64\x6a\x5a\x46\xb5\x4c\x01\xcd\xcd\xbb\xa1\x20\x6c\x92\xba\x71\x68\xea\x6d\xf1\x52\x22\x28\x13\xf6\x35\x18\x1b\x65\xb6\xd3\x7e\x86\x5f\xbc\x57\xbf\x94\x60\xa1\x80\x40\x63\x9d\xed\x62\x83\x94\x08\xec\x99\x49\x27\x28\x42\x25\x27\x0a\xb0\xb7\x85\x72\x90\x30\x46\x5e\x6f\xcd\xc0\xe3\xa6\xd1\x62\x70\xa4\xd3\xbc\x51\xe9\x8f\xff\xb6\x9a\x9a\xe6\x56\xab\x27\xdb\xfc\x0d\x00\x00\xff\xff\x86\xc5\x67\x10\x0f\x03\x00\x00")

func gitignoreObjectiveCBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreObjectiveC,
		"gitignore/Objective-C",
	)
}

func gitignoreObjectiveC() (*asset, error) {
	bytes, err := gitignoreObjectiveCBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/Objective-C", size: 783, mode: os.FileMode(420), modTime: time.Unix(1441560244, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _gitignoreOpa = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x8a\x4f\x2a\xcd\xcc\x49\xe1\x8a\x2f\x29\x4a\x4c\xce\x2e\xe6\xe2\xca\x2f\x48\xd4\x4d\x49\x4d\x2a\x4d\xd7\xcd\x02\xf2\xb4\xf4\xf2\x0b\x0a\xc0\x64\x05\x84\xd4\x4b\x2a\xca\xcf\x4e\xcd\x03\x72\x52\x4a\x73\x41\x32\x89\x05\x99\x10\x52\xb7\xa4\xa2\x04\xc8\x4a\xad\x48\x05\x92\x39\xf9\xe9\x5c\x80\x00\x00\x00\xff\xff\xbd\x9b\x99\xa3\x5a\x00\x00\x00")

func gitignoreOpaBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreOpa,
		"gitignore/Opa",
	)
}

func gitignoreOpa() (*asset, error) {
	bytes, err := gitignoreOpaBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/Opa", size: 90, mode: os.FileMode(420), modTime: time.Unix(1441560244, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _gitignoreOpencart = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x5c\x8a\x51\x0a\x82\x41\x08\x06\xdf\xbf\x5b\x74\x81\xdf\x33\x89\xda\xae\xb0\xea\x82\x0b\xd5\xed\xeb\x25\x88\xde\x66\x86\xb9\xe6\x61\x11\xeb\x06\x49\xe5\xdd\xc7\xb5\xe7\x06\x6b\x78\xfe\x06\xdc\x3c\xd5\x9e\x9f\x3b\x16\xa0\xf5\xc8\x55\xac\x04\x0f\x1e\x46\xca\x87\xbf\x2c\x2c\xd3\x08\xfd\xea\x63\xf1\x67\xab\x46\x13\xde\x01\x00\x00\xff\xff\xd6\x6e\x90\xf0\x73\x00\x00\x00")

func gitignoreOpencartBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreOpencart,
		"gitignore/OpenCart",
	)
}

func gitignoreOpencart() (*asset, error) {
	bytes, err := gitignoreOpencartBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/OpenCart", size: 115, mode: os.FileMode(420), modTime: time.Unix(1441560244, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _gitignoreOracleforms = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x52\x56\x70\xce\xcf\x2d\xc8\xcc\x49\x4d\x51\x70\xcb\x2f\xca\x55\xf0\xcd\x4f\x29\xcd\x49\x2d\xe6\xd2\xd2\x4b\xcb\xad\xe0\xe2\x42\x92\xf6\x4d\xcd\x2b\x45\x92\xce\x45\x93\x0e\x28\x4a\xd5\xf5\xc9\xcc\xcb\x06\x32\x7d\x32\x93\x8a\x12\x8b\x32\xc1\xca\x0a\x72\x2a\xb8\x00\x01\x00\x00\xff\xff\x62\x79\x5b\x10\x64\x00\x00\x00")

func gitignoreOracleformsBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreOracleforms,
		"gitignore/OracleForms",
	)
}

func gitignoreOracleforms() (*asset, error) {
	bytes, err := gitignoreOracleformsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/OracleForms", size: 100, mode: os.FileMode(420), modTime: time.Unix(1441560244, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _gitignorePacker = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x52\x56\x70\x4e\x4c\xce\x48\x55\xc8\x4f\xca\x4a\x4d\x2e\x29\xe6\x2a\x48\x4c\xce\x4e\x2d\x8a\x4f\x06\x09\xea\x73\x71\x29\x2b\xb8\xe5\x17\x29\x24\x95\x66\xe6\x94\x28\x24\xe5\x57\xa4\x16\x73\x69\xe9\x01\x69\x2e\x40\x00\x00\x00\xff\xff\xa6\x6d\xe6\x7b\x37\x00\x00\x00")

func gitignorePackerBytes() ([]byte, error) {
	return bindataRead(
		_gitignorePacker,
		"gitignore/Packer",
	)
}

func gitignorePacker() (*asset, error) {
	bytes, err := gitignorePackerBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/Packer", size: 55, mode: os.FileMode(420), modTime: time.Unix(1441560244, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _gitignorePerl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x44\x8e\xbd\x0e\x83\x30\x0c\x84\x77\xbf\x45\x57\x06\xfb\x19\x40\xa2\x52\x07\xba\x94\xa5\x53\x94\x40\x90\x52\x12\x8c\x88\xa9\xc4\xdb\xd7\xfc\x48\x1d\xa2\xfb\x2e\xe7\x93\x4d\x2e\x06\x47\x40\xe8\xd6\x10\x7b\x02\x73\x69\xc7\x5f\xbf\x98\x5e\xa3\x30\x75\x04\xd5\xfe\x0b\xb7\xea\x0c\x0f\x41\x67\x05\x30\xda\x2c\xe6\x1c\xce\x62\x25\x03\x35\x76\xf4\x43\x88\xfe\x4f\xc8\xda\xa5\xa6\x7c\x3e\xee\xf5\xab\xd5\xde\xa8\xae\x6e\x4b\xdc\x52\xbc\xe8\x93\x79\x52\x7c\x1f\xa6\x80\x69\x93\x79\xe1\x01\x79\x15\xa0\x39\x19\x61\xb3\xdf\x09\x05\xb2\x3e\xa7\x5b\x8c\x5f\x53\x22\xf8\x05\x00\x00\xff\xff\x8d\x8b\x2e\xdc\xbf\x00\x00\x00")

func gitignorePerlBytes() ([]byte, error) {
	return bindataRead(
		_gitignorePerl,
		"gitignore/Perl",
	)
}

func gitignorePerl() (*asset, error) {
	bytes, err := gitignorePerlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/Perl", size: 191, mode: os.FileMode(420), modTime: time.Unix(1441560244, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _gitignorePhalcon = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xd2\x4f\x4e\x4c\xce\x48\xd5\xe7\xd2\x4f\xce\xcf\x4b\xcb\x4c\xd7\x4f\x49\x2d\x4b\xcd\xc9\x2f\xc8\x4d\xcd\x2b\xd1\xe7\x02\x04\x00\x00\xff\xff\xb8\x16\x9e\x85\x1d\x00\x00\x00")

func gitignorePhalconBytes() ([]byte, error) {
	return bindataRead(
		_gitignorePhalcon,
		"gitignore/Phalcon",
	)
}

func gitignorePhalcon() (*asset, error) {
	bytes, err := gitignorePhalconBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/Phalcon", size: 29, mode: os.FileMode(420), modTime: time.Unix(1441560244, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _gitignorePlayframework = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x44\x8b\x31\x0e\xc2\x30\x0c\x45\x77\x9f\x22\xa8\x1b\x12\xf1\x39\xd8\xb8\x42\x9b\x58\xc1\xe0\x36\x91\xed\x82\x7a\x7b\x3c\x80\x58\xde\xd3\x7f\xd2\x9f\xd2\xb5\x6d\x5d\x29\xdd\x64\x3e\x4e\xe9\xdd\xf5\xc9\x5b\x4b\x95\x95\x8a\x77\x3d\xd2\x04\x0b\x6f\x08\x58\x17\xc8\x54\x84\x87\x11\xa0\xf0\x12\x49\x7a\xb3\xd0\xda\xeb\x2e\x64\x80\x43\xfb\x23\x5e\x3f\xff\x83\xcf\xda\x28\xf6\xd7\xbe\x0e\x04\x27\xf3\x8b\x92\xed\xe2\x60\xa4\x2f\xd2\x3c\xb8\xc2\x39\xf3\x2a\x41\x0a\x62\x65\x73\x84\x5c\xe6\x72\x27\xf8\x04\x00\x00\xff\xff\xb1\xed\x52\xdf\xaa\x00\x00\x00")

func gitignorePlayframeworkBytes() ([]byte, error) {
	return bindataRead(
		_gitignorePlayframework,
		"gitignore/PlayFramework",
	)
}

func gitignorePlayframework() (*asset, error) {
	bytes, err := gitignorePlayframeworkBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/PlayFramework", size: 170, mode: os.FileMode(420), modTime: time.Unix(1441560244, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _gitignorePlone = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x2c\x8a\x41\x0e\xc3\x20\x0c\x04\xef\x7e\x0a\x12\xf0\x8a\x36\xea\xa5\x7d\x03\x09\x06\x59\x25\xd8\x4a\x28\x55\x7f\x5f\x23\x72\x19\x8f\x77\xd7\x38\xf9\x6d\x30\xc8\xca\xb6\x8b\xd1\xb3\x0f\xc7\x9c\x95\xb7\x65\x99\x6e\xa9\x26\x9e\x81\x7d\x3c\xef\x2f\x70\xc6\x6d\x29\xc3\x4a\xd5\xc3\xfa\xa1\x12\x3d\x44\xec\x58\x58\xac\xce\x4f\xfd\xf8\x5b\x0b\x87\xa8\x3a\x83\x14\xde\x78\x75\x12\x8e\x36\x26\x74\x36\x0f\x3d\x1c\x1e\xfe\x01\x00\x00\xff\xff\x14\xe9\xdb\xf1\x89\x00\x00\x00")

func gitignorePloneBytes() ([]byte, error) {
	return bindataRead(
		_gitignorePlone,
		"gitignore/Plone",
	)
}

func gitignorePlone() (*asset, error) {
	bytes, err := gitignorePloneBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/Plone", size: 137, mode: os.FileMode(420), modTime: time.Unix(1441560244, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _gitignorePrestashop = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x7c\x90\x5b\x6a\x33\x31\x0c\x85\xdf\xbd\x0a\x41\x1e\x7e\x18\xf2\x8f\x17\x91\x0d\x14\x52\xfa\xae\xd8\x8a\xc7\xd4\xb6\x8c\x2d\xe7\xb2\xfb\xaa\x33\x69\x49\x29\xf4\xc5\x97\x0f\x1d\xe9\xe8\xec\xe0\xa5\xc5\x0b\x0a\xc1\x39\x26\xea\x66\x07\xaf\x8b\xbe\x39\x25\xbe\xc6\x12\x36\x0a\x8e\x8b\x60\x2c\x70\xe7\xd1\xc0\xa3\xe0\x09\x3b\x81\x6b\xe4\xa9\x48\xc4\xd4\x01\x8b\x07\x96\x85\x1a\x54\x6a\x9d\x0b\xa6\xb5\x6e\x36\x46\xb5\xe7\x18\x6c\x27\x11\x6d\xd8\xe7\x69\xae\x4b\x35\x3a\xe8\x80\x6e\xa1\x3d\x08\xe5\xba\xca\x03\x15\x6a\xea\xc4\xff\x69\x05\x1b\x3d\x55\x9e\xee\xea\x9f\xba\xe0\x71\xe1\xaa\xc3\xd0\xe7\x58\xfe\x7b\xba\x58\x1c\xc2\xa3\x86\x86\x9e\xac\x71\x9f\xa3\xec\x97\x95\x5b\x4e\x76\x9a\xf5\x34\x89\x83\x35\x53\x8f\xea\x01\xeb\x4a\x74\x85\x4c\xdd\x4e\xf6\x21\xc9\xec\x47\xda\xc0\x2a\xde\x74\xea\xed\xa8\xa2\x35\x17\x4d\xe0\xb7\x55\x4e\x5e\x63\xf8\xce\xad\x36\x6d\xe3\x04\x62\xc6\x40\x7d\x0f\x97\xd8\x64\x68\x44\x0f\xae\xe4\x70\x7c\xfb\xa7\x17\x89\xfb\xb1\xc5\x09\xdd\xfb\xa8\xdd\x3e\x21\xba\x55\x6e\xf2\x4c\x62\xde\x88\xe7\x6b\x49\x8c\xde\x9a\x98\x75\xaf\x51\xb7\xcf\x47\x00\x00\x00\xff\xff\x91\xde\x81\x63\xe3\x01\x00\x00")

func gitignorePrestashopBytes() ([]byte, error) {
	return bindataRead(
		_gitignorePrestashop,
		"gitignore/Prestashop",
	)
}

func gitignorePrestashop() (*asset, error) {
	bytes, err := gitignorePrestashopBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/Prestashop", size: 483, mode: os.FileMode(420), modTime: time.Unix(1441560244, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _gitignoreProcessing = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xd2\x73\x09\x8e\x0f\x2e\xc9\x2f\x4a\xe5\x4a\x2c\x28\xc8\x49\x2d\x01\x53\x99\xc9\x89\x25\x99\xf9\x79\x7a\x39\x99\x79\xa5\x15\xc6\x46\x98\x62\x66\x26\x28\x62\xe5\x99\x79\x29\xf9\xe5\xc5\x68\x2a\xa1\xa2\x68\x6a\x73\x13\x93\xf3\x8b\x2b\xb8\x00\x01\x00\x00\xff\xff\x0f\xd4\xed\x78\x78\x00\x00\x00")

func gitignoreProcessingBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreProcessing,
		"gitignore/Processing",
	)
}

func gitignoreProcessing() (*asset, error) {
	bytes, err := gitignoreProcessingBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/Processing", size: 120, mode: os.FileMode(420), modTime: time.Unix(1441560244, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _gitignorePython = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x4c\x52\x3d\x6f\xdc\x30\x0c\xdd\xf5\x2b\x08\xa4\xd3\x21\x67\x2f\x45\x87\x8e\x69\x96\x02\x19\x02\xb4\x99\x8a\xe2\xa0\x93\x69\x5b\xa9\x2c\x0a\x22\xef\x72\xee\xaf\xef\x93\xef\xda\x74\xa1\xc9\x47\x3f\xea\xf1\xe3\x8e\x1e\x56\xe3\x7d\x90\xa5\xc4\xc4\x03\xf5\x24\xc5\xe2\x12\x7f\x6f\xfe\xe3\xd3\x13\x8d\xc0\xd5\x1d\x0e\x65\x0d\x3e\xcc\x7c\x38\xf4\x6e\xd7\x95\xf5\x47\x90\xe1\xa7\xdb\x7d\x28\x6b\x17\x92\x57\x75\xee\x8e\xbe\x10\x5f\x8c\xb3\x46\xc9\x8a\x9f\x54\x1a\xf8\x18\xd5\x6a\x3c\x9e\x0c\x28\x4a\x16\x1f\x7e\xf9\x29\xe6\xc9\x75\xcf\xab\xcd\x92\x1d\xe7\x73\xef\x8e\xa7\x98\x86\xde\x0d\x7c\xe6\x24\x65\xcf\xd3\xa4\x88\x40\x85\x95\xb7\x9c\xc4\x0f\x00\xae\x70\x77\xfd\xa4\x78\xdc\xcc\xa7\x8f\xbd\x2b\xbe\x1a\x20\xbd\x32\xce\xbe\x36\x91\xf8\x6d\x1f\xf3\x28\x60\xc4\xac\xe6\x13\x1a\xec\xc2\x38\x5d\x53\x4d\xdb\xf3\xfa\xf5\x96\xa8\x88\xe8\x45\x4f\xf0\x57\xb2\x99\x95\xaf\x8d\x93\xaf\x4c\x6f\x35\x1a\xfa\xa2\xe3\x4a\x9e\xca\xa6\x9a\x34\xd4\x58\x8c\xc6\x2a\x0b\x40\xe3\xa5\x24\x6f\xdc\xaa\x1c\x79\x14\x90\xfe\xab\x4d\x5b\x77\xda\xea\x62\x42\x7c\x4f\x2a\xe4\x11\x0a\xc5\xfc\xca\xc1\x68\x00\xb5\x17\xa4\x2b\x35\xc1\x0a\xdb\x92\xd6\x41\xea\xe2\x73\x1c\x59\xad\x0d\xb4\x70\x68\xb2\xdf\x0b\x27\x99\xd4\x95\x58\xf6\x70\x3a\xbb\xd8\xe6\x0f\x9c\x18\x3b\xb5\x39\xea\x7e\x88\x15\x0f\x48\x5d\xb7\x2c\xb8\x2f\x39\x1a\xe4\xaa\x61\x17\x41\xce\x5c\xfd\xc4\x54\xb9\x08\x06\xe8\x66\x5b\x12\x40\x0c\xcc\xe4\x02\xfb\xf7\x87\x77\xaf\xdb\xc1\x6f\x77\xe0\xb2\x28\xb7\x3a\xda\x5d\x96\xe4\xfe\xe5\x5b\xb0\xbb\xdf\xc2\xf6\xdc\xf7\xea\xb3\x62\x32\xb7\x93\x58\xa4\x1d\x8f\x6c\x4a\x1e\x5f\x7d\x9e\x84\xd4\x4e\xe3\xf8\x19\x30\x5a\x68\xf0\xb7\x32\xc7\x7c\xa1\x41\xc2\x69\xe1\x6c\x1b\x15\x37\x10\xb4\x3f\xdc\x8e\x64\x5b\xdc\x43\xf3\xf1\x86\xf9\x3a\x31\x76\xfe\x27\x00\x00\xff\xff\xe6\xd4\xc6\x8a\xc9\x02\x00\x00")

func gitignorePythonBytes() ([]byte, error) {
	return bindataRead(
		_gitignorePython,
		"gitignore/Python",
	)
}

func gitignorePython() (*asset, error) {
	bytes, err := gitignorePythonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/Python", size: 713, mode: os.FileMode(420), modTime: time.Unix(1441560244, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _gitignoreQooxdoo = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x4a\x4e\x4c\xce\x48\xe5\x02\x93\xba\x29\xf9\xe5\x79\x39\xf9\x89\x29\xc5\x5c\x99\x79\xc5\x05\xa9\xc9\x25\xf9\x45\x5c\x89\x05\x99\x5c\xc5\xf9\xa5\x45\xc9\xa9\xfa\x70\x41\xbd\x8c\x92\xdc\x1c\x2e\x40\x00\x00\x00\xff\xff\xf4\x8a\x69\x1e\x3a\x00\x00\x00")

func gitignoreQooxdooBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreQooxdoo,
		"gitignore/Qooxdoo",
	)
}

func gitignoreQooxdoo() (*asset, error) {
	bytes, err := gitignoreQooxdooBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/Qooxdoo", size: 58, mode: os.FileMode(420), modTime: time.Unix(1441560244, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _gitignoreQt = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x54\x4f\x41\x6e\xc4\x20\x0c\xbc\xf3\x0a\xa4\xdc\x88\x42\x1f\x91\x73\x0f\x79\x41\x65\x88\xab\xd0\x42\x09\x18\x2a\xed\xef\xd7\x4e\x94\x68\xf7\xe0\xd1\x78\xc6\x86\xf1\xa0\xe7\x71\xd4\xd9\xfd\xa0\x6f\xa4\xe1\x6f\xd5\x31\x38\x52\xca\x58\x8a\x99\xf1\x00\x29\x90\xe6\x84\x20\xae\x68\x6b\x8c\x82\x0f\x5e\x51\x6a\xd0\x4b\x9b\x90\x57\x3f\x6c\x49\xf0\x8b\xd6\x83\xdf\xf0\xee\xa8\x01\x6d\x3c\xbd\xd7\x6c\x3b\x61\x7d\xa1\xd6\x70\x53\x1c\x5d\xfa\x45\x0f\x3d\x65\xaf\xb8\xbe\x8c\xf5\xfb\xae\x4a\xbd\x58\x0f\x4c\x36\xf5\xc9\x6f\x7f\x87\x88\x3c\x3a\xb9\x1e\xe2\x3a\x99\x33\xca\x5c\x11\x5a\xae\x72\x09\xf4\x96\x09\xfe\x91\x0d\xd6\xdb\x69\xe8\x25\x49\xf8\x92\x22\xc7\x90\xeb\xef\xdf\xdf\x15\x0e\xf1\x0c\x00\x00\xff\xff\xe0\xb4\x7f\xfb\x24\x01\x00\x00")

func gitignoreQtBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreQt,
		"gitignore/Qt",
	)
}

func gitignoreQt() (*asset, error) {
	bytes, err := gitignoreQtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/Qt", size: 292, mode: os.FileMode(420), modTime: time.Unix(1441560244, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _gitignoreR = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x54\x8c\x51\x0a\xc2\x30\x0c\x86\xdf\x7b\x8a\xc0\xde\x06\x76\xa7\x18\xf8\x5c\x4f\x50\x9b\x6c\x8b\x76\x6b\x68\x53\x99\xb7\xb7\x43\x1c\xf8\xf6\x7d\xc9\xc7\xdf\xc1\x95\x8b\xa6\xfc\x86\x89\x23\x15\x63\xdd\xf2\xf5\x46\x5e\xc4\xfe\xcc\x74\x30\xee\x7e\x95\x48\x10\x12\x12\xf0\x06\xe2\xc3\xd3\xcf\x04\xf7\xca\x11\x41\x72\x0a\x54\x8a\xe9\x2f\xe3\x6e\xdd\xd1\xbb\x9b\x56\xe4\x74\x0e\xb7\xe2\x61\x6b\xa1\x3c\x1c\xdf\x66\x58\x03\x21\xbc\x78\xde\x48\xb5\x25\x27\x0d\xbd\x5d\x74\x8d\x7f\x07\xc1\xc9\x7c\x02\x00\x00\xff\xff\xa4\x2d\x1e\x16\xad\x00\x00\x00")

func gitignoreRBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreR,
		"gitignore/R",
	)
}

func gitignoreR() (*asset, error) {
	bytes, err := gitignoreRBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/R", size: 173, mode: os.FileMode(420), modTime: time.Unix(1441560244, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _gitignoreRos = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x64\x50\xc1\x6e\xc3\x20\x14\xbb\xbf\xaf\x40\xea\x2d\xd2\xe0\x1b\xaa\xaa\xab\xaa\x6d\x9d\x54\xed\x5e\x91\xc7\x0b\x7a\x0b\x81\x14\xc8\xd6\x5c\xf6\xed\x23\x6b\xbb\x76\xd9\xc5\xb2\x8d\x0d\x16\xf5\xc0\xce\x28\xa8\xd9\x2b\x70\x5c\x2b\xe8\x92\x3d\x58\x2a\x2a\xc5\x8f\x33\x29\x8e\xaa\x96\x98\x39\x78\x59\xf8\xbd\x7e\x24\x32\xb5\xc6\x76\xee\x6f\x82\x76\x73\x6f\x4f\x69\x70\xf9\xe6\xfe\xef\xfe\x6d\xcd\xf2\x87\x4a\xf6\x23\xc0\x42\x6c\xc8\x53\xd4\x99\x8c\xa8\x47\x61\x46\xaf\x3b\x46\x11\x09\x83\x6f\xd8\x0e\x91\xa0\x92\xd8\x58\x04\x55\x50\x61\xdf\xab\x33\xbb\xd6\xb7\xd6\x87\x48\xc2\xfe\xde\x62\x02\xa6\xd2\x31\xe1\x54\xf0\x93\x5b\x2e\xc6\x14\x24\x74\xdc\x27\x12\x29\x0f\x4d\x03\xb2\x8f\xe1\x9d\x30\x83\xc4\x2b\x2b\x99\x23\x46\xd2\x39\xc4\x4b\x68\xf5\xa2\x5b\x7a\xe6\x94\x93\xcc\xa7\x2c\x87\x44\x11\xa6\x7f\xbc\x8c\x2f\x80\x66\xc2\x11\xe1\x98\x2f\xd5\x87\xaa\x38\xe7\xa4\xea\x9d\xf6\x9e\xbd\x9d\x06\xdf\xa9\x9f\x85\x37\x99\x62\xd9\x57\x7d\x4d\xef\xaf\x3b\x5d\x8e\xe4\xa2\x9a\xc4\x4a\xe7\x96\xbd\xc0\x21\xe5\xd0\x89\x86\x1d\x25\x58\x2d\xdf\x9e\xb6\xbb\xc3\x76\xb3\x7b\xdd\xaf\xe1\x3b\x00\x00\xff\xff\x17\x57\xfe\x91\xed\x01\x00\x00")

func gitignoreRosBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreRos,
		"gitignore/ROS",
	)
}

func gitignoreRos() (*asset, error) {
	bytes, err := gitignoreRosBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/ROS", size: 493, mode: os.FileMode(420), modTime: time.Unix(1441560244, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _gitignoreRails = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x5c\x91\x41\x8f\xd4\x30\x0c\x85\xef\xf9\x15\x96\xf6\x56\xed\x24\xac\xb8\x8d\xb8\x01\x42\x88\xc3\x5c\xb8\xaf\xd2\xd4\xd3\x66\x27\x89\x83\x9d\xcc\x50\x7e\x3d\x49\x67\xcb\x02\xb7\xc6\xf6\xf3\xfb\xfa\x3c\x68\x1e\x9d\x72\x36\xaf\xa3\x65\x7b\x18\xf4\x52\x62\x50\x9a\x25\xa3\x53\x26\xd0\xac\x4c\x89\x59\x99\x69\x34\x83\x96\x1f\xc1\x17\x7c\xff\xef\xeb\xf0\x42\x95\x93\x0d\xca\xe4\x3a\x06\xef\x8c\xac\x52\x30\x2a\xe3\xe8\x8a\x6c\x67\x34\xca\xf4\x6d\xdb\x9e\x61\xd0\xc4\x7e\x56\x8c\x5c\x93\x2e\x3f\x8b\xca\xde\x5d\x02\x1e\x30\x5a\x1f\x76\x7b\xf5\x00\xdf\x4f\x9f\x4e\xf0\x91\x62\xc4\x54\x80\x6a\x81\xb2\xa0\x20\x70\x0d\x28\xe0\xcf\xb0\x52\x05\xcb\x08\xa7\x6f\x70\xf3\x65\x01\x41\xc7\x58\x04\x46\xf4\x69\x86\x9a\x03\xd9\x09\x27\x28\xd4\x85\xc0\x98\x49\x39\x4a\x67\x3f\x1b\x9f\x7c\xf1\x36\xf8\x5f\xc8\x62\xee\xb2\xe7\x42\x17\x4c\x2d\x89\x7d\xe6\x75\x9b\x5e\x37\x98\x07\xf8\x9c\xae\x9e\x29\x6d\x30\x89\x38\x36\xb9\xd8\xe2\x29\x1d\x95\xd1\x63\x4d\x53\x40\x65\xae\x98\x26\x62\xf3\xfa\x6c\xff\x70\x47\x96\x85\x6a\x98\xc0\x86\xd0\xe0\xc0\x2d\xe8\x2e\x0d\xcc\xa7\xce\xb6\xef\xc2\x8d\x12\xdf\x5c\x8e\x4d\xfe\x05\xe3\xd9\x07\xd4\x81\xdc\xe5\x11\x34\xd7\x71\x3d\xb4\x44\xa5\xd9\xee\xcf\x19\xa3\x60\xe9\x5e\x35\xb5\x60\x04\xa4\xe6\x4c\x5c\x7a\x06\x7c\x8d\xf0\x01\x9e\xf4\xd3\x93\x7e\x07\xc4\x30\x51\xaf\x0a\x45\x2c\x4b\xff\x3a\xdb\xe4\xd6\x47\xf0\x73\x83\xe8\xfe\x5e\x8e\xed\xee\xd7\xc8\xae\xef\x6b\x11\x57\xe9\x63\x23\xdd\x90\x0f\xdc\xae\x23\xfb\xec\x84\x67\x5b\x43\xb9\xb7\x9e\x1d\xc5\x4c\xa9\x31\x0b\x64\xdb\x2e\xb1\x55\xf5\x8b\x50\x82\x8e\x2f\x7f\x82\xb1\xd2\x58\xc5\xfc\xaf\x52\x83\xde\x4a\xcd\xf7\x4d\xda\x11\xbe\xde\xdd\x32\xdd\xfe\x4e\xa6\x5d\xba\xf4\xff\x13\xa5\x5b\xa7\x35\xd4\xef\x00\x00\x00\xff\xff\xe3\xee\x9e\x4a\xc3\x02\x00\x00")

func gitignoreRailsBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreRails,
		"gitignore/Rails",
	)
}

func gitignoreRails() (*asset, error) {
	bytes, err := gitignoreRailsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/Rails", size: 707, mode: os.FileMode(420), modTime: time.Unix(1441560244, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _gitignoreRedcar = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xd2\x2b\x4a\x4d\x49\x4e\x2c\xe2\x02\x04\x00\x00\xff\xff\xfb\x2a\xf8\x5b\x08\x00\x00\x00")

func gitignoreRedcarBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreRedcar,
		"gitignore/Redcar",
	)
}

func gitignoreRedcar() (*asset, error) {
	bytes, err := gitignoreRedcarBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/Redcar", size: 8, mode: os.FileMode(420), modTime: time.Unix(1441560244, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _gitignoreRedis = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x52\x56\xf0\x4c\xcf\xcb\x2f\x4a\x55\x28\x4a\x4d\xc9\x2c\x56\x48\xca\xcc\x4b\x2c\xaa\x54\x48\x29\xcd\x2d\x50\xd0\x00\x91\x7a\x45\x29\x49\x9a\x0a\x69\x99\x39\xa9\xc5\x5c\x5c\x5a\x20\x1e\x17\x20\x00\x00\xff\xff\xf9\xfc\x44\x12\x33\x00\x00\x00")

func gitignoreRedisBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreRedis,
		"gitignore/Redis",
	)
}

func gitignoreRedis() (*asset, error) {
	bytes, err := gitignoreRedisBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/Redis", size: 51, mode: os.FileMode(420), modTime: time.Unix(1441560244, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _gitignoreRhodesrhomobile = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x2a\xca\xc8\xcf\xc9\x4f\xd7\xd5\xe2\x2a\xce\xcc\x05\x92\x49\x99\x79\xfa\x39\x99\x49\xc5\x60\x46\x50\x46\xbe\x53\x69\x5e\x4a\x4e\x2a\x98\x57\x92\x5b\x00\xa1\x13\x8b\xd2\x53\x4b\xc0\x4c\x2d\xbd\xc4\x82\x78\x2e\x2d\xbd\x7c\x20\xce\x4a\x2c\xe2\x02\x04\x00\x00\xff\xff\xbe\x88\x70\x1c\x4d\x00\x00\x00")

func gitignoreRhodesrhomobileBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreRhodesrhomobile,
		"gitignore/RhodesRhomobile",
	)
}

func gitignoreRhodesrhomobile() (*asset, error) {
	bytes, err := gitignoreRhodesrhomobileBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/RhodesRhomobile", size: 77, mode: os.FileMode(420), modTime: time.Unix(1441560244, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _gitignoreRuby = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x44\x51\xcb\x8e\xdb\x30\x0c\xbc\xeb\x2b\x08\xec\x2d\x48\xa5\xe6\x9a\xf6\xd8\x07\x7a\xe8\xa5\xfd\x80\x40\x96\x68\x9b\x88\x24\x1a\x94\x94\x85\xff\xbe\x54\x9d\xdd\xbd\x18\x1c\x9a\x33\x9c\xa1\x4e\x76\xc1\x6c\x4e\x56\xa6\x60\x9c\x0d\x5c\x66\x5a\x8c\x0b\xfc\x40\xf1\x0b\x3a\xe3\x7e\x95\xda\x7c\x4a\x18\x7f\x50\xc2\x6a\xdc\x76\x5f\xb4\x5b\x37\x0c\x4e\x70\x63\x69\x55\x61\xc3\xda\x5c\xcb\xdb\x5b\xa9\xec\x4a\x5c\x6e\xcf\xd6\xf8\x9a\x97\x17\xf8\xab\x2c\x9a\x29\x40\x63\xf8\xd3\xa7\xfd\x37\x37\x9d\xba\x1a\x1b\x7d\x3b\x19\xab\x7a\xe9\xb6\x52\x6d\x2c\xbb\x99\x3a\xa5\x78\xd0\xbe\x71\xe8\x19\x4b\xf3\x63\x1a\x82\x0f\x2b\x82\x2f\x11\x16\x2c\xea\xb2\x61\x84\x79\x78\xbb\x6a\x80\xdd\x4b\xe4\xa0\x3b\x6f\xef\xd5\xf1\x3d\xc0\x50\xfb\x5e\x1e\x24\x5c\x86\x20\x14\x96\xec\x13\x55\x7f\xf8\x70\x76\xea\x25\xa6\x11\xfb\x81\x25\xb2\xb8\x03\x1b\x97\x68\x7a\xd6\xe2\xb2\x2f\x43\x09\x66\x16\xf0\xa0\x7f\xc4\xcb\x0e\x0a\xf4\x92\x67\xd8\xb9\x43\xa6\x65\x6d\xf0\xea\x75\x83\x26\xa5\x45\xd7\x20\xb4\x15\x2b\x1e\x4e\xa1\x52\x09\xff\x3b\x10\x38\x22\x50\x55\x39\x2a\x4d\x77\x6a\x18\xa5\x48\x2f\x8a\x21\xf7\xd4\x68\x4b\x08\xf8\xe1\xb9\x7e\x01\x56\xa2\xbc\x52\xc5\x33\xe8\x29\xc2\x7d\x08\x65\x9d\xbf\xaa\xca\x4f\xcc\x63\x85\x4d\x1c\xee\x0a\xad\xe8\x99\x3f\x3d\x9f\xe3\x1d\xab\xd1\x8a\x6d\x64\xe8\x45\xed\xa8\x9f\xbe\x8d\xa7\xa4\xb2\x80\x3c\x32\x7c\x85\x8b\xbd\x5c\xec\xe7\x11\x2a\xf2\xe8\x56\xce\xd8\xd6\x51\xcd\xbe\x84\xfd\xfc\x11\x8a\xf4\xee\x56\x49\x12\xcc\xbf\x00\x00\x00\xff\xff\x20\x5e\xca\x6a\x4c\x02\x00\x00")

func gitignoreRubyBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreRuby,
		"gitignore/Ruby",
	)
}

func gitignoreRuby() (*asset, error) {
	bytes, err := gitignoreRubyBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/Ruby", size: 588, mode: os.FileMode(420), modTime: time.Unix(1441560244, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _gitignoreRust = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x52\x56\x70\xce\xcf\x2d\xc8\xcc\x49\x4d\x51\x48\x03\x92\xc5\x5c\x5a\x7a\xf9\x40\x5c\x0c\x22\x8a\x72\x32\x93\x80\x54\x4a\x4e\x0e\x17\x97\xb2\x82\x6b\x45\x6a\x72\x69\x49\x62\x12\x44\x51\x6a\x45\x2a\x48\xd0\x3d\x35\x2f\xb5\x28\xb1\x04\xa8\x3b\xa9\x52\xc1\x39\xb1\x28\x3d\x9f\x4b\xbf\x04\x48\xa5\x96\xe8\x73\x01\x02\x00\x00\xff\xff\xe4\xc6\xc8\x4e\x5b\x00\x00\x00")

func gitignoreRustBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreRust,
		"gitignore/Rust",
	)
}

func gitignoreRust() (*asset, error) {
	bytes, err := gitignoreRustBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/Rust", size: 91, mode: os.FileMode(420), modTime: time.Unix(1441560244, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _gitignoreSbt = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x44\x8d\xb1\x6e\xc3\x30\x0c\x44\x77\x7d\x85\x00\xcf\x16\xf7\x8e\x45\x81\x7e\x80\xbb\x17\xb2\xcc\x48\x0c\x64\xd1\x20\xe9\x18\xf9\xfb\x30\x53\xc6\x3b\xbc\x7b\x37\xc5\x85\xf6\xa3\x63\xfc\x3e\xa9\x6f\xf1\x8f\xb9\x87\x29\x36\xb3\xe3\x0b\xe0\xba\xae\xa4\x25\xf7\x3c\xeb\x6a\x89\xa5\x82\x60\xc7\xac\x08\x1b\x17\x85\x5f\x34\xa3\x51\xe7\xc5\xb2\x18\x6e\xf0\x43\x82\xc5\x58\x08\x35\x35\xdb\xfb\x54\x78\xdc\xa8\x9e\xf2\x86\x1e\x28\x4a\x3c\x66\xef\x4c\xfc\x24\xf8\xa8\xa2\x41\xe8\xb4\xfe\xef\x79\xe4\xea\x86\xa0\x52\x3e\xe1\x10\xbe\xbb\x10\x56\x66\xe7\x52\x23\x75\xf9\x33\xa4\x92\x4b\xc3\xf0\x0a\x00\x00\xff\xff\x80\x67\x5b\xb8\xba\x00\x00\x00")

func gitignoreSbtBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreSbt,
		"gitignore/SBT",
	)
}

func gitignoreSbt() (*asset, error) {
	bytes, err := gitignoreSbtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/SBT", size: 186, mode: os.FileMode(420), modTime: time.Unix(1441560244, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _gitignoreScons = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x52\x56\x48\xcb\x2f\x52\x28\x28\xca\xcf\x4a\x4d\x2e\x29\x56\x28\xc9\x48\x2c\x51\x28\x2d\x4e\x55\x08\x76\xce\xcf\x2b\x06\xcb\x25\x95\x66\xe6\xa4\x64\xe6\xa5\x5b\x29\x64\x94\x94\x14\x58\xe9\xeb\x43\xa9\xf2\xf2\x72\xbd\xe2\x64\xa0\x2a\xbd\xfc\xa2\x74\x7d\x2e\x08\x3b\x33\x3d\x4f\x2f\x25\x29\x27\xb3\x24\x95\x0b\x10\x00\x00\xff\xff\x17\x75\xc9\x6e\x5a\x00\x00\x00")

func gitignoreSconsBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreScons,
		"gitignore/SCons",
	)
}

func gitignoreScons() (*asset, error) {
	bytes, err := gitignoreSconsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/SCons", size: 90, mode: os.FileMode(420), modTime: time.Unix(1441560244, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _gitignoreSvn = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xd2\x2b\x2e\xcb\xd3\xe7\x02\x04\x00\x00\xff\xff\xe3\x97\xc2\xcc\x06\x00\x00\x00")

func gitignoreSvnBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreSvn,
		"gitignore/SVN",
	)
}

func gitignoreSvn() (*asset, error) {
	bytes, err := gitignoreSvnBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/SVN", size: 6, mode: os.FileMode(420), modTime: time.Unix(1441560244, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _gitignoreSass = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xd2\x2b\x4e\x2c\x2e\xd6\x4d\x4e\x4c\xce\x48\xe5\xd2\xd2\x4b\x2e\x2e\xd6\xcb\x4d\x2c\xe0\x02\x04\x00\x00\xff\xff\x4d\x83\xdd\x06\x16\x00\x00\x00")

func gitignoreSassBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreSass,
		"gitignore/Sass",
	)
}

func gitignoreSass() (*asset, error) {
	bytes, err := gitignoreSassBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/Sass", size: 22, mode: os.FileMode(420), modTime: time.Unix(1441560244, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _gitignoreScala = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x4c\xcd\x31\x0e\xc2\x30\x0c\x46\xe1\xfd\x3f\x45\x25\xb6\x4a\x24\x97\x80\x81\x99\x03\x54\xae\x63\xd2\x40\x48\xa2\xd8\x08\x71\x7b\xda\x01\x95\xf1\x7b\xcb\x1b\x1d\x67\x52\xc5\xe8\x72\x8d\xc0\x61\xd0\xd9\x06\x6d\xc2\xe9\x96\x18\x8e\x89\x17\x81\x5b\x92\x5a\xed\x1f\xb8\x9c\x66\x8f\xb0\xca\x8f\x30\xea\x51\xcc\x63\x6d\xd3\x93\x0a\x45\x09\x1e\xda\x79\x47\xeb\xf5\x2e\x6c\x7e\xae\xd5\x76\xb5\xfc\x8a\xa9\xa8\xff\x79\xbb\x5e\x99\x32\x1d\x2f\xa7\xf3\xdf\x5b\xb7\x36\x05\x69\x52\x82\x14\x4e\xa2\x70\xef\xda\x1f\xba\x88\x18\xbe\x01\x00\x00\xff\xff\x0b\x5e\x3f\x7f\xb9\x00\x00\x00")

func gitignoreScalaBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreScala,
		"gitignore/Scala",
	)
}

func gitignoreScala() (*asset, error) {
	bytes, err := gitignoreScalaBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/Scala", size: 185, mode: os.FileMode(420), modTime: time.Unix(1441560244, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _gitignoreScrivener = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x54\xcb\xb1\x0e\xc2\x30\x0c\x04\xd0\x3d\x1f\x13\xff\x04\x62\x62\x41\x7c\x41\xea\x5a\xd4\x72\xa8\xab\x9e\x8d\xf8\x7c\xc2\x90\x81\xe5\x86\x77\x77\x74\xd5\x2e\xa0\x45\xf7\x55\xce\xda\x32\x1c\xed\x2d\xe5\x9f\x97\xc6\x96\xc7\x44\x48\x3b\x79\xab\xbf\xea\x23\x98\x9a\x18\xc3\xee\x6c\x13\x2e\xce\xa0\x75\x44\xe5\x4d\xd8\x90\xaf\x42\xf7\x54\xb6\x9b\xbb\x51\xa1\x87\x44\xe8\xfe\x1c\x4f\xad\x47\x57\x44\xf9\x06\x00\x00\xff\xff\x3a\x06\x4f\xe1\x8c\x00\x00\x00")

func gitignoreScrivenerBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreScrivener,
		"gitignore/Scrivener",
	)
}

func gitignoreScrivener() (*asset, error) {
	bytes, err := gitignoreScrivenerBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/Scrivener", size: 140, mode: os.FileMode(420), modTime: time.Unix(1441560244, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _gitignoreSdcc = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x52\x56\x08\x76\x71\x76\x56\x28\x2e\x29\x4d\x4b\xe3\xd2\xd2\xcb\xc9\xcb\x06\x91\xc5\x25\x40\x32\x37\xb1\x00\x44\xa6\xe6\x02\xc9\xa2\xd4\x1c\x10\x09\x16\x2f\xae\xcc\xe5\x02\x04\x00\x00\xff\xff\x8f\x5b\x05\xc4\x37\x00\x00\x00")

func gitignoreSdccBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreSdcc,
		"gitignore/Sdcc",
	)
}

func gitignoreSdcc() (*asset, error) {
	bytes, err := gitignoreSdccBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/Sdcc", size: 55, mode: os.FileMode(420), modTime: time.Unix(1441560244, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _gitignoreSeamgen = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x7c\x52\x41\x6f\xdb\x3c\x0c\x3d\xd7\xbf\x82\x40\x2f\xfd\x80\x2a\xc2\x57\xb4\x69\xd0\x53\x81\x61\xc0\x76\xda\xa1\xc3\xee\x8c\xcd\xd8\x5a\x64\x49\x13\xa9\xa4\xfb\xf7\xa3\xec\xb8\xc8\xd0\x74\xbe\x24\x14\xc9\x47\xbe\xc7\x67\xb7\x31\x0a\x4b\xc6\x64\x3b\x14\x6c\xce\x62\x19\x53\x63\x5b\x8f\xcc\xc4\xb6\xb1\x9d\x63\xd1\x1f\x7a\x4d\x3e\x76\xd4\x19\xcc\xed\xe0\x0e\x53\x4a\x88\xc5\x6c\x8b\xf3\xdd\x12\xc4\x22\xa9\xc8\x12\x65\x4a\x31\x4f\x11\xe6\x9e\xf4\x8f\xd0\x98\x4c\x4d\x85\xde\xb4\x85\x25\x8e\x5c\x9c\xd0\xea\x75\xf4\x4d\x73\x0d\x5b\x64\xea\x20\x06\x18\x44\xd2\x93\xb5\x2c\xd8\xee\xe3\x81\xf2\xce\xc7\xe3\xaa\x8d\xa3\x45\xbb\xd9\xac\x1f\x36\x0f\x1b\x7b\x7f\x77\x77\xff\xb8\x86\xaf\x80\x23\x64\x1a\xe3\xc1\x85\x1e\x5c\xf0\x2e\x10\x68\xe5\x48\x41\x58\x31\xdf\x88\x00\x5c\x5d\xc1\x5f\x1f\x7a\x0f\x53\x16\x76\xce\x13\x6b\xed\x44\x15\x2e\x7f\x6d\x0c\x82\x2e\x30\xf4\x14\x28\xa3\xe8\xa2\x47\xcc\x73\x2b\xec\x62\x86\x8e\x54\xa0\xdf\x75\xae\x22\xbd\x57\x6b\x99\x5e\x9b\x2a\x96\xd6\x2d\x50\x4e\x19\x77\x25\x57\x02\x33\x08\xdc\x28\xde\x09\xe2\x3f\x45\x3b\xd3\xf9\xdd\x5e\x35\x57\x09\x27\xe7\x67\xa4\x1b\x54\xe4\x59\xf0\x69\xaf\x17\xc2\xf1\x0d\xe4\x74\x9f\x8b\x20\x99\xb8\x78\xe1\xa5\xf4\x74\xbc\x0f\x4a\x6b\xee\x7c\x7f\x9d\x74\x0b\xb4\xea\x57\xb7\xf0\xa5\x74\x1c\x43\x85\x99\xaf\x7e\x51\xce\x11\x0f\x14\x60\x5e\x47\x9b\x7d\x47\xb9\xb9\xfe\x87\x3d\xae\xce\x64\x1f\xb4\x33\x97\x10\xaa\x60\x33\x7d\xf5\x0d\x43\x09\x0a\x02\x9f\x5b\xef\x12\x53\xb5\xd3\xf7\x01\xc3\x9e\x41\x22\x3c\xff\x88\xe1\x13\x60\xe8\xe0\x79\x9f\x71\x27\x38\x2d\x0c\x32\x90\xcb\x30\x90\x4f\xbb\xe2\x35\xcd\x47\xca\x5c\xfd\x87\xca\xd0\x4f\xc3\x7e\x15\x1d\xe0\x2a\x9d\xfa\xfe\x52\x0d\xf9\xed\xcc\x90\x4f\xfa\xfe\xa1\x59\x97\x5e\xb6\xf7\xff\x3f\xae\xd7\x9b\x47\x2d\xb6\xc7\x01\xc5\x38\x36\x3a\x5b\x25\x9e\x9d\x5a\x8d\xc2\xb1\xe4\x96\x4c\xb5\x46\x8e\xde\xb8\x3e\xc4\x4c\x26\xa1\x08\xe5\x60\x74\x5b\xc3\x7a\x48\x93\x72\xfc\x49\xad\x5e\xe9\x4f\x00\x00\x00\xff\xff\x86\xfc\xd0\xee\xc1\x03\x00\x00")

func gitignoreSeamgenBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreSeamgen,
		"gitignore/SeamGen",
	)
}

func gitignoreSeamgen() (*asset, error) {
	bytes, err := gitignoreSeamgenBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/SeamGen", size: 961, mode: os.FileMode(420), modTime: time.Unix(1441560244, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _gitignoreSketchup = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xd2\xd2\x2b\xce\x4e\xe2\x02\x04\x00\x00\xff\xff\x1e\xdd\x12\xe3\x06\x00\x00\x00")

func gitignoreSketchupBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreSketchup,
		"gitignore/SketchUp",
	)
}

func gitignoreSketchup() (*asset, error) {
	bytes, err := gitignoreSketchupBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/SketchUp", size: 6, mode: os.FileMode(420), modTime: time.Unix(1441560244, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _gitignoreSlickedit = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x6c\x8e\xc1\x8d\xeb\x30\x0c\x44\xef\xaa\x62\x80\xdc\x3e\xf0\xd3\xc5\x56\xb0\x15\x30\x12\x6d\x33\x11\x44\x41\xa4\x63\xa8\xfb\x95\x9c\x2c\x72\xd9\x0b\xc1\xc3\xcc\x9b\x77\xc1\x77\x96\xf8\xf8\x4a\xe2\x38\xb4\x3d\xac\x52\x64\x50\x49\xa8\x4d\xef\x1c\x1d\x8b\x64\x36\x50\x63\xc8\x5a\xb4\x71\xc2\xad\x23\xf1\x42\x7b\x76\xdc\x38\xd2\x6e\x1c\x2e\xf0\x5e\x25\x52\xce\x1d\xbe\x71\x3f\xf3\x51\x8b\x49\xe2\x59\x71\x1d\xd1\xd1\x7a\x72\xd6\xca\xed\xbf\x55\x8e\xb2\x48\x3c\x97\x8a\x3a\x2a\x35\x87\x2e\xa0\x81\x7a\x2f\x5f\xc3\xbf\xeb\xb3\x1e\xe7\xbd\x87\xf0\xb7\xe9\x26\xe6\xda\xfa\xc9\x71\x5a\x7f\x6d\xf3\x41\xdd\xa6\x80\x93\x14\x0c\xc3\xcf\xe4\x00\x25\x72\x82\xe9\xcb\xd4\x36\xdd\xf3\x4b\x62\x28\x4e\xda\xf0\x1d\x25\x42\xe3\xaa\x26\x13\xff\x56\x99\x63\xfb\xe7\x9d\x9f\xaf\xe1\x27\x00\x00\xff\xff\xd5\xa5\xf4\x61\x43\x01\x00\x00")

func gitignoreSlickeditBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreSlickedit,
		"gitignore/SlickEdit",
	)
}

func gitignoreSlickedit() (*asset, error) {
	bytes, err := gitignoreSlickeditBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/SlickEdit", size: 323, mode: os.FileMode(420), modTime: time.Unix(1441560244, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _gitignoreStella = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x4c\x8e\xc1\x6a\x85\x30\x10\x45\xf7\xf9\x8a\x0b\x6e\xda\x82\x36\x08\x55\xb7\x62\xb7\x5d\xf9\x05\x13\x33\x7d\xe4\x11\x4d\xc8\x24\xff\xff\xa2\xb8\x78\x9b\x99\xcb\x9d\xe1\x70\x1a\xcc\x99\x92\x43\x3f\x68\x8d\x8f\x35\xb3\xf7\xf4\x09\x29\x31\x86\x94\xf1\x1f\x12\xf6\xe2\xb3\x8b\x9e\x41\x22\xbc\x1b\xcf\x49\x54\x83\x16\xbf\xf3\xfa\x77\x85\x65\x19\x7e\x54\x4d\xf3\x7d\xb7\x30\xee\xa8\x4c\x16\xd0\x61\x11\xcc\x93\xb7\x0c\xeb\x52\x5d\xe1\xac\x55\xad\xbe\x15\x75\xa1\x64\xf5\xd5\xd5\xe7\x3a\xa9\x1f\x2e\x86\xb5\x70\x07\x24\xf2\xe6\xc8\xdf\x6e\xe3\xa4\x75\x6b\x48\xde\xc9\xa7\xd9\x23\x04\x8b\x9d\x49\x4a\xe2\x13\x31\x4e\xea\x15\x00\x00\xff\xff\xe2\x54\x99\xdf\xcf\x00\x00\x00")

func gitignoreStellaBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreStella,
		"gitignore/Stella",
	)
}

func gitignoreStella() (*asset, error) {
	bytes, err := gitignoreStellaBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/Stella", size: 207, mode: os.FileMode(420), modTime: time.Unix(1441560244, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _gitignoreSublimetext = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x44\x90\x5d\x8e\xab\x30\x0c\x85\xdf\x59\x85\x25\xde\xae\x2e\xac\x65\xa4\xe9\x06\x42\xea\x80\xdb\x60\x47\xb6\xa3\x4e\x77\x3f\x09\xb4\x9d\xd7\xe3\xf3\xf3\xc9\x23\xc4\x10\x37\x84\x44\x19\x0d\x92\x28\x58\x5d\x32\xed\x08\x8e\x3f\x3e\xfc\x9b\x7d\xcf\x81\xd7\x1a\x56\x9c\x0f\xe7\x21\x7d\x29\x26\x54\xe4\x88\xf6\x51\xcd\x2f\x1b\xee\x6f\xd7\x30\xc2\x43\xf4\x6e\x25\xc4\x77\x79\x50\x84\x6a\xa8\x93\x15\x8c\x94\x28\xf6\xd0\x39\x36\x7d\xbc\x3d\x58\x54\x6e\x18\xfd\x15\xb3\x4d\x6a\xbe\xc2\x82\xd0\x7a\xe3\x1d\xaf\x40\xec\x02\xde\xa0\x15\x8b\x18\xb9\xe8\xf3\x3f\x54\x6e\xe6\x36\x02\x46\x2b\xf7\xf6\xc0\x7e\x76\x15\x51\x27\x61\x90\x04\x51\xd8\x95\x96\xda\x22\x06\x0f\xca\xb9\xdf\x97\xb0\xe4\x27\xb0\x78\xdf\xa8\x46\xbc\xc2\xf7\x89\x75\xe9\x2f\x18\xe1\x0f\xf3\x45\xd6\x21\x2d\x79\xe9\x7d\x89\xd6\xaa\xe1\x18\xe8\xbc\x43\xd7\xa7\x53\x9f\x6f\x26\x3c\xfc\x06\x00\x00\xff\xff\x2f\x07\x7f\x5d\x62\x01\x00\x00")

func gitignoreSublimetextBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreSublimetext,
		"gitignore/SublimeText",
	)
}

func gitignoreSublimetext() (*asset, error) {
	bytes, err := gitignoreSublimetextBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/SublimeText", size: 354, mode: os.FileMode(420), modTime: time.Unix(1441560244, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _gitignoreSugarcrm = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x6c\x52\xcb\x8e\xdb\x30\x0c\xbc\xe7\x2b\x08\xe4\x50\x20\x07\xfb\x23\x16\x2d\x50\xa0\xbd\xf4\x81\x1e\x17\x8a\x44\x5b\x44\x64\x51\xa0\xa4\xa4\xfb\xf7\xa5\xa4\x6c\xbc\x5b\xec\xc5\xb0\x86\x43\x0e\x67\xa4\xe3\x11\x7e\xd6\xd5\xc8\xd3\x8f\xef\x87\x23\x7c\x5d\x23\x0b\x82\xad\xb9\xf0\x06\x93\x2f\xc6\x5a\xcc\x19\x72\xa9\xcb\x32\x1d\xe6\x07\xb2\x73\x8b\x57\xbe\xb1\xfa\x75\x24\x68\x0b\xcb\x0b\x58\xde\x52\xc0\x82\xe1\x65\x52\xe2\x2f\x4f\x19\x6e\x14\x02\x9c\x05\xcd\x65\x74\x54\x11\x8c\x05\xce\xe8\xcd\x95\xb8\xca\x04\x7f\x3c\x59\x0f\x37\x93\x81\x97\x82\x11\x02\x1a\x47\x71\x85\xc2\x3a\xa3\xf5\x6c\x94\x6b\x46\xad\xf6\x93\x60\xe2\x4c\x5d\x4e\x5b\xce\xc6\x5e\x6a\x6a\x60\x30\x16\x37\x1d\xdd\x94\xbf\xb0\x80\xc3\x2b\x06\x4e\x0d\xfa\x78\x57\x13\x75\x0b\xc8\x66\xd1\x75\x81\xba\x29\x07\x26\xba\xa1\x2a\xb8\x34\x97\x54\x40\x4d\xdc\xab\x1a\x44\x9f\x32\xef\x29\x64\xde\x10\x16\x0a\x98\x5b\xeb\x63\x3c\xe9\x79\x11\x8d\x72\x78\xee\xa9\x3e\xa4\xdb\x98\x0e\xcd\x1a\x50\x03\xe6\x07\xb0\xb1\xab\x01\xcf\x95\x82\x43\xd9\xe1\x1b\xcb\x45\x23\xf9\x9f\x97\xe7\xd3\xfc\xf9\x6f\xd9\x61\x93\x52\x20\x6b\x0a\x71\x1c\x85\x23\x3c\x0d\x71\xcb\x71\xa1\xb5\x4a\xaf\x41\xf6\x5c\x83\x9a\x0d\x99\x5b\x06\x6f\xec\x75\xda\x94\x7c\x7a\xfd\x7f\xe6\x2b\x8a\x90\xc3\x0e\xb6\x4b\x55\xd3\xea\x57\x53\xad\x69\x15\xe3\xf4\x68\x85\x52\xd1\x00\xf4\x66\x3f\x15\x88\x88\xae\x0f\x1b\xb4\xdf\x83\x75\xba\xf7\x7f\xe3\x35\xdf\x03\x6b\x37\x70\x8f\xff\xed\x12\xa7\x29\xf0\xfa\xfe\x9d\x45\xbc\xa9\x5a\x60\xf3\x2e\x61\x95\x18\xe0\xfc\xfa\xf3\x3c\x9e\xc3\x7c\xf8\x17\x00\x00\xff\xff\xf1\x91\x10\xc5\xde\x02\x00\x00")

func gitignoreSugarcrmBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreSugarcrm,
		"gitignore/SugarCRM",
	)
}

func gitignoreSugarcrm() (*asset, error) {
	bytes, err := gitignoreSugarcrmBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/SugarCRM", size: 734, mode: os.FileMode(420), modTime: time.Unix(1441560244, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _gitignoreSwift = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x5c\x52\x3d\x6f\xdc\x30\x0c\xdd\xfd\x2b\x58\x18\xe8\x10\x44\x36\x9a\x6e\xb7\xb5\x97\xa1\x5b\x0a\x14\x68\xbb\xca\x12\x6d\xf3\x6a\x8b\x86\x44\xdd\x5d\xfe\x7d\x29\xb9\xb9\xa4\x59\xee\x83\xef\x89\xef\xf1\x91\x2d\xfc\x76\xec\xb1\x69\x9b\x16\x26\x12\x9a\x02\x47\x04\xc7\x41\x22\x0d\x59\x38\xa6\x03\x44\x5c\x71\x1d\x30\x82\x30\xe4\xcd\x5b\xc1\xfd\xd1\x3d\x3c\x0d\x27\x74\x42\x67\x34\x47\xf8\x08\x3f\x2e\x34\x4a\xd3\xb4\x2d\x7c\xcd\xb4\x78\x98\x30\x60\x54\xb6\x6f\x86\xf2\xbf\x6f\x1e\x31\x2a\xd7\x3f\x5a\xb1\x95\xf6\xd3\x46\xe2\x9c\x20\xa1\x08\x85\x29\x35\x77\xdd\x36\x5c\x73\xc2\xd8\x7c\xf0\x38\xda\xbc\xc8\xad\x70\xd7\xad\x2a\xf9\xe9\xfc\xf9\x15\x7a\x29\xec\xd0\xc3\x7b\xe8\xa1\x42\x1b\xc6\xb4\xed\x26\xdf\x12\xfe\x2f\x5f\x5d\xd1\xf0\x2f\xbe\x9e\x64\xae\x8a\x57\xe7\x66\x74\x7f\x38\x4b\xd5\x50\xeb\xc6\x26\xd2\xb4\x0a\x54\x5e\x24\xd1\xf1\xf6\x27\xc3\xc9\x1c\xfb\x9a\x00\x94\xc6\x34\x92\x53\xda\xbc\xda\x4d\xbf\x68\x2b\x8d\xe1\xc8\x8e\xed\x77\xf6\xa9\xc6\xfd\x0b\x35\x59\xc7\xeb\x8a\xc1\x83\x9d\x2c\x85\x24\x60\xbd\xd7\x24\x40\x0d\x40\x21\x82\x27\xe5\xe8\x1a\x9e\x4b\xf8\xcf\x9c\x23\x74\xb7\x35\x75\xf0\x8d\x2f\x78\x56\xab\x6d\x81\x20\xcd\x9c\x35\xf6\x53\xf6\x13\xc2\xc8\xb1\xf2\x13\x2e\xe3\x7d\xed\xb7\x45\x4e\x60\x55\x4b\xb7\xab\x3f\x74\xcd\xaa\x2c\xc4\x01\x55\x5e\x0e\xda\x64\x16\xd9\x0e\x7d\x3f\x65\x9d\x31\x75\xae\xb8\xdd\xd4\x44\xc7\x71\xea\x73\x52\x5f\xfb\xa7\x79\x45\x66\x59\x97\x76\xd7\x35\x64\x76\x5b\x46\xc5\x4c\x41\xcd\xcd\xbc\xa1\x60\x92\x9a\x71\x68\xea\x69\xf1\x52\x13\x28\x13\xf6\x35\x18\x1b\x65\xb6\xd3\x7e\x86\x5f\xbc\x57\xbf\x94\x60\xa1\x80\x40\x63\x9d\xed\x62\x83\x94\x08\xec\x99\x49\x27\x28\x6b\x29\x39\x51\x80\xbd\x2f\x94\x83\x84\x31\xf2\x7a\x6b\x06\x1e\x37\x8d\x16\x83\x23\x9d\xe6\x8d\x4a\x7f\xfc\xb7\xd5\xd4\x34\xb7\x5a\x3d\xd9\xe6\x6f\x00\x00\x00\xff\xff\x86\x96\x47\xff\x0f\x03\x00\x00")

func gitignoreSwiftBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreSwift,
		"gitignore/Swift",
	)
}

func gitignoreSwift() (*asset, error) {
	bytes, err := gitignoreSwiftBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/Swift", size: 783, mode: os.FileMode(420), modTime: time.Unix(1441560244, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _gitignoreSymfony = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x74\x90\xc1\x4e\xc3\x30\x0c\x86\xef\x7d\x8a\x20\x2e\xc0\xa1\x91\xe0\x09\xc6\x2e\x5c\x90\x2a\x10\x67\xe4\x2e\x5e\x17\x91\xc6\x21\x4e\x06\x7d\x7b\x9c\x66\x6b\x77\x60\xa7\xe6\xf7\x6f\xff\xfe\xdc\x5b\xb5\x85\xdd\x01\x15\x78\xa3\x1c\x0d\xac\xee\xde\xa7\x71\x4f\x7e\x7a\xbc\x6f\x34\x84\xa0\x77\xc5\xd6\x0f\x55\x94\x0e\x79\xdf\xac\x46\x3b\xd8\xf4\x85\x18\x6a\x6d\xf6\x97\x52\x73\x35\xfc\x49\xc2\x8f\x10\xd7\xf0\x22\xce\xe1\xab\xb1\x86\x2f\xfe\x65\x78\x07\x11\x46\x4c\x18\xf9\x84\x4a\x7e\x6f\x07\x1d\x96\x72\x3b\x8d\xee\x9a\x65\xbd\x2d\x19\xaf\xe0\x61\x40\xa3\xfa\x49\x6d\x69\x0c\xc4\x18\xeb\x44\x4f\x94\x38\x45\x08\x6d\x38\x84\x76\xe6\xa9\x98\xff\x1a\xbd\xf5\x05\xbd\x7c\x64\x15\x93\xc3\x2a\xb8\xde\xfb\x19\xf1\x3b\xdb\x88\x23\xfa\x24\xb0\x47\xf4\x86\xa2\x2e\xfb\x37\xcc\x98\x78\xfe\x43\x59\x76\xab\x1c\x1c\x81\x91\x9e\x1f\xec\x75\x9f\xbd\x71\xc8\xba\xaa\x93\x35\x8f\x75\x2f\xdd\x87\xb7\xa9\xa2\x0a\x47\x16\xd1\xfe\x96\x6b\x2f\x85\x34\x3e\x67\xeb\x8c\x32\x90\x40\x20\xcb\x7b\x1e\x3f\x9f\x2a\x39\x9b\xb7\x46\x90\xab\x94\x8b\x20\x36\x7f\x01\x00\x00\xff\xff\xa7\x53\xbf\x78\x13\x02\x00\x00")

func gitignoreSymfonyBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreSymfony,
		"gitignore/Symfony",
	)
}

func gitignoreSymfony() (*asset, error) {
	bytes, err := gitignoreSymfonyBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/Symfony", size: 531, mode: os.FileMode(420), modTime: time.Unix(1441560244, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _gitignoreSymphonycms = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x4c\xcb\x4d\x0a\x84\x30\x0c\x40\xe1\x7d\xee\x32\x93\x33\x85\x5a\x6d\x31\x7f\x98\x88\xf6\xf6\x76\x25\x2e\x3f\x78\x4f\x48\xfb\x5a\x23\xb1\x50\x69\x15\xe1\x35\xdb\x16\x1f\xa6\x38\x42\x0c\xf1\x66\x3a\x10\x2e\x3b\xf6\x70\x2a\x15\x4f\x67\xa3\x65\xa6\x5d\x23\x89\xf9\x37\xc7\x7f\xde\x09\x4f\x00\x00\x00\xff\xff\x34\x42\xaf\xc7\x5a\x00\x00\x00")

func gitignoreSymphonycmsBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreSymphonycms,
		"gitignore/SymphonyCMS",
	)
}

func gitignoreSymphonycms() (*asset, error) {
	bytes, err := gitignoreSymphonycmsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/SymphonyCMS", size: 90, mode: os.FileMode(420), modTime: time.Unix(1441560244, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _gitignoreSynopsysvcs = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x6c\x52\xcd\x6e\xdb\x3c\x10\xbc\xeb\x29\x16\xc8\x25\x3f\x9f\xe5\xfb\x07\x37\x40\x61\x17\x6d\x80\xf4\xd2\x9f\xe4\x18\xd0\xd4\x52\x22\x42\x91\x06\x97\x92\xeb\xb7\xef\x2c\xe5\x3a\x45\xdb\x0b\x4d\x5a\x3b\xb3\x33\xb3\x7b\x45\xcf\x66\x66\x97\xf2\x48\x7a\x98\x22\xcd\x6d\x3b\xdb\x4e\xcf\x83\x9e\xbc\x3c\x9c\x74\xfb\xa6\xb9\xa2\x1d\x3b\x33\x85\x42\xd1\x8c\x4c\xc9\x51\x19\x98\xc4\x8f\x53\x30\xc5\xa7\x48\xfc\x83\xed\x54\xcc\x3e\x70\x4b\xf4\x9e\x3a\xef\x1c\x67\x8e\xe7\x7a\x6b\x22\xed\x99\x40\x23\x07\xb6\xde\x79\xee\xe8\xe8\xcb\x00\x16\x2f\x24\xb8\xda\x81\xae\x95\xd2\x88\x24\xeb\x4d\x41\x41\x67\x7c\xe7\x33\x7e\x40\x6b\x84\x17\x26\x94\x83\xc5\x04\x49\x54\xcc\x2b\x47\x72\x39\x8d\x34\xa0\xd7\xcd\xff\x44\xab\x44\x9b\x83\x29\xc3\xfd\x7a\xe3\x7c\x60\x45\xdc\x37\x50\x39\xab\x83\x8f\x1c\x39\x57\x66\x18\xa6\x27\xce\x3e\xa4\x9e\x4c\xec\xe8\xe9\xd3\xee\x91\x4a\x3a\x90\x4d\xd1\xf9\x5e\x2a\xa4\x5d\xfa\xaf\xcf\x8f\x7d\x5b\x1f\xe0\x79\x88\x2e\x1b\x29\x79\xb2\x65\xca\x90\xc5\x96\x45\x4c\x3e\x81\x01\x04\xab\x73\x28\x4c\x5f\x4f\x52\x78\xdc\xd2\x98\x3a\x0e\xb2\xf8\x05\xfc\xdc\x78\x5d\x9b\x2e\xdf\x34\xb2\x08\x53\x85\x73\x54\x24\x3a\xb1\x2d\x09\x94\xa3\x39\x69\x70\xff\x48\x4d\xb3\xac\xb9\xa9\xed\xcf\x40\xbc\xdb\x5c\x60\x2f\x35\x83\xc6\x4a\xb6\x55\xf1\x23\x7c\x6a\x1e\xb4\xaa\x63\x73\x29\x84\x74\xf4\xb1\xff\x95\xbc\xd1\xb7\xa8\xfe\xa5\xd1\x69\x29\x53\x44\x19\x4c\x41\xd3\x10\x20\x03\x4c\x93\x40\x03\xea\x8e\xd9\x43\x27\x70\x34\xaa\xf9\x9e\x65\x19\xc4\xdb\x46\xa8\xac\x40\xbf\x8d\xe1\xb6\x85\x6b\x55\xb3\x4d\x33\xe6\xd0\x33\x65\x16\x6c\x94\xd0\x75\x7f\x99\x4c\xb5\x37\xe5\xfe\xa6\xce\xe5\x32\xfa\x90\x6c\x25\x45\x50\xdf\x86\xba\x47\x7f\x79\xd0\x15\xab\x6b\x81\xb8\x54\x25\xfa\x83\x87\x56\xba\x42\x1b\x7b\x6e\xf9\x72\x89\xe8\xbe\x9d\xb1\xd7\x75\xb4\xb8\xac\x1b\xd4\x7e\xe1\x43\xca\xa5\x06\xb6\x7b\xfa\x50\x05\x7c\xdf\x3e\x3e\x40\x66\x58\xb6\x06\x56\xa4\x6d\xf0\xad\xde\x80\xb1\xc1\xb7\xaf\x7c\x52\xc4\xf3\x80\x5d\xd4\xd4\x3a\x16\xdf\x47\xdd\x53\xc0\xf6\xe9\x6d\xe1\x76\xb5\xf5\xf6\xbf\x3f\x46\x50\x53\x46\xb5\xcd\xac\xa5\xa0\xaa\x19\x74\x6c\x83\xc9\xd5\xb4\x54\xf8\x76\xbd\xbd\xbb\x23\x37\x45\x5b\xff\x6b\x9b\xd9\xbe\x0c\x5d\x96\x76\x68\x7e\x06\x00\x00\xff\xff\x44\xbc\x0b\x5f\xcb\x03\x00\x00")

func gitignoreSynopsysvcsBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreSynopsysvcs,
		"gitignore/SynopsysVCS",
	)
}

func gitignoreSynopsysvcs() (*asset, error) {
	bytes, err := gitignoreSynopsysvcsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/SynopsysVCS", size: 971, mode: os.FileMode(420), modTime: time.Unix(1441560244, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _gitignoreTags = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x52\x56\xf0\x4c\xcf\xcb\x2f\x4a\x55\x28\x49\x4c\x2f\x56\x48\x2e\x4a\x4d\x2c\x49\x4d\x51\x48\xaa\x54\x48\x05\x09\xe8\x28\x24\x43\xa8\x74\xb0\xb4\x86\xbb\x5f\xa8\x42\x7a\x4e\x7e\x52\x62\x8e\xa6\x42\x62\x5e\x8a\x42\x72\x71\x72\x7e\x41\x2a\x57\x88\xa3\x7b\x30\x97\x22\x88\xd4\xe7\x02\x29\xe4\x52\x04\x91\xfa\x5c\x60\x5d\x7a\x69\x99\x39\xa9\xc5\x5c\xee\x60\x45\xee\x41\x10\x2a\xc0\x31\xc4\x83\x0b\xa2\x1b\x2a\x0f\xe5\xe4\x97\x96\xc0\x98\x99\x79\xc8\xbc\x82\x7c\x30\x8f\x0b\x10\x00\x00\xff\xff\xe7\x03\xe1\xfd\xb1\x00\x00\x00")

func gitignoreTagsBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreTags,
		"gitignore/Tags",
	)
}

func gitignoreTags() (*asset, error) {
	bytes, err := gitignoreTagsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/Tags", size: 177, mode: os.FileMode(420), modTime: time.Unix(1441560244, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _gitignoreTex = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x74\x54\x3b\x6f\xdc\x30\x0c\xde\xfd\x2b\x04\x64\x49\x0c\xd8\x69\xc7\x76\xeb\x6b\xe8\x9a\xa5\x43\x50\x04\xb2\x44\xfb\x88\xd3\xc3\x90\xe4\x8b\xdd\x5f\x5f\x92\xf2\x35\x97\x4b\xba\x50\x7c\x89\x14\x3f\x92\xba\xb9\x51\xdf\x62\x02\xe5\x74\x81\xf5\x7e\xb6\xa3\x30\x4a\x2f\x2b\x3a\xd4\x69\x53\x23\x3a\xc8\x9f\x9b\xb6\x27\x15\x51\x17\x47\xa1\x93\xd0\x42\x74\x74\x99\x68\x5c\x98\x2f\xd1\x34\x0d\x85\xfc\x19\x0a\x24\x0f\x16\x29\x98\xb2\xd1\x2c\x1e\x42\x91\x28\xf6\x84\x4d\xdb\x99\x18\x4e\x90\x0a\xd8\xae\xc4\xbe\x6d\x6e\x54\x39\x40\x06\x95\x16\xca\xa5\x3c\x4e\x87\xa2\x60\x35\x6e\xb1\xa0\xd0\xeb\x09\xea\x2b\xd4\x18\x13\x71\xd3\x92\x88\x87\x62\x7a\xba\xd8\xf6\x73\x96\x03\xf6\x93\x4a\x90\x27\x7c\xc5\xc1\x61\x9c\x92\x9e\x0f\xdb\x75\x39\xea\x76\xc0\x81\xeb\xa5\xa3\x16\x4e\x0c\xa4\x3b\x7e\xe0\x30\x38\xa6\x86\xcb\x1c\x1c\x95\xd9\x0d\x6e\xad\xc5\x0b\x47\x9e\x6c\x49\x6c\x4f\x4b\xe8\x57\xef\x6a\xbe\x05\x9d\x55\x25\x46\xf7\x1e\x78\xa3\x1d\x9e\x24\x93\x3f\x92\x94\xb7\x60\x88\x7f\xe1\xfa\xe9\xcf\x2b\xe1\x76\x58\xf2\x76\xd7\x48\x35\xac\x95\x0c\x5f\xfe\x85\xd5\xc1\x2a\xbc\x84\x78\x87\x27\x45\xaf\x22\x41\x99\xd4\xac\xcd\x91\x70\xa3\xdc\x04\x8a\x76\x53\x4c\x58\x0e\x9e\x1b\xa5\x5d\x6d\x9d\x16\x8b\x39\x80\xcf\xb1\xd1\x26\x77\xad\x94\xc6\x4a\x9f\xc9\x97\xbb\x49\x94\xe4\x01\xb4\x87\x44\x72\xd0\x27\x7e\x65\x60\xdb\x29\xb1\xef\x2d\xdc\x39\xb0\x5e\x9b\xfb\xca\xcd\x9a\xfd\x20\x58\xa2\x8f\x1f\xbb\x4f\xbf\xcf\xe7\xe3\x87\x6b\xe1\x95\xe6\xe1\x95\xe9\xe1\xad\x23\xab\x80\x12\x64\x30\xe7\xb8\x97\xe2\xb5\xf9\x1c\xfc\x8d\xee\x5d\xc7\xff\x7a\xef\x57\x08\x83\xc9\xc5\x9c\x75\x42\x10\x08\x4d\x10\xca\xb5\x4e\x02\x27\x99\x85\x66\xf1\x0d\xcb\x4c\xab\x21\x0d\xee\x5e\x84\xae\x65\xe3\x61\x9b\x21\x25\x18\xf7\x19\x22\xcd\x31\x60\x49\x75\x27\x4c\x4c\x56\x07\x03\x7d\x1d\x8e\x82\x47\x1a\x8b\x8e\x8f\xef\x68\x0a\xc6\x40\xcd\xe7\x2b\x0e\x73\xc1\x30\x65\x69\x24\x8f\x9f\xf2\xfa\x08\x68\xf9\xd2\x4e\xe5\x59\x28\x8d\x20\x67\x71\x41\x4a\x44\xfb\xd9\xf6\x5e\x73\x7a\x5f\x4c\xa5\xe7\xf2\x99\x7d\x01\xaf\xde\xa0\x15\x6d\x9e\xea\xd9\xf2\x38\x6e\x93\x18\xe8\xc7\x78\xa6\x89\x12\x34\xfc\x33\xab\x42\xa4\x15\x37\xbc\x3a\x81\xb0\x20\x45\xa6\xf1\xdb\x67\xbc\x72\x72\x5e\x88\xf3\x76\x69\x33\xde\xca\xad\xcd\x57\x7d\xfd\x4f\xaa\x28\xb4\x63\x18\x73\x47\x5f\x00\x4d\x2a\xaf\x2c\xbb\x97\x68\x63\x88\xf5\x1d\xc5\x4a\xde\x95\x8a\xe6\x08\xab\x15\xa8\x7e\x61\xf8\x61\x39\xd4\xa0\x65\xf3\x68\x84\xff\x06\x00\x00\xff\xff\x19\xad\xc1\x0b\xf3\x04\x00\x00")

func gitignoreTexBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreTex,
		"gitignore/TeX",
	)
}

func gitignoreTex() (*asset, error) {
	bytes, err := gitignoreTexBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/TeX", size: 1267, mode: os.FileMode(420), modTime: time.Unix(1441560244, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _gitignoreTextmate = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xd2\xd2\x2b\xc9\x2d\x28\xca\xcf\xe2\x82\x31\x52\x93\x4b\xb8\x4a\x72\x4b\x12\xd3\x8b\xb9\x00\x01\x00\x00\xff\xff\x36\x23\xd5\x9c\x1c\x00\x00\x00")

func gitignoreTextmateBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreTextmate,
		"gitignore/TextMate",
	)
}

func gitignoreTextmate() (*asset, error) {
	bytes, err := gitignoreTextmateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/TextMate", size: 28, mode: os.FileMode(420), modTime: time.Unix(1441560244, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _gitignoreTextpattern = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xd2\xcb\x28\x49\x4c\x4e\x4e\x2d\x2e\xe6\x4a\x2e\x2e\xd6\x2b\xc8\x28\xe0\x2a\x2a\x48\xd6\xe7\x2a\xce\x2c\x49\x2d\xd6\x07\x91\x5a\xfa\x89\x29\xb9\x99\x79\xa8\x42\x05\x45\x99\x65\x89\x25\xa9\x68\x82\xa5\x49\x39\x99\xc9\x58\x95\x43\x64\x8a\x53\x4b\x4a\x0b\xb0\xca\x94\x64\xa4\xe6\x02\x4d\x2b\x49\xad\x28\x29\x48\x2c\x29\x49\x2d\x02\x1a\xe0\xe1\x19\x1c\xe2\x1f\x14\xa9\x57\x52\x51\xc2\x15\xe4\xea\xe8\xe2\xeb\x0a\x66\x02\x02\x00\x00\xff\xff\x32\x3a\x10\xce\xb1\x00\x00\x00")

func gitignoreTextpatternBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreTextpattern,
		"gitignore/Textpattern",
	)
}

func gitignoreTextpattern() (*asset, error) {
	bytes, err := gitignoreTextpatternBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/Textpattern", size: 177, mode: os.FileMode(420), modTime: time.Unix(1441560244, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _gitignoreTortoisegit = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x52\x56\x08\x28\xca\xcf\x4a\x4d\x2e\xd1\xcd\x49\x2d\x4b\xcd\x51\x28\x4e\x2d\x29\xc9\xcc\x4b\x2f\xe6\xd2\xd7\x2b\x49\xcf\x2c\x49\xce\xcf\x4b\xcb\x4c\xe7\x02\x04\x00\x00\xff\xff\x87\x0b\xb6\x1b\x26\x00\x00\x00")

func gitignoreTortoisegitBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreTortoisegit,
		"gitignore/TortoiseGit",
	)
}

func gitignoreTortoisegit() (*asset, error) {
	bytes, err := gitignoreTortoisegitBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/TortoiseGit", size: 38, mode: os.FileMode(420), modTime: time.Unix(1441560244, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _gitignoreTurbogears2 = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x54\x8c\xb1\x8a\xc3\x30\x0c\x40\x77\x7d\x85\xe0\xb6\x40\x9c\x9f\xb8\xe5\xb6\x5b\x6e\x3a\x3a\x28\xb6\x62\x4c\x5d\xcb\x58\x4a\x48\xfe\xbe\x36\xa5\x43\x17\xf1\xf4\xf4\xd0\xe4\xea\xf5\xef\xe5\x06\xf0\x85\xdf\xbc\xd1\x9e\x0d\x03\x1f\x9c\xa5\x3e\xb8\x74\x26\xa3\x95\x94\xa1\xcb\xc1\x2e\xac\x1f\x69\x57\x18\x52\x63\x6f\xd2\x2e\x18\xeb\x32\x8d\xe0\x97\xfc\x9d\x22\x2b\x4c\x8e\x63\x7c\xcd\x39\x95\x4d\x20\x24\x35\x58\xf7\x94\xc3\xe8\x7e\x8a\x1a\xe5\xcc\x0d\xb3\x44\x85\x9a\xea\xdc\xc1\xd9\x69\xe3\xfa\x57\x92\xa1\xb1\x1a\x2e\xe8\xe5\xe0\xd6\x5f\x62\xe3\x2a\xcd\x14\xdc\xdb\x80\x33\x39\xe1\x19\x00\x00\xff\xff\x8c\xf3\xba\xc1\xca\x00\x00\x00")

func gitignoreTurbogears2Bytes() ([]byte, error) {
	return bindataRead(
		_gitignoreTurbogears2,
		"gitignore/TurboGears2",
	)
}

func gitignoreTurbogears2() (*asset, error) {
	bytes, err := gitignoreTurbogears2Bytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/TurboGears2", size: 202, mode: os.FileMode(420), modTime: time.Unix(1441560244, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _gitignoreTypo3 = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x6c\x52\xc1\x6e\x13\x31\x10\xbd\xe7\x2b\x46\xca\xa1\x80\xd8\xb8\x55\x00\x09\xb8\x80\x0a\x12\x39\x81\x04\x97\x9e\x52\xd7\x1e\xaf\xad\x7a\x3d\x8b\x3d\xce\x2a\x7f\xcf\x78\x93\x76\x23\xd1\xd3\xae\xde\xbc\x99\x79\xef\x8d\xd7\x6b\xf8\x73\xf7\xeb\xe7\x16\x0e\xef\x56\x6b\xd8\xf5\x89\x32\x42\xc1\x7c\xc0\xac\x23\xd4\x31\x92\xb6\xa0\x93\x05\x17\x22\x82\x0d\x19\x0d\x53\x0e\x58\x36\x2b\xd5\x20\x6d\x87\x90\x54\x95\x8e\xfd\x89\xac\x2e\xf1\x3d\xe3\x30\xee\x05\x3a\xd5\x8a\x5a\x76\x18\x6d\x3c\xae\x14\x1f\x47\xda\x1a\x4a\x4e\xcd\xd4\xdb\xaf\xb7\x3f\xbe\x7f\x7b\xf3\x1f\xee\x02\x46\xbb\x4b\x8e\x36\xa3\x1f\x97\x21\x91\x8c\xa8\x6c\xb4\xd0\xc3\xe4\x83\xf1\x40\xa2\x3c\x07\x8b\x05\xe6\x11\xe7\xe2\x46\x7a\xee\xa8\x42\xf1\x54\xa3\x85\x90\x4c\xac\x16\xe1\x48\x35\x9f\x87\x14\xae\xce\xc1\x14\xd8\xc3\xfd\x97\x73\xfd\xd5\xd5\x5c\x6b\x23\xf6\xf3\x5f\xdb\x7e\xf5\xfa\xf3\x3d\x68\x06\xf6\x08\x28\xc1\x90\x83\x67\x56\xab\xb7\x55\xbf\x11\xc1\x33\x8f\x9f\x94\x2a\xac\xcd\x63\x13\xe5\x22\x4d\x1b\x43\x83\xfa\x5b\xb1\x70\xa0\x54\xd4\xcd\xcd\xc7\xeb\xf7\xdb\x0f\xd7\xca\xd3\xd4\x3d\x08\xda\x31\x75\x83\x4e\xba\xc7\x6e\x56\xdf\x85\x24\xfd\x31\xea\x99\xdf\xd5\x12\x52\xdf\xf5\x81\xc1\x51\x06\x8b\xac\x43\x6c\x87\x58\xc2\x7a\x41\xef\xc5\x59\x8f\x45\xc2\x94\xde\x68\x31\x97\xb7\xcd\xfd\x53\x20\x5e\x1f\xb0\x39\x1a\x84\x34\xc4\x90\x1e\xd1\x36\x1f\x3b\x07\x89\x58\x32\x1c\x06\x4c\x0c\x54\x4f\xb6\x65\x82\x98\x11\x2d\xc0\x13\x49\x08\x7c\x7e\x10\xb3\x0e\xf9\x6c\x63\x78\x58\xd6\xb6\x03\x3e\xbf\x9c\xe3\x13\xad\xa1\x6a\xf5\x2f\x00\x00\xff\xff\x0c\x67\xad\x5c\x7f\x02\x00\x00")

func gitignoreTypo3Bytes() ([]byte, error) {
	return bindataRead(
		_gitignoreTypo3,
		"gitignore/Typo3",
	)
}

func gitignoreTypo3() (*asset, error) {
	bytes, err := gitignoreTypo3Bytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/Typo3", size: 639, mode: os.FileMode(420), modTime: time.Unix(1441560244, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _gitignoreUmbraco = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x5c\x91\x41\x4f\x02\x31\x10\x85\xef\xfb\x2b\xc6\x70\x50\x39\xb8\x77\x6f\xca\xae\x86\x44\x90\xa8\x78\x21\xc4\x0c\xdb\x61\x99\xd0\x6d\x9b\x76\x8a\xf0\xef\x2d\x2c\x89\x94\xeb\x7b\xdf\xbc\xbc\xbc\x19\xc0\xd4\x0a\x3d\xc2\x37\x87\x88\xfa\x53\xa2\x62\x0b\x2d\x0b\xb7\xc6\x7a\x02\x1f\x35\x05\xe8\xf0\x00\xa8\x83\x85\x55\x52\x48\xd3\x0e\x8d\x14\xc5\x00\xc6\x3d\x14\x0d\x77\xce\x7a\x49\x2a\xac\xad\x56\xe4\x03\xb4\x64\xc8\xa3\x90\x82\xd5\x01\xe6\xdd\xca\x63\x63\x8b\xe1\xb0\x7c\x72\xee\xa7\x42\xc1\x72\xa4\x99\x8c\x54\xe4\xc8\x28\x32\xcd\xa1\xcc\xdc\x7a\x8f\x1d\x1b\x1a\x27\x6f\x4f\x21\xf7\xde\x6c\x7b\xa5\x2c\x66\x6e\xe9\x69\xc7\xf4\x9b\xeb\x5f\xf5\x64\x56\x16\x23\x6c\x36\xa4\xca\x8b\xc2\xe7\x3e\xd0\x58\x23\xa9\x04\x34\x47\x02\xd6\xac\x29\x3b\x8f\x3d\xf6\x90\xb0\x35\xb7\xc7\xfb\xca\x9a\x5b\x01\xce\x53\x1c\x36\x5b\x6c\xd3\x4c\x77\xd9\x88\x1d\x07\xc1\x6d\x92\x65\xc3\x21\xed\xe2\x01\x61\x1a\x5f\x49\xfe\x0f\xfa\xb1\xee\x53\xf0\x24\x91\x10\x62\x4a\x15\x0b\x6c\x1a\x1d\x15\x81\x22\x41\xd6\x09\xf3\xb6\xcb\x1f\xf4\x5c\xbf\xbc\x7f\xd4\xa7\xe4\xe2\xe6\x7a\x89\x73\x7a\x79\x72\x16\xf3\xb8\xec\x7b\x96\x8b\x4a\x2d\x69\x47\xda\x3a\xf2\x97\x60\xf1\x17\x00\x00\xff\xff\xc0\x2b\x3c\xb9\x04\x02\x00\x00")

func gitignoreUmbracoBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreUmbraco,
		"gitignore/Umbraco",
	)
}

func gitignoreUmbraco() (*asset, error) {
	bytes, err := gitignoreUmbracoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/Umbraco", size: 516, mode: os.FileMode(420), modTime: time.Unix(1441560244, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _gitignoreUnity = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x4c\x8e\xbd\x4e\x04\x31\x0c\x84\xfb\x3c\x85\x25\x3a\x8a\x4d\xc1\x13\x00\x27\x68\x40\x27\xf1\xd7\x9c\xb6\x48\x2e\x5e\xc8\x29\x1b\x47\xb6\x23\xb1\x6f\x4f\x8c\x4e\x07\x8d\xfd\x69\x32\x93\xb1\x3f\x3c\x95\x39\x47\x0e\xbc\x79\xe7\x0f\x6f\x3a\xe3\xda\x8c\xf6\x34\xc7\x93\xc1\x5d\x9c\x7b\x2e\xc9\x3b\x77\x05\xb7\x5d\xe9\x13\x2b\x72\x50\x4c\xf0\xf1\xea\x9f\x77\x20\x54\xba\x66\xaa\x10\x6a\x82\xc6\x74\xc2\xa3\xc2\x92\x0b\x8a\xbb\x9e\x8e\x62\xca\x80\x5e\xb3\x6e\x67\x96\x52\x6d\x76\x1a\x53\xd7\x66\xaf\x82\x7c\x5e\x8d\x71\xb1\x64\xcb\x29\x8e\x15\x89\x7e\x53\xa3\xfc\xdd\xbe\xb8\xd9\xc1\xdf\x01\x2b\x6a\xb8\x54\x59\x60\x32\xe5\xbf\xf7\xf1\xe2\x7d\x18\x36\xd8\x57\xb8\xe7\x20\x5f\xf0\x82\x8d\x58\xc5\xc9\x26\xb9\x2e\x34\xe9\xb7\xba\x9f\x00\x00\x00\xff\xff\x95\x84\x9f\x96\x0b\x01\x00\x00")

func gitignoreUnityBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreUnity,
		"gitignore/Unity",
	)
}

func gitignoreUnity() (*asset, error) {
	bytes, err := gitignoreUnityBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/Unity", size: 267, mode: os.FileMode(420), modTime: time.Unix(1441560244, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _gitignoreVvvv = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xe2\x52\x56\xd0\x2b\x33\x29\x50\x48\x4a\x4c\xce\x2e\x2d\x50\x48\xcb\xcc\x49\x2d\xe6\xd2\xaa\xd3\xab\xc8\xcd\xe1\x02\xca\xb9\x54\xe6\x25\xe6\x66\x26\x2b\x14\xe4\x94\xa6\x67\xe6\x15\x2b\xe8\xa5\xe4\xe4\x70\x25\x65\xe6\xe9\x73\x01\x02\x00\x00\xff\xff\xcd\xef\xf8\xaa\x39\x00\x00\x00")

func gitignoreVvvvBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreVvvv,
		"gitignore/VVVV",
	)
}

func gitignoreVvvv() (*asset, error) {
	bytes, err := gitignoreVvvvBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/VVVV", size: 57, mode: os.FileMode(420), modTime: time.Unix(1441560244, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _gitignoreVagrant = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xd2\x2b\x4b\x4c\x2f\x4a\xcc\x2b\xd1\xe7\x02\x04\x00\x00\xff\xff\xfc\x50\x87\xfb\x0a\x00\x00\x00")

func gitignoreVagrantBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreVagrant,
		"gitignore/Vagrant",
	)
}

func gitignoreVagrant() (*asset, error) {
	bytes, err := gitignoreVagrantBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/Vagrant", size: 10, mode: os.FileMode(420), modTime: time.Unix(1441560244, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _gitignoreVim = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x8a\xd6\x8b\x8f\xd5\xd2\x2b\x8e\x4e\xd4\x2d\x8f\x05\x12\x55\xb1\x5c\x20\x11\x64\xbe\x96\x5e\x69\x5e\x1d\x57\x70\x6a\x71\x71\x66\x7e\x9e\x5e\x59\x66\x2e\x97\x5e\x5e\x6a\x49\x51\x79\x46\x66\x71\x09\x97\x56\x1d\x17\x20\x00\x00\xff\xff\x5e\x00\xdf\xf9\x42\x00\x00\x00")

func gitignoreVimBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreVim,
		"gitignore/Vim",
	)
}

func gitignoreVim() (*asset, error) {
	bytes, err := gitignoreVimBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/Vim", size: 66, mode: os.FileMode(420), modTime: time.Unix(1441560244, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _gitignoreVirtualenv = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x3c\xcc\x31\xcb\xc2\x30\x10\x80\xe1\xfd\x7e\x45\xa1\x73\x72\xe1\x83\x0f\xd1\xd1\x4d\x70\x10\x04\x97\x92\xa1\xbd\x5e\xed\x69\x9a\x1e\x49\x5a\xa8\xbf\xde\x4e\x4e\xef\xf4\xbc\x75\xf5\x90\x54\x96\x36\x70\x5c\xa1\xae\xc6\x52\xf4\x84\x28\xed\xf4\xe1\xde\xd2\x3c\xe1\x9f\x73\x47\x74\xff\xe8\x0e\xd8\x1a\x4d\x32\x71\x32\x73\x34\xeb\x4f\x21\xd8\xdb\x56\xc6\x39\x42\x73\xee\xbc\xec\xb9\x88\x8f\x14\x96\x9e\xa1\xb9\x06\x2f\x1d\x34\xf7\xec\x29\x89\x96\x0c\xba\xad\xbb\xb1\x34\x3c\x41\x45\x4d\xe6\x30\xd0\xc8\xf4\xb6\xaf\xbc\x1f\xbe\x01\x00\x00\xff\xff\xe7\x88\x81\xc1\x8e\x00\x00\x00")

func gitignoreVirtualenvBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreVirtualenv,
		"gitignore/VirtualEnv",
	)
}

func gitignoreVirtualenv() (*asset, error) {
	bytes, err := gitignoreVirtualenvBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/VirtualEnv", size: 142, mode: os.FileMode(420), modTime: time.Unix(1441560244, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _gitignoreVisualstudio = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x74\x56\xdb\x8e\xdc\xb8\x11\x7d\xd7\x57\x30\xf0\x22\xb0\x7b\x3d\xea\xc4\x48\x8c\x20\x79\x1a\xf7\xac\x2f\xc1\xdc\xe2\x1e\x67\x0d\x0c\x1a\x0d\x4a\xaa\x96\xe8\xa6\x48\x82\xa4\xfa\xb2\x0f\xfb\xed\x7b\x8a\x94\x66\xda\x9e\xd9\x17\x4a\xa2\x8a\x45\xd6\xa9\x53\xa7\xf8\xe2\x85\xf8\xd4\x1a\xeb\x49\xfc\x5f\x85\x41\x6a\xb1\x8c\x43\xa3\xac\x88\xd4\x3b\xeb\xa5\x3f\x8a\x8d\xd2\x14\x5e\x8b\x6a\x50\xba\x11\x9e\xc2\xa0\x23\x3e\xa5\x69\x0a\xac\x4d\x3f\x45\x4b\x86\xbc\x8c\xd4\x88\xea\x28\x9c\x75\x83\x96\xfe\x07\x7f\xb2\x69\xce\xac\x09\x65\x51\xbc\x10\x5f\x02\xf9\xb3\xe0\xa8\x56\x1b\x55\x67\x17\xc5\xac\x0c\x83\xc5\x38\xe0\xdf\xf8\xb0\x21\xd4\xb2\xee\x88\xff\x69\x53\x36\xb6\x0e\x11\x9b\x84\x3f\x71\x21\x5e\x5e\x59\x63\x2f\x68\x47\xda\xba\xf9\x57\xd9\x4b\xaf\xcc\xb8\xfd\xab\xd1\xa5\xf3\xb4\x49\xeb\xdf\x9d\x46\x53\xdc\x5f\x34\x2b\xaa\x86\x76\xfe\xf0\x76\x3b\x54\x5a\xd5\xf8\xfe\xec\x57\xa4\x49\x06\x3a\x7d\x0f\xf3\xe2\xf0\xf6\x1f\x18\xfe\xf5\x76\x5e\x24\x60\xf0\xe0\xe1\xfe\x5d\xb5\x52\x06\xcf\x1b\xbb\xaa\xbe\xcd\x79\xa7\xef\x61\x78\xf3\xb7\xbf\xff\x53\xa4\xa8\xe6\xd6\x45\x05\x44\x44\xa3\x3c\xd5\xd1\xfa\x63\x51\xee\x42\x5a\x72\xb5\xbc\xa3\x10\x91\x02\x0c\x9f\xa7\x23\xde\xc5\x15\xbe\xd3\x19\x78\x66\x96\x37\xe3\xbd\xef\x2f\xf5\xca\xb6\xe5\x8c\x97\x5e\x7f\xb9\xfe\x74\x87\x60\xf3\xae\x4b\xc6\xab\x3c\xf4\xba\x60\x87\xd9\x55\xfa\x7c\x40\x60\x74\x2f\xec\x06\x19\x15\xe7\x77\x97\xe2\xd6\xdb\x6f\x38\xcf\x23\x12\xcb\xd3\xc8\xf9\xab\xd1\xba\x91\x51\x96\x35\xbb\xb9\xb8\xfe\x5a\xb8\xbc\xa4\xd4\xb6\xde\x96\xdf\x82\x35\x85\xf4\x51\x6d\x64\x1d\x39\x9e\xd9\x5a\xc1\x74\xb6\x76\x69\x54\x65\x87\xe3\x29\xbd\xc5\xd8\x53\x94\x78\xd8\xea\x1b\x46\x57\xf3\x0f\xd7\x54\x3c\xb6\x75\x1a\x1b\x8c\x3e\x38\x26\x40\xc5\xac\x88\xba\x4a\xa3\x4a\x23\xdb\xc7\xde\xe5\x71\xcd\x87\xc0\xab\xb6\x2d\xc6\x5d\x70\xa1\xae\xd3\x4b\xe0\x97\x32\x25\x89\x59\xe6\x54\xda\x21\xec\xea\x6c\xc9\x7f\x11\xc6\xa2\x1b\xe2\x6f\x4e\x76\x22\x21\x9f\x29\xb9\x9e\x26\x67\x27\x79\x5c\xfc\xfc\x73\xce\xdf\x68\xa4\x70\xee\x39\xfc\x48\xc7\xde\x4d\xcd\xce\xad\x23\x13\x9a\x0d\x7b\x4f\x63\xb2\x67\xf3\xa7\x7c\xc0\xa9\xf9\x07\x07\xe7\xc0\xab\x90\xcf\x9e\xc7\x03\x9b\xdf\xbd\x5f\x32\x69\xde\x88\x4b\x5b\x63\xd9\xaf\xd6\x6f\x83\x93\x35\x15\x3f\xc5\x4d\x22\xcb\x87\x41\x35\xd2\xd4\x24\xce\x87\x68\x7b\xc9\x9c\x12\x77\xd6\xea\xad\x8a\x70\xd3\xba\xc4\x01\x36\xfc\x4c\xcb\x4e\x7a\x47\x5e\xa8\x20\xa4\x28\xaf\x7f\xb9\x13\xb5\x6d\x94\x69\x53\x71\x2a\x53\xac\x1f\x4c\x66\x1c\x52\xca\xfa\xfd\x32\xac\xf2\x1c\x66\x2e\x6c\x5c\x52\x8c\x58\x12\x72\xa1\xc2\xed\x7f\x87\x10\x17\xb6\xa1\x3f\xf5\x5a\x4e\x16\x29\x1c\x92\xfd\x42\xc5\x63\xb6\xce\x9a\x32\xed\x3e\xfd\x4b\x70\x63\xab\x85\xdd\x4d\x87\x4d\x1b\xa4\x6f\xd9\x52\x0a\x0f\xa7\x69\x46\x93\xc4\xfb\x85\x1f\x0c\x18\xb4\x1e\x5f\xd6\xb3\xa2\x9c\xd5\xe9\x95\x39\x01\xe8\x26\xde\x5f\xa9\xb6\x8b\xc7\x2b\x6b\x03\x0b\x4b\xdf\xa3\x6e\x18\x39\xce\x7b\x79\x4d\x31\x61\xfa\x2b\x55\x62\x0f\xa4\x2b\xc2\x7a\xf1\x32\xc8\x10\x5e\x15\x25\x3f\xce\x72\xed\xb2\xd1\x27\x03\x39\xd2\x3a\x74\x8a\x10\x84\x1d\xa2\x1b\xc0\x1c\xab\x1b\x9c\xe8\xfe\x17\x5a\x1d\x20\x36\x21\x17\xf4\x85\xad\xc7\xb2\xca\xe1\x40\xca\x86\x9e\x4c\xcc\xd9\x1a\xd5\xd3\xfa\x09\x89\x47\xf3\x79\x42\xa8\x23\xed\xe6\xa7\xb3\x1f\x79\x62\x56\x7e\x3c\xdc\x3d\x3b\xbb\x78\x66\xb6\xeb\xea\x67\x67\xb7\xcf\xce\xba\x27\xb3\x1f\x63\xaf\xdf\x3c\x99\xed\x62\x06\x75\x01\xb1\xdc\x9e\xdd\x30\x0d\x1f\xe5\xcc\xb1\x86\x86\x2e\x21\x70\x9b\xdf\x13\xb2\x37\x09\x2a\x26\xd8\xad\x5b\xe5\xf9\x94\x1c\x14\xd1\x6f\x83\x27\x98\xf2\x17\xb8\x72\x73\x71\xf3\x6f\x64\xbd\x67\xa8\x44\x44\xc9\x19\x3a\x44\xa1\x95\x01\xd9\x36\xe2\x68\x07\xb1\x97\xfc\xc7\x0a\xe4\xa4\xde\x42\xed\x31\xe7\xc5\x1e\x7b\x34\xe4\xb4\x3d\x8a\x30\xb2\x55\xc0\x5d\x85\xf4\xb0\x6e\x55\x90\x31\x50\xd4\x18\x1c\x93\xe1\x0f\xd1\x27\x93\x97\x7b\x15\x3b\x74\xaf\x88\xdd\x14\x4a\xcd\x21\xdd\x20\x41\x13\x5e\x89\xbd\xd2\x5a\x54\x24\x06\x03\x42\xf8\xa3\x43\xa7\xe3\x82\xcd\x07\x4d\x2f\x1c\x44\x52\x20\xe6\xe2\xf0\x81\xa2\xb8\x95\xf5\x16\x64\x4d\xaa\x30\xb8\x6d\xcb\x01\x21\x04\x37\x4e\x8f\x4c\x81\x96\x18\xf6\xac\x52\x0f\x46\xff\xa4\x5a\xa2\xb2\x58\x8f\x47\x07\x2c\xd1\x80\x13\x64\x9d\xcd\xa7\xc5\xf3\x19\xbc\xd1\xa1\x26\x17\x73\x0d\xcd\x5f\x8b\x7d\xa7\xc0\x55\xd0\x0b\xcb\x51\x53\x81\xf5\xfc\x6a\x99\x55\x3e\x4a\xdf\x52\x2c\x8b\xbf\x9c\xfa\x18\xfb\x16\x7a\xa9\xa9\x47\x8c\x81\x2a\x50\x01\x6b\xb9\xef\x77\x76\x4f\x5c\x80\x99\x9e\x5a\xa3\x66\xe3\x03\x12\x9e\x1e\x7b\xfe\xbe\x23\x83\x75\xd4\x00\x95\x17\xdf\x6d\xe1\xc9\xd9\xa0\x70\x7a\x45\xa1\x04\xe4\x1b\xd5\xa6\xf2\x52\xa6\xb1\xfb\x20\xce\x39\xdd\x63\x23\x1a\x49\x51\x87\x03\x4b\x4f\x3a\x5b\x59\x87\x86\x36\xa7\x0b\x96\x0c\x84\x90\xce\x4d\x30\x9e\xb0\xed\xdc\xb9\x09\xf2\x67\xfa\xee\xa9\x64\x4f\xb7\x16\x32\x49\xa6\x40\x9b\xac\xd0\x3f\xe4\x82\x09\xba\xa8\x57\xe9\x06\x92\xd9\xb3\x25\x72\x22\x7a\xec\xc2\xf9\x99\xb6\x56\xcf\xb8\x02\xd2\x0f\x8b\xd3\x69\x6e\x40\x5f\x1f\x0a\xd4\x09\x70\x7e\x97\xae\x08\x10\xd6\x78\xd4\xc4\x66\xd6\x41\x85\x7e\xff\x69\x56\xcc\x7e\x67\x5d\xab\xfa\x26\xe9\x5b\xc5\x8c\x42\x87\xea\xa8\x97\x3b\x45\x7b\xa6\xda\xe6\xf0\x48\xb8\x89\xdd\x85\x81\x3c\xae\x7b\xdb\x0c\x9a\x83\xb7\x1e\xad\xda\x30\xe0\x0d\x67\x09\x30\x26\xf9\xff\x74\x3e\x5f\x2a\x8d\x8c\x6a\x56\x40\x31\x36\xed\x50\x7c\x98\x12\xb9\x66\x95\x4d\xa7\x7d\x87\x10\x07\x27\xfe\x2a\x38\x81\x7e\xec\x87\x62\xe3\x6d\xcf\x85\x03\x17\x31\xe9\xbb\x11\xe0\xf0\xe4\x28\x19\x61\x2d\xaa\x51\x82\x0d\x7b\xfa\xf1\x06\x88\x65\x01\xf5\x56\x4e\xde\xb3\x53\x89\x84\x1a\x1b\x47\xfe\xbc\x66\xa4\xc7\x12\xd8\x93\xe8\xe4\x8e\x44\x0b\xda\xfd\xe7\xec\x55\xb1\xfe\xe2\x5a\x2f\x1b\xfa\x9c\xce\xb4\x7e\xaf\x52\xb0\xd9\x19\xfa\xd5\xf8\xf7\xd2\xb6\xb3\xf2\xeb\xd5\xe5\x77\xdf\x90\x29\x0e\x6b\xf9\xbf\x4b\xb1\x24\xcf\xa4\x9e\x2e\x9d\x7d\x6a\xd0\xba\xd9\xe4\x2b\x51\x80\xb6\x84\x00\x69\x8f\xa4\x01\x13\xb1\xa0\x3d\x00\x85\xbb\x48\xa3\x4b\x96\x10\x66\xa8\xea\x4b\x2d\xa1\x37\x31\x7f\xac\xd1\xec\xa7\x74\xa4\x2e\x53\xe3\xfe\x6a\x37\x51\xbc\x97\x5b\xec\x94\xc6\xf3\x10\xa8\x47\xe6\x46\x86\x5e\x03\x6e\x5c\x97\x52\x3b\x63\x3d\xf8\x01\xb0\xa2\x34\x71\x17\xd6\xd2\x48\x7d\x0c\x2a\xf0\xc6\x4f\x79\xfd\x76\xec\xa1\xf9\x32\xe3\x74\xfb\x9c\xc9\x7e\xba\x34\x88\xe9\xce\x99\x72\xc5\x17\x95\x58\xfc\x11\x00\x00\xff\xff\x89\xe7\xd5\xd4\x01\x0c\x00\x00")

func gitignoreVisualstudioBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreVisualstudio,
		"gitignore/VisualStudio",
	)
}

func gitignoreVisualstudio() (*asset, error) {
	bytes, err := gitignoreVisualstudioBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/VisualStudio", size: 3073, mode: os.FileMode(420), modTime: time.Unix(1441560244, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _gitignoreVisualstudiocode = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xd2\x2b\x4e\x2d\x29\xc9\xcc\x4b\x2f\xe6\xe2\x02\x04\x00\x00\xff\xff\x86\x0b\x5f\x67\x0b\x00\x00\x00")

func gitignoreVisualstudiocodeBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreVisualstudiocode,
		"gitignore/VisualStudioCode",
	)
}

func gitignoreVisualstudiocode() (*asset, error) {
	bytes, err := gitignoreVisualstudiocodeBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/VisualStudioCode", size: 11, mode: os.FileMode(420), modTime: time.Unix(1441560244, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _gitignoreWaf = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x52\x56\x48\xcb\x2f\x52\x28\x28\xca\xcf\x4a\x4d\x2e\x29\x56\x28\xc9\x48\x2c\x51\x28\x2d\x4e\x55\x08\x4f\x4c\x03\xcb\x24\x95\x66\xe6\xa4\x64\xe6\xa5\x5b\x29\x64\x94\x94\x14\x58\xe9\xeb\x27\xe7\xa7\xa4\xea\xa5\xe7\xe7\xa7\xe7\xa4\xea\x25\xe7\xe7\xea\x17\xe8\x97\x27\xa6\xe9\x73\xe9\x01\x49\x5d\x2d\x2e\xbd\x9c\xfc\xe4\x6c\x20\x0d\x08\x00\x00\xff\xff\xd9\xbf\xe9\x68\x57\x00\x00\x00")

func gitignoreWafBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreWaf,
		"gitignore/Waf",
	)
}

func gitignoreWaf() (*asset, error) {
	bytes, err := gitignoreWafBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/Waf", size: 87, mode: os.FileMode(420), modTime: time.Unix(1441560244, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _gitignoreWebmethods = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x7c\x90\x31\x0e\xc2\x30\x0c\x45\xf7\x1e\x25\x4b\x16\x2e\x80\x84\x90\x58\xdb\x01\x56\x93\x58\x51\xd4\x34\xb6\x6c\x07\xc4\xed\xe9\x01\xea\xce\xcf\xef\x49\xfe\x21\xc4\x47\x37\x2c\x02\x56\xa9\x2f\x28\x1f\x94\x98\xc1\x40\x8d\x04\xe3\x74\xcc\xdf\x0e\xb8\x51\x1a\x1b\x76\x5b\x4e\xe4\x56\x3d\xbb\x51\x51\x07\x09\x72\xab\x09\xcc\x8b\x6a\x5e\x3d\x32\x98\x49\xcc\xa1\x83\xb3\x1f\x1d\x8a\x72\x37\x9e\x89\x3c\xfd\x8b\xde\x2f\xcf\x6d\x46\x26\xad\xfb\x10\xbf\x8b\x73\xf3\xba\x9e\xed\xc4\x90\x56\x28\xa8\x7b\x2a\xc4\xe9\x1f\x00\x00\xff\xff\xfa\xae\xfc\xb3\xa8\x01\x00\x00")

func gitignoreWebmethodsBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreWebmethods,
		"gitignore/WebMethods",
	)
}

func gitignoreWebmethods() (*asset, error) {
	bytes, err := gitignoreWebmethodsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/WebMethods", size: 424, mode: os.FileMode(420), modTime: time.Unix(1441560244, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _gitignoreWindows = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x4c\x8e\xcd\xaa\xc2\x30\x10\x46\xf7\x79\x8a\x81\xde\xd5\x5d\xc4\x77\x68\xad\x50\x10\x17\x45\x10\x97\x69\x32\x6d\x86\xe6\xa7\x74\x52\xc4\xb7\x37\xa9\x28\x6e\x3e\x66\x71\xce\x61\x2a\xb8\x51\x30\xf1\xc1\x40\x5e\x4d\x08\x23\x39\x04\xad\xb4\x45\x16\x57\xbb\xf9\x81\xa5\x19\x04\xda\xf4\xbd\x45\x05\xa7\xe8\x0c\xae\xa0\x63\x18\x69\xda\x15\x71\x44\x9e\x53\x5c\x24\x05\x2a\x44\x8f\xfa\xa9\x73\xa9\xa6\x00\x1b\xa3\x81\x18\xde\x69\xb6\x6a\xcd\xe9\xbf\xbe\x6d\xee\xcd\xb9\x95\x75\x77\x39\x14\xe1\xf3\x45\x17\x38\x29\xe7\x72\xbd\xe0\x2c\xfe\xa5\x56\x43\x5e\xcf\xb4\xaf\xdf\x77\xf9\x55\xd8\xc6\x35\xe9\x2d\x15\xd8\x85\x59\xbc\x02\x00\x00\xff\xff\xea\xee\xa5\x7f\xd3\x00\x00\x00")

func gitignoreWindowsBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreWindows,
		"gitignore/Windows",
	)
}

func gitignoreWindows() (*asset, error) {
	bytes, err := gitignoreWindowsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/Windows", size: 211, mode: os.FileMode(420), modTime: time.Unix(1441560244, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _gitignoreWordpress = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x74\x90\x51\x6e\xc4\x30\x08\x44\xff\x7d\x94\x4a\xc1\x67\x22\x40\x6d\xab\xc4\x46\xc1\x69\xa3\x9e\x7e\x93\x68\x3f\xd6\x59\xed\xdf\xf0\x46\x8c\x06\xbe\x40\x5b\x0a\x90\x3b\x12\x89\x7b\xf0\xd2\x65\x41\x83\x7d\xd1\x57\x0d\xe9\x3f\xfc\xd9\x44\xad\x7e\x97\x04\x96\xed\x39\x75\xa9\x3d\x22\xff\x62\x25\xe1\x89\x90\xb2\xdc\xdd\x19\xe9\x67\xb3\x89\xe7\xf8\x4e\x7d\x64\x47\x15\x07\x2e\xeb\x40\xaf\xd0\x81\x6c\x96\x56\xe4\x3b\xd3\x86\x3c\xe6\x9d\xf2\x5c\xfe\x50\xdb\x74\x4b\xa5\x7a\xcc\xa2\xda\x2e\x33\xc4\x55\x90\x17\x39\xde\x71\x9c\x1f\xb5\x90\x54\x17\xe8\x7b\x0f\xe1\x11\x00\x00\xff\xff\x13\xa4\xdc\x5e\x29\x01\x00\x00")

func gitignoreWordpressBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreWordpress,
		"gitignore/WordPress",
	)
}

func gitignoreWordpress() (*asset, error) {
	bytes, err := gitignoreWordpressBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/WordPress", size: 297, mode: os.FileMode(420), modTime: time.Unix(1441560244, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _gitignoreXcode = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x5c\x90\x3d\x4f\xc3\x30\x10\x86\xf7\xfb\x15\x87\x2c\x31\x54\x34\x15\x65\x63\x84\x4a\x8c\x1d\x90\x10\xab\x3f\xae\xe9\x41\x12\x47\xe7\x73\xc9\xcf\xc7\x71\xd5\x06\x3a\xfa\x79\xee\xf5\xbd\xb6\xc1\x4f\x1f\x03\x81\x01\x83\x2d\x2b\xb7\x43\x14\x42\x1f\x07\x15\x76\x59\xa3\xa4\x67\x14\xea\xa9\x77\x24\xa8\x11\xf3\x18\xac\x12\xbe\x75\xd1\xd9\x6e\x53\xb3\xcd\x35\xf7\x80\x7b\xf7\x45\x5e\xf9\x44\xeb\xd7\x05\xe3\x3d\xbe\xff\xf0\x41\x17\x02\x60\x0c\xbe\x64\xee\x02\xb6\x34\x90\x94\x2b\x03\xb8\xf9\xbc\x81\x1d\x49\xc9\x87\x9d\x55\x5b\xc7\x3e\xac\x70\xcc\x09\x13\xa9\xf2\xd0\x26\x58\x35\xa3\x9b\x72\x22\x81\xbb\x40\x07\x9b\x3b\xbd\x82\x55\xd3\x97\x42\x8f\xa7\xa7\x45\x5d\xc0\x59\x6d\x6f\xd5\xb6\xaa\x91\x24\x8d\xe7\xe2\x7f\x07\xfe\xe3\xc9\xcf\x3b\xc2\xa5\xd7\x5e\x8f\x75\xe3\xe4\xfd\x91\xfc\x77\xcc\x5a\x77\x94\xea\x6b\x9b\xb8\x7c\xe9\xac\xe6\x44\xd2\xf2\x3c\xf8\x0d\x00\x00\xff\xff\x12\x25\x8f\xde\x69\x01\x00\x00")

func gitignoreXcodeBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreXcode,
		"gitignore/Xcode",
	)
}

func gitignoreXcode() (*asset, error) {
	bytes, err := gitignoreXcodeBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/Xcode", size: 361, mode: os.FileMode(420), modTime: time.Unix(1441560244, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _gitignoreXilinxise = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x5c\x91\xdb\x8e\xe3\x20\x0c\x86\xef\xf3\x14\x91\x7a\xb7\xd2\xa6\xfb\x46\x88\x83\xcb\xd2\x72\x88\xb0\x69\xe8\xdb\x8f\x4d\x82\x66\x34\x17\xfd\xfa\xd9\x80\xfc\x07\x6e\x6b\xc8\x04\x35\x81\x0b\x9a\x60\x35\x2d\x44\xb7\x3e\x42\x04\x5c\xfe\x6c\xc6\x67\x61\x20\x61\x74\x4c\x9b\x9c\x8a\xc5\xb3\xb9\x6a\x99\x31\x0a\xb0\x30\x13\xba\xc1\x17\x33\x5b\xf1\xec\xed\xe0\xe9\x95\xb9\x6b\x37\x38\xdc\x3e\x84\xf5\x29\xa4\xa3\xf3\x5f\x35\x66\x50\x36\x21\x49\x07\x3f\xb2\x95\x8e\x93\xd2\x69\xb9\x96\x46\x23\x5e\x93\x5c\x7d\x0f\x42\x64\x57\x9c\xd4\x43\xde\xfa\x61\xa4\x82\xfc\x46\x20\x0a\xd9\xe3\xf6\x9f\x12\x27\x55\x49\xef\x1b\xff\xa6\xd5\x69\xd9\xa7\xcb\x7a\xdd\xe5\x2c\x87\x1e\x57\x31\x6b\x0e\xbe\x59\x7c\x5f\x46\xfd\xec\xd5\xb9\x8c\x2d\x25\x5d\x3f\x73\xcc\x2c\xfb\xa8\x1a\x6a\x0f\x97\x73\xce\xf3\xcc\x72\x5b\xf7\x5a\x9e\x60\xe9\xef\x11\x1c\xac\x9c\x1b\x2a\xbf\xc0\xf7\xe5\xfb\x80\xb0\xf0\x8c\xf3\xbc\x42\xd2\x14\x90\x82\xbd\x3e\xe6\x77\x57\x1d\x60\x48\xc7\xd7\xb9\x3a\x0b\x79\xab\xcb\xd5\x9e\x47\x08\x9e\xfc\x63\x58\x89\x0e\x2a\x2e\x3c\xcb\x96\xfc\x08\xfe\xbe\xf4\x98\xbb\xd2\x8d\x8a\xfa\xa7\xba\x33\xdc\x40\xba\x2f\x7c\x23\x85\xd9\x13\x7a\xbc\x2f\x5f\x01\x00\x00\xff\xff\x76\xd4\xb7\xf2\x36\x02\x00\x00")

func gitignoreXilinxiseBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreXilinxise,
		"gitignore/XilinxISE",
	)
}

func gitignoreXilinxise() (*asset, error) {
	bytes, err := gitignoreXilinxiseBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/XilinxISE", size: 566, mode: os.FileMode(420), modTime: time.Unix(1441560244, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _gitignoreXojo = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x52\x56\x88\xc8\xcf\xca\x57\xd0\x48\xcb\x2f\xca\x4d\x2d\xca\xa9\x54\x08\x72\x75\xf4\x49\x4a\x2c\xce\x4c\x56\x48\xcc\x4b\x51\x08\x4a\x4d\xcc\x51\x08\x2e\x29\x4d\xc9\xcc\xd7\xe4\xe2\x72\x2a\xcd\xcc\x49\x29\xd6\xe2\xd2\xd2\x4b\x49\x4d\x2a\x4d\x87\xd1\x7a\x89\x05\x05\x5c\x2e\x20\x96\x96\x5e\x6a\x45\x2a\x94\xa9\x8f\x4b\x24\x46\xc1\x27\x33\xa9\x18\xa8\xb9\x28\xa9\x34\xb3\xb8\x24\xb1\x24\x15\xc8\xae\x00\xba\x22\x1e\xc1\xcd\x4f\x2a\xce\xcf\x49\x05\x32\x01\x01\x00\x00\xff\xff\x63\x05\x7c\x8e\xa0\x00\x00\x00")

func gitignoreXojoBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreXojo,
		"gitignore/Xojo",
	)
}

func gitignoreXojo() (*asset, error) {
	bytes, err := gitignoreXojoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/Xojo", size: 160, mode: os.FileMode(420), modTime: time.Unix(1441560244, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _gitignoreYeoman = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xca\xcb\x4f\x49\x8d\xcf\xcd\x4f\x29\xcd\x49\x2d\xd6\xe7\x4a\xca\x2f\x4f\x2d\x8a\x4f\xce\xcf\x2d\xc8\xcf\x4b\xcd\x2b\x01\x8a\x68\xe9\xe5\xe4\xa7\x73\x71\x25\x95\x66\xe6\xa4\xe8\x73\xa5\x64\x16\x97\xe8\x73\x01\x02\x00\x00\xff\xff\x31\x19\x01\x9c\x34\x00\x00\x00")

func gitignoreYeomanBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreYeoman,
		"gitignore/Yeoman",
	)
}

func gitignoreYeoman() (*asset, error) {
	bytes, err := gitignoreYeomanBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/Yeoman", size: 52, mode: os.FileMode(420), modTime: time.Unix(1441560244, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _gitignoreYii = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x6c\x8d\x41\x0e\x84\x20\x10\x04\xef\xf3\x8b\xbd\x72\x60\xde\xc4\x42\x87\x9d\x64\x01\xc3\xb4\xfa\x7d\x35\xf1\xa6\xb7\x4e\xa7\x2a\x95\xdc\x41\xd7\x20\x9f\x7b\xc5\x6a\xb4\xda\xc7\x84\x2c\x73\x10\x99\x28\x3a\xd7\x4e\x6b\xb8\xb0\xe7\xf9\x6a\x94\xc4\xa4\x21\x96\xaf\xf0\x87\x06\xd7\xfc\x3f\x03\x96\x75\x33\xec\xae\x72\x04\x00\x00\xff\xff\x9c\xf5\x8e\xaa\x78\x00\x00\x00")

func gitignoreYiiBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreYii,
		"gitignore/Yii",
	)
}

func gitignoreYii() (*asset, error) {
	bytes, err := gitignoreYiiBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/Yii", size: 120, mode: os.FileMode(420), modTime: time.Unix(1441560244, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _gitignoreZendframework = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x34\x8e\x31\x0e\xc3\x20\x0c\x45\x77\x9f\x02\x29\x5b\x86\xa0\x5e\xa1\xad\x3a\xf5\x04\xdd\x2c\x70\x08\x12\x60\x04\x4e\xd5\xdc\xbe\x58\x4d\x97\xcf\x47\xff\x7d\xdb\x93\xb9\x71\xae\xdc\xa9\x99\x35\x26\xea\xe0\xce\xef\x52\x37\x6c\xf0\xa6\xe2\xb9\x59\x80\xc9\x3c\xd9\x61\x32\x8e\xcb\x1a\x83\x62\xfa\x5a\xdc\x85\x13\xa3\xb7\xf3\x92\x34\x1f\xad\xaa\xf0\x35\x16\x6c\x87\x09\x24\x42\x1f\x39\x47\xcf\x4b\x66\x0d\xef\x28\x08\x7e\x88\x4d\x1c\xba\xfd\x59\x87\x6e\xa3\xd3\x77\xea\x3d\x72\xf9\x47\x92\xab\x05\x21\x55\xbd\x83\x02\xba\xc3\xbc\x1e\x17\xf0\x94\x79\x40\x63\x43\xc3\x6e\x3d\xbb\x3d\x53\x11\x94\xd1\x85\x6f\x00\x00\x00\xff\xff\xd2\xff\x36\xef\xd9\x00\x00\x00")

func gitignoreZendframeworkBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreZendframework,
		"gitignore/ZendFramework",
	)
}

func gitignoreZendframework() (*asset, error) {
	bytes, err := gitignoreZendframeworkBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/ZendFramework", size: 217, mode: os.FileMode(420), modTime: time.Unix(1441560244, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _gitignoreZephir = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x6c\x90\x31\x6f\x03\x21\x0c\x85\x77\x7e\x05\x52\xb6\x28\xe1\x96\xfc\x83\x4a\xdd\xaa\x2e\x9d\xba\x71\xe0\xe4\xdc\x33\x36\x05\x23\xb5\xff\xbe\x1c\x77\xca\xd4\xc5\x7a\xef\xe1\x4f\x0f\xf9\x64\x5f\x7c\x58\xc0\xde\x91\xa0\x5e\xec\x03\x18\x8a\x57\xa8\x76\xfe\xb5\x9f\x90\x17\x2c\xc6\x29\xa4\x3c\x19\x47\x38\xd7\xc9\x98\x93\x7d\x9f\xbf\x20\xe8\xbf\x08\x21\xaf\x50\xcc\xd9\x91\x6c\xc3\xf7\x31\x84\x7c\x6c\xe0\xeb\x46\x3c\x81\xb8\x01\x41\xf8\x8e\x8f\x56\xc0\x7a\x8e\x47\xe3\xa5\xaf\xb2\xa8\x2d\xf0\xdd\xb0\xf4\xbd\xbb\x14\x0b\x3f\x0a\x5c\x51\xb8\x23\x29\x23\x79\xed\xda\x99\x1e\x4f\x73\x43\x8a\xd3\x90\x49\x62\xeb\x1d\xbb\x79\xf3\x2b\x6c\x9f\x3c\x0f\xb7\x37\xed\xda\x07\xe4\x40\x2d\x82\x4b\xb7\x23\x20\x09\x9e\x9e\xb6\xa9\xa4\x9b\x1e\x24\x72\x55\x4f\x74\xad\xcb\xb0\xa4\xc9\x23\xbb\xc3\x25\xac\x15\xf9\xb1\xeb\xf5\x58\x8d\x58\xea\x48\x4a\xe3\x6b\x3f\x8d\x56\x97\x97\x3c\x12\x17\x21\xef\x6f\xfd\x9e\x2a\x42\xe6\x2f\x00\x00\xff\xff\x8f\x12\xa1\x26\x83\x01\x00\x00")

func gitignoreZephirBytes() ([]byte, error) {
	return bindataRead(
		_gitignoreZephir,
		"gitignore/Zephir",
	)
}

func gitignoreZephir() (*asset, error) {
	bytes, err := gitignoreZephirBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gitignore/Zephir", size: 387, mode: os.FileMode(420), modTime: time.Unix(1441560244, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if (err != nil) {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"gitignore/Actionscript": gitignoreActionscript,
	"gitignore/Ada": gitignoreAda,
	"gitignore/Agda": gitignoreAgda,
	"gitignore/Android": gitignoreAndroid,
	"gitignore/Anjuta": gitignoreAnjuta,
	"gitignore/AppEngine": gitignoreAppengine,
	"gitignore/AppceleratorTitanium": gitignoreAppceleratortitanium,
	"gitignore/ArchLinuxPackages": gitignoreArchlinuxpackages,
	"gitignore/Archives": gitignoreArchives,
	"gitignore/Autotools": gitignoreAutotools,
	"gitignore/BricxCC": gitignoreBricxcc,
	"gitignore/C": gitignoreC,
	"gitignore/C Sharp": gitignoreCSharp,
	"gitignore/C++": gitignoreC2,
	"gitignore/CFWheels": gitignoreCfwheels,
	"gitignore/CMake": gitignoreCmake,
	"gitignore/CUDA": gitignoreCuda,
	"gitignore/CVS": gitignoreCvs,
	"gitignore/CakePHP": gitignoreCakephp,
	"gitignore/ChefCookbook": gitignoreChefcookbook,
	"gitignore/Clojure": gitignoreClojure,
	"gitignore/Cloud9": gitignoreCloud9,
	"gitignore/CodeIgniter": gitignoreCodeigniter,
	"gitignore/CodeKit": gitignoreCodekit,
	"gitignore/CommonLisp": gitignoreCommonlisp,
	"gitignore/Composer": gitignoreComposer,
	"gitignore/Concrete5": gitignoreConcrete5,
	"gitignore/Coq": gitignoreCoq,
	"gitignore/CraftCMS": gitignoreCraftcms,
	"gitignore/DM": gitignoreDm,
	"gitignore/Dart": gitignoreDart,
	"gitignore/DartEditor": gitignoreDarteditor,
	"gitignore/Delphi": gitignoreDelphi,
	"gitignore/Dreamweaver": gitignoreDreamweaver,
	"gitignore/Drupal": gitignoreDrupal,
	"gitignore/EPiServer": gitignoreEpiserver,
	"gitignore/Eagle": gitignoreEagle,
	"gitignore/Eclipse": gitignoreEclipse,
	"gitignore/EiffelStudio": gitignoreEiffelstudio,
	"gitignore/Elisp": gitignoreElisp,
	"gitignore/Elixir": gitignoreElixir,
	"gitignore/Emacs": gitignoreEmacs,
	"gitignore/Ensime": gitignoreEnsime,
	"gitignore/Erlang": gitignoreErlang,
	"gitignore/Espresso": gitignoreEspresso,
	"gitignore/ExpressionEngine": gitignoreExpressionengine,
	"gitignore/ExtJS": gitignoreExtjs,
	"gitignore/Fancy": gitignoreFancy,
	"gitignore/Finale": gitignoreFinale,
	"gitignore/FlexBuilder": gitignoreFlexbuilder,
	"gitignore/ForceDotCom": gitignoreForcedotcom,
	"gitignore/Fortran": gitignoreFortran,
	"gitignore/FuelPHP": gitignoreFuelphp,
	"gitignore/GWT": gitignoreGwt,
	"gitignore/Gcov": gitignoreGcov,
	"gitignore/GitBook": gitignoreGitbook,
	"gitignore/Go": gitignoreGo,
	"gitignore/Google Go": gitignoreGoogleGo,
	"gitignore/Gradle": gitignoreGradle,
	"gitignore/Grails": gitignoreGrails,
	"gitignore/Haskell": gitignoreHaskell,
	"gitignore/IGORPro": gitignoreIgorpro,
	"gitignore/IPythonNotebook": gitignoreIpythonnotebook,
	"gitignore/Idris": gitignoreIdris,
	"gitignore/JDeveloper": gitignoreJdeveloper,
	"gitignore/Java": gitignoreJava,
	"gitignore/Jboss": gitignoreJboss,
	"gitignore/Jekyll": gitignoreJekyll,
	"gitignore/JetBrains": gitignoreJetbrains,
	"gitignore/Joomla": gitignoreJoomla,
	"gitignore/KDevelop4": gitignoreKdevelop4,
	"gitignore/Kate": gitignoreKate,
	"gitignore/KiCAD": gitignoreKicad,
	"gitignore/Kohana": gitignoreKohana,
	"gitignore/LabVIEW": gitignoreLabview,
	"gitignore/Laravel": gitignoreLaravel,
	"gitignore/Lazarus": gitignoreLazarus,
	"gitignore/Leiningen": gitignoreLeiningen,
	"gitignore/LemonStand": gitignoreLemonstand,
	"gitignore/LibreOffice": gitignoreLibreoffice,
	"gitignore/Lilypond": gitignoreLilypond,
	"gitignore/Linux": gitignoreLinux,
	"gitignore/Lithium": gitignoreLithium,
	"gitignore/Lua": gitignoreLua,
	"gitignore/LyX": gitignoreLyx,
	"gitignore/Magento": gitignoreMagento,
	"gitignore/Matlab": gitignoreMatlab,
	"gitignore/Maven": gitignoreMaven,
	"gitignore/Mercurial": gitignoreMercurial,
	"gitignore/Mercury": gitignoreMercury,
	"gitignore/MetaProgrammingSystem": gitignoreMetaprogrammingsystem,
	"gitignore/MicrosoftOffice": gitignoreMicrosoftoffice,
	"gitignore/ModelSim": gitignoreModelsim,
	"gitignore/Momentics": gitignoreMomentics,
	"gitignore/MonoDevelop": gitignoreMonodevelop,
	"gitignore/Nanoc": gitignoreNanoc,
	"gitignore/NetBeans": gitignoreNetbeans,
	"gitignore/Nim": gitignoreNim,
	"gitignore/Ninja": gitignoreNinja,
	"gitignore/Node": gitignoreNode,
	"gitignore/NotepadPP": gitignoreNotepadpp,
	"gitignore/OCaml": gitignoreOcaml,
	"gitignore/OSX": gitignoreOsx,
	"gitignore/Objective-C": gitignoreObjectiveC,
	"gitignore/Opa": gitignoreOpa,
	"gitignore/OpenCart": gitignoreOpencart,
	"gitignore/OracleForms": gitignoreOracleforms,
	"gitignore/Packer": gitignorePacker,
	"gitignore/Perl": gitignorePerl,
	"gitignore/Phalcon": gitignorePhalcon,
	"gitignore/PlayFramework": gitignorePlayframework,
	"gitignore/Plone": gitignorePlone,
	"gitignore/Prestashop": gitignorePrestashop,
	"gitignore/Processing": gitignoreProcessing,
	"gitignore/Python": gitignorePython,
	"gitignore/Qooxdoo": gitignoreQooxdoo,
	"gitignore/Qt": gitignoreQt,
	"gitignore/R": gitignoreR,
	"gitignore/ROS": gitignoreRos,
	"gitignore/Rails": gitignoreRails,
	"gitignore/Redcar": gitignoreRedcar,
	"gitignore/Redis": gitignoreRedis,
	"gitignore/RhodesRhomobile": gitignoreRhodesrhomobile,
	"gitignore/Ruby": gitignoreRuby,
	"gitignore/Rust": gitignoreRust,
	"gitignore/SBT": gitignoreSbt,
	"gitignore/SCons": gitignoreScons,
	"gitignore/SVN": gitignoreSvn,
	"gitignore/Sass": gitignoreSass,
	"gitignore/Scala": gitignoreScala,
	"gitignore/Scrivener": gitignoreScrivener,
	"gitignore/Sdcc": gitignoreSdcc,
	"gitignore/SeamGen": gitignoreSeamgen,
	"gitignore/SketchUp": gitignoreSketchup,
	"gitignore/SlickEdit": gitignoreSlickedit,
	"gitignore/Stella": gitignoreStella,
	"gitignore/SublimeText": gitignoreSublimetext,
	"gitignore/SugarCRM": gitignoreSugarcrm,
	"gitignore/Swift": gitignoreSwift,
	"gitignore/Symfony": gitignoreSymfony,
	"gitignore/SymphonyCMS": gitignoreSymphonycms,
	"gitignore/SynopsysVCS": gitignoreSynopsysvcs,
	"gitignore/Tags": gitignoreTags,
	"gitignore/TeX": gitignoreTex,
	"gitignore/TextMate": gitignoreTextmate,
	"gitignore/Textpattern": gitignoreTextpattern,
	"gitignore/TortoiseGit": gitignoreTortoisegit,
	"gitignore/TurboGears2": gitignoreTurbogears2,
	"gitignore/Typo3": gitignoreTypo3,
	"gitignore/Umbraco": gitignoreUmbraco,
	"gitignore/Unity": gitignoreUnity,
	"gitignore/VVVV": gitignoreVvvv,
	"gitignore/Vagrant": gitignoreVagrant,
	"gitignore/Vim": gitignoreVim,
	"gitignore/VirtualEnv": gitignoreVirtualenv,
	"gitignore/VisualStudio": gitignoreVisualstudio,
	"gitignore/VisualStudioCode": gitignoreVisualstudiocode,
	"gitignore/Waf": gitignoreWaf,
	"gitignore/WebMethods": gitignoreWebmethods,
	"gitignore/Windows": gitignoreWindows,
	"gitignore/WordPress": gitignoreWordpress,
	"gitignore/Xcode": gitignoreXcode,
	"gitignore/XilinxISE": gitignoreXilinxise,
	"gitignore/Xojo": gitignoreXojo,
	"gitignore/Yeoman": gitignoreYeoman,
	"gitignore/Yii": gitignoreYii,
	"gitignore/ZendFramework": gitignoreZendframework,
	"gitignore/Zephir": gitignoreZephir,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"gitignore": &bintree{nil, map[string]*bintree{
		"Actionscript": &bintree{gitignoreActionscript, map[string]*bintree{
		}},
		"Ada": &bintree{gitignoreAda, map[string]*bintree{
		}},
		"Agda": &bintree{gitignoreAgda, map[string]*bintree{
		}},
		"Android": &bintree{gitignoreAndroid, map[string]*bintree{
		}},
		"Anjuta": &bintree{gitignoreAnjuta, map[string]*bintree{
		}},
		"AppEngine": &bintree{gitignoreAppengine, map[string]*bintree{
		}},
		"AppceleratorTitanium": &bintree{gitignoreAppceleratortitanium, map[string]*bintree{
		}},
		"ArchLinuxPackages": &bintree{gitignoreArchlinuxpackages, map[string]*bintree{
		}},
		"Archives": &bintree{gitignoreArchives, map[string]*bintree{
		}},
		"Autotools": &bintree{gitignoreAutotools, map[string]*bintree{
		}},
		"BricxCC": &bintree{gitignoreBricxcc, map[string]*bintree{
		}},
		"C": &bintree{gitignoreC, map[string]*bintree{
		}},
		"C Sharp": &bintree{gitignoreCSharp, map[string]*bintree{
		}},
		"C++": &bintree{gitignoreC2, map[string]*bintree{
		}},
		"CFWheels": &bintree{gitignoreCfwheels, map[string]*bintree{
		}},
		"CMake": &bintree{gitignoreCmake, map[string]*bintree{
		}},
		"CUDA": &bintree{gitignoreCuda, map[string]*bintree{
		}},
		"CVS": &bintree{gitignoreCvs, map[string]*bintree{
		}},
		"CakePHP": &bintree{gitignoreCakephp, map[string]*bintree{
		}},
		"ChefCookbook": &bintree{gitignoreChefcookbook, map[string]*bintree{
		}},
		"Clojure": &bintree{gitignoreClojure, map[string]*bintree{
		}},
		"Cloud9": &bintree{gitignoreCloud9, map[string]*bintree{
		}},
		"CodeIgniter": &bintree{gitignoreCodeigniter, map[string]*bintree{
		}},
		"CodeKit": &bintree{gitignoreCodekit, map[string]*bintree{
		}},
		"CommonLisp": &bintree{gitignoreCommonlisp, map[string]*bintree{
		}},
		"Composer": &bintree{gitignoreComposer, map[string]*bintree{
		}},
		"Concrete5": &bintree{gitignoreConcrete5, map[string]*bintree{
		}},
		"Coq": &bintree{gitignoreCoq, map[string]*bintree{
		}},
		"CraftCMS": &bintree{gitignoreCraftcms, map[string]*bintree{
		}},
		"DM": &bintree{gitignoreDm, map[string]*bintree{
		}},
		"Dart": &bintree{gitignoreDart, map[string]*bintree{
		}},
		"DartEditor": &bintree{gitignoreDarteditor, map[string]*bintree{
		}},
		"Delphi": &bintree{gitignoreDelphi, map[string]*bintree{
		}},
		"Dreamweaver": &bintree{gitignoreDreamweaver, map[string]*bintree{
		}},
		"Drupal": &bintree{gitignoreDrupal, map[string]*bintree{
		}},
		"EPiServer": &bintree{gitignoreEpiserver, map[string]*bintree{
		}},
		"Eagle": &bintree{gitignoreEagle, map[string]*bintree{
		}},
		"Eclipse": &bintree{gitignoreEclipse, map[string]*bintree{
		}},
		"EiffelStudio": &bintree{gitignoreEiffelstudio, map[string]*bintree{
		}},
		"Elisp": &bintree{gitignoreElisp, map[string]*bintree{
		}},
		"Elixir": &bintree{gitignoreElixir, map[string]*bintree{
		}},
		"Emacs": &bintree{gitignoreEmacs, map[string]*bintree{
		}},
		"Ensime": &bintree{gitignoreEnsime, map[string]*bintree{
		}},
		"Erlang": &bintree{gitignoreErlang, map[string]*bintree{
		}},
		"Espresso": &bintree{gitignoreEspresso, map[string]*bintree{
		}},
		"ExpressionEngine": &bintree{gitignoreExpressionengine, map[string]*bintree{
		}},
		"ExtJS": &bintree{gitignoreExtjs, map[string]*bintree{
		}},
		"Fancy": &bintree{gitignoreFancy, map[string]*bintree{
		}},
		"Finale": &bintree{gitignoreFinale, map[string]*bintree{
		}},
		"FlexBuilder": &bintree{gitignoreFlexbuilder, map[string]*bintree{
		}},
		"ForceDotCom": &bintree{gitignoreForcedotcom, map[string]*bintree{
		}},
		"Fortran": &bintree{gitignoreFortran, map[string]*bintree{
		}},
		"FuelPHP": &bintree{gitignoreFuelphp, map[string]*bintree{
		}},
		"GWT": &bintree{gitignoreGwt, map[string]*bintree{
		}},
		"Gcov": &bintree{gitignoreGcov, map[string]*bintree{
		}},
		"GitBook": &bintree{gitignoreGitbook, map[string]*bintree{
		}},
		"Go": &bintree{gitignoreGo, map[string]*bintree{
		}},
		"Google Go": &bintree{gitignoreGoogleGo, map[string]*bintree{
		}},
		"Gradle": &bintree{gitignoreGradle, map[string]*bintree{
		}},
		"Grails": &bintree{gitignoreGrails, map[string]*bintree{
		}},
		"Haskell": &bintree{gitignoreHaskell, map[string]*bintree{
		}},
		"IGORPro": &bintree{gitignoreIgorpro, map[string]*bintree{
		}},
		"IPythonNotebook": &bintree{gitignoreIpythonnotebook, map[string]*bintree{
		}},
		"Idris": &bintree{gitignoreIdris, map[string]*bintree{
		}},
		"JDeveloper": &bintree{gitignoreJdeveloper, map[string]*bintree{
		}},
		"Java": &bintree{gitignoreJava, map[string]*bintree{
		}},
		"Jboss": &bintree{gitignoreJboss, map[string]*bintree{
		}},
		"Jekyll": &bintree{gitignoreJekyll, map[string]*bintree{
		}},
		"JetBrains": &bintree{gitignoreJetbrains, map[string]*bintree{
		}},
		"Joomla": &bintree{gitignoreJoomla, map[string]*bintree{
		}},
		"KDevelop4": &bintree{gitignoreKdevelop4, map[string]*bintree{
		}},
		"Kate": &bintree{gitignoreKate, map[string]*bintree{
		}},
		"KiCAD": &bintree{gitignoreKicad, map[string]*bintree{
		}},
		"Kohana": &bintree{gitignoreKohana, map[string]*bintree{
		}},
		"LabVIEW": &bintree{gitignoreLabview, map[string]*bintree{
		}},
		"Laravel": &bintree{gitignoreLaravel, map[string]*bintree{
		}},
		"Lazarus": &bintree{gitignoreLazarus, map[string]*bintree{
		}},
		"Leiningen": &bintree{gitignoreLeiningen, map[string]*bintree{
		}},
		"LemonStand": &bintree{gitignoreLemonstand, map[string]*bintree{
		}},
		"LibreOffice": &bintree{gitignoreLibreoffice, map[string]*bintree{
		}},
		"Lilypond": &bintree{gitignoreLilypond, map[string]*bintree{
		}},
		"Linux": &bintree{gitignoreLinux, map[string]*bintree{
		}},
		"Lithium": &bintree{gitignoreLithium, map[string]*bintree{
		}},
		"Lua": &bintree{gitignoreLua, map[string]*bintree{
		}},
		"LyX": &bintree{gitignoreLyx, map[string]*bintree{
		}},
		"Magento": &bintree{gitignoreMagento, map[string]*bintree{
		}},
		"Matlab": &bintree{gitignoreMatlab, map[string]*bintree{
		}},
		"Maven": &bintree{gitignoreMaven, map[string]*bintree{
		}},
		"Mercurial": &bintree{gitignoreMercurial, map[string]*bintree{
		}},
		"Mercury": &bintree{gitignoreMercury, map[string]*bintree{
		}},
		"MetaProgrammingSystem": &bintree{gitignoreMetaprogrammingsystem, map[string]*bintree{
		}},
		"MicrosoftOffice": &bintree{gitignoreMicrosoftoffice, map[string]*bintree{
		}},
		"ModelSim": &bintree{gitignoreModelsim, map[string]*bintree{
		}},
		"Momentics": &bintree{gitignoreMomentics, map[string]*bintree{
		}},
		"MonoDevelop": &bintree{gitignoreMonodevelop, map[string]*bintree{
		}},
		"Nanoc": &bintree{gitignoreNanoc, map[string]*bintree{
		}},
		"NetBeans": &bintree{gitignoreNetbeans, map[string]*bintree{
		}},
		"Nim": &bintree{gitignoreNim, map[string]*bintree{
		}},
		"Ninja": &bintree{gitignoreNinja, map[string]*bintree{
		}},
		"Node": &bintree{gitignoreNode, map[string]*bintree{
		}},
		"NotepadPP": &bintree{gitignoreNotepadpp, map[string]*bintree{
		}},
		"OCaml": &bintree{gitignoreOcaml, map[string]*bintree{
		}},
		"OSX": &bintree{gitignoreOsx, map[string]*bintree{
		}},
		"Objective-C": &bintree{gitignoreObjectiveC, map[string]*bintree{
		}},
		"Opa": &bintree{gitignoreOpa, map[string]*bintree{
		}},
		"OpenCart": &bintree{gitignoreOpencart, map[string]*bintree{
		}},
		"OracleForms": &bintree{gitignoreOracleforms, map[string]*bintree{
		}},
		"Packer": &bintree{gitignorePacker, map[string]*bintree{
		}},
		"Perl": &bintree{gitignorePerl, map[string]*bintree{
		}},
		"Phalcon": &bintree{gitignorePhalcon, map[string]*bintree{
		}},
		"PlayFramework": &bintree{gitignorePlayframework, map[string]*bintree{
		}},
		"Plone": &bintree{gitignorePlone, map[string]*bintree{
		}},
		"Prestashop": &bintree{gitignorePrestashop, map[string]*bintree{
		}},
		"Processing": &bintree{gitignoreProcessing, map[string]*bintree{
		}},
		"Python": &bintree{gitignorePython, map[string]*bintree{
		}},
		"Qooxdoo": &bintree{gitignoreQooxdoo, map[string]*bintree{
		}},
		"Qt": &bintree{gitignoreQt, map[string]*bintree{
		}},
		"R": &bintree{gitignoreR, map[string]*bintree{
		}},
		"ROS": &bintree{gitignoreRos, map[string]*bintree{
		}},
		"Rails": &bintree{gitignoreRails, map[string]*bintree{
		}},
		"Redcar": &bintree{gitignoreRedcar, map[string]*bintree{
		}},
		"Redis": &bintree{gitignoreRedis, map[string]*bintree{
		}},
		"RhodesRhomobile": &bintree{gitignoreRhodesrhomobile, map[string]*bintree{
		}},
		"Ruby": &bintree{gitignoreRuby, map[string]*bintree{
		}},
		"Rust": &bintree{gitignoreRust, map[string]*bintree{
		}},
		"SBT": &bintree{gitignoreSbt, map[string]*bintree{
		}},
		"SCons": &bintree{gitignoreScons, map[string]*bintree{
		}},
		"SVN": &bintree{gitignoreSvn, map[string]*bintree{
		}},
		"Sass": &bintree{gitignoreSass, map[string]*bintree{
		}},
		"Scala": &bintree{gitignoreScala, map[string]*bintree{
		}},
		"Scrivener": &bintree{gitignoreScrivener, map[string]*bintree{
		}},
		"Sdcc": &bintree{gitignoreSdcc, map[string]*bintree{
		}},
		"SeamGen": &bintree{gitignoreSeamgen, map[string]*bintree{
		}},
		"SketchUp": &bintree{gitignoreSketchup, map[string]*bintree{
		}},
		"SlickEdit": &bintree{gitignoreSlickedit, map[string]*bintree{
		}},
		"Stella": &bintree{gitignoreStella, map[string]*bintree{
		}},
		"SublimeText": &bintree{gitignoreSublimetext, map[string]*bintree{
		}},
		"SugarCRM": &bintree{gitignoreSugarcrm, map[string]*bintree{
		}},
		"Swift": &bintree{gitignoreSwift, map[string]*bintree{
		}},
		"Symfony": &bintree{gitignoreSymfony, map[string]*bintree{
		}},
		"SymphonyCMS": &bintree{gitignoreSymphonycms, map[string]*bintree{
		}},
		"SynopsysVCS": &bintree{gitignoreSynopsysvcs, map[string]*bintree{
		}},
		"Tags": &bintree{gitignoreTags, map[string]*bintree{
		}},
		"TeX": &bintree{gitignoreTex, map[string]*bintree{
		}},
		"TextMate": &bintree{gitignoreTextmate, map[string]*bintree{
		}},
		"Textpattern": &bintree{gitignoreTextpattern, map[string]*bintree{
		}},
		"TortoiseGit": &bintree{gitignoreTortoisegit, map[string]*bintree{
		}},
		"TurboGears2": &bintree{gitignoreTurbogears2, map[string]*bintree{
		}},
		"Typo3": &bintree{gitignoreTypo3, map[string]*bintree{
		}},
		"Umbraco": &bintree{gitignoreUmbraco, map[string]*bintree{
		}},
		"Unity": &bintree{gitignoreUnity, map[string]*bintree{
		}},
		"VVVV": &bintree{gitignoreVvvv, map[string]*bintree{
		}},
		"Vagrant": &bintree{gitignoreVagrant, map[string]*bintree{
		}},
		"Vim": &bintree{gitignoreVim, map[string]*bintree{
		}},
		"VirtualEnv": &bintree{gitignoreVirtualenv, map[string]*bintree{
		}},
		"VisualStudio": &bintree{gitignoreVisualstudio, map[string]*bintree{
		}},
		"VisualStudioCode": &bintree{gitignoreVisualstudiocode, map[string]*bintree{
		}},
		"Waf": &bintree{gitignoreWaf, map[string]*bintree{
		}},
		"WebMethods": &bintree{gitignoreWebmethods, map[string]*bintree{
		}},
		"Windows": &bintree{gitignoreWindows, map[string]*bintree{
		}},
		"WordPress": &bintree{gitignoreWordpress, map[string]*bintree{
		}},
		"Xcode": &bintree{gitignoreXcode, map[string]*bintree{
		}},
		"XilinxISE": &bintree{gitignoreXilinxise, map[string]*bintree{
		}},
		"Xojo": &bintree{gitignoreXojo, map[string]*bintree{
		}},
		"Yeoman": &bintree{gitignoreYeoman, map[string]*bintree{
		}},
		"Yii": &bintree{gitignoreYii, map[string]*bintree{
		}},
		"ZendFramework": &bintree{gitignoreZendframework, map[string]*bintree{
		}},
		"Zephir": &bintree{gitignoreZephir, map[string]*bintree{
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
        data, err := Asset(name)
        if err != nil {
                return err
        }
        info, err := AssetInfo(name)
        if err != nil {
                return err
        }
        err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
        if err != nil {
                return err
        }
        err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
        if err != nil {
                return err
        }
        err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
        if err != nil {
                return err
        }
        return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
        children, err := AssetDir(name)
        // File
        if err != nil {
                return RestoreAsset(dir, name)
        }
        // Dir
        for _, child := range children {
                err = RestoreAssets(dir, filepath.Join(name, child))
                if err != nil {
                        return err
                }
        }
        return nil
}

func _filePath(dir, name string) string {
        cannonicalName := strings.Replace(name, "\\", "/", -1)
        return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

